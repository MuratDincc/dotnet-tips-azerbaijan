{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dotnet M\u0259sl\u0259h\u0259tl\u0259ri R\u0259hb\u0259rin\u0259 Xo\u015f G\u0259ldiniz","text":"<p>\ud83c\udf89 Xo\u015f G\u0259lmisiniz!</p> <p>.NET t\u0259rtibat\u00e7\u0131lar\u0131 \u00fc\u00e7\u00fcn diqq\u0259tl\u0259 haz\u0131rlanm\u0131\u015f, q\u0131sa v\u0259 effektiv m\u0259sl\u0259h\u0259tl\u0259r kolleksiyas\u0131na xo\u015f g\u0259ldiniz. Bu r\u0259hb\u0259r, .NET ekosistemind\u0259 m\u0259hsuldarl\u0131\u011f\u0131n\u0131z\u0131 art\u0131rma\u011fa y\u00f6n\u0259lmi\u015f m\u0259sl\u0259h\u0259tl\u0259r v\u0259 \u0259sas m\u0259qamlar\u0131 \u0259hat\u0259 edir.</p> <p>Bu layih\u0259 daim yenil\u0259nir v\u0259 inki\u015faf etdirilir. G\u0259l\u0259c\u0259kd\u0259 yeni m\u0259zmunlar v\u0259 ba\u015fl\u0131qlar \u0259lav\u0259 olunma\u011fa davam ed\u0259c\u0259k.</p>"},{"location":"#mzmun-baslqlar","title":"M\u0259zmun Ba\u015fl\u0131qlar\u0131","text":"<p>Bu r\u0259hb\u0259r a\u015fa\u011f\u0131dak\u0131 ba\u015fl\u0131qlar\u0131 \u0259hat\u0259 edir:</p> <ul> <li>C#: C# dilinin inc\u0259likl\u0259ri v\u0259 praktik kod t\u00f6vsiy\u0259l\u0259ri</li> <li>.NET: Framework x\u00fcsusiyy\u0259tl\u0259ri, performans m\u0259sl\u0259h\u0259tl\u0259ri v\u0259 geni\u015f yay\u0131lm\u0131\u015f ssenaril\u0259r</li> <li>Entity Framework: M\u0259lumat \u0259ld\u0259 edilm\u0259si v\u0259 performans optimizasiyas\u0131na dair \u0259sas m\u0259qamlar</li> <li>Dapper: Performans y\u00f6n\u00fcml\u00fc m\u0259lumat \u0259ld\u0259 edilm\u0259si v\u0259 optimalla\u015fd\u0131r\u0131lm\u0131\u015f sor\u011fular \u00fc\u00e7\u00fcn praktik h\u0259ll\u0259r</li> <li>Garbage Collector: Yadda\u015f idar\u0259etm\u0259si v\u0259 yeni GC x\u00fcsusiyy\u0259tl\u0259ri</li> <li>Async/Await: Asinxron proqramla\u015fd\u0131rmada \u0259n yax\u015f\u0131 t\u0259cr\u00fcb\u0259l\u0259r</li> <li>LINQ: Performansl\u0131 LINQ istifad\u0259si v\u0259 tez-tez edil\u0259n s\u0259hvl\u0259r</li> <li>Resiliency v\u0259 X\u0259ta \u0130dar\u0259etm\u0259si: Paylanm\u0131\u015f sisteml\u0259rd\u0259 x\u0259ta tolerantl\u0131\u011f\u0131 v\u0259 sistemin dayan\u0131ql\u0131l\u0131\u011f\u0131n\u0131 art\u0131ran praktik t\u00f6vsiy\u0259l\u0259r.</li> </ul> <p>H\u0259r ba\u015fl\u0131q alt\u0131nda, \u00f6yr\u0259nm\u0259yi asanla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn q\u0131sa izahlar v\u0259 n\u00fcmun\u0259 kod par\u00e7alar\u0131 tapa bil\u0259rsiniz.</p>"},{"location":"#dstk-olun","title":"D\u0259st\u0259k Olun","text":"<p>\u018fg\u0259r layih\u0259ni faydal\u0131 hesab edirsinizs\u0259, GitHub-da \u2b50 verm\u0259kl\u0259 d\u0259st\u0259k olma\u011f\u0131 unutmay\u0131n!</p>"},{"location":"#laq","title":"\u018flaq\u0259","text":"<p>Sual v\u0259 ya t\u0259klifl\u0259riniz varsa, m\u0259n\u0259 m\u00fcraci\u0259t ed\u0259 bil\u0259rsiniz:</p> <p> </p> <p>\ud83d\ude80 G\u0259lin birg\u0259 kod keyfiyy\u0259tinizi y\u00fcks\u0259ld\u0259k!</p> <p>H\u00f6rm\u0259tl\u0259, Murat</p>"},{"location":"csharp/async-streams/","title":"Async Streams","text":"<p>Async stream-l\u0259r data\u2019n\u0131 asinxron ax\u0131n \u015f\u0259klind\u0259 i\u015fl\u0259m\u0259k \u00fc\u00e7\u00fcn g\u00fccl\u00fc bir vasit\u0259dir. D\u00fczg\u00fcn istifad\u0259 edildikd\u0259 performans\u0131 art\u0131r\u0131r v\u0259 kodunuzu daha s\u0259m\u0259r\u0259li edir. Ancaq, yanl\u0131\u015f istifad\u0259l\u0259r performans probleml\u0259rin\u0259 v\u0259 g\u00f6zl\u0259nilm\u0259z davran\u0131\u015flara s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/async-streams/#1-asinxron-axnlarn-yanls-istifadsi","title":"1. Asinxron Ax\u0131nlar\u0131n Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn data\u2019n\u0131 yadda\u015fda saxlayaraq i\u015fl\u0259m\u0259k.</p> <pre><code>var data = await GetDataAsync();\nforeach (var item in data)\n{\n    Console.WriteLine(item);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Asinxron data\u2019n\u0131 <code>await foreach</code> vasit\u0259sil\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>await foreach (var item in GetDataAsync())\n{\n    Console.WriteLine(item);\n}\n</code></pre>"},{"location":"csharp/async-streams/#2-xtalarn-idarsini-nzr-almamaq","title":"2. X\u0259talar\u0131n \u0130dar\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Asinxron ax\u0131nlar zaman\u0131 x\u0259talar\u0131 g\u00f6zard\u0131 etm\u0259k.</p> <pre><code>await foreach (var data in GetDataAsync())\n{\n    ProcessData(data); // X\u0259talar\u0131 n\u0259z\u0259r\u0259 alm\u0131r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: X\u0259talar\u0131 <code>try-catch</code> bloku il\u0259 idar\u0259 etm\u0259k.</p> <pre><code>try\n{\n    await foreach (var data in GetDataAsync())\n    {\n        ProcessData(data);\n    }\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"X\u0259ta: {ex.Message}\");\n}\n</code></pre>"},{"location":"csharp/async-streams/#3-performans-optimallasdrmamaq","title":"3. Performans\u0131 Optimalla\u015fd\u0131rmamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn elementl\u0259ri eyni anda i\u015fl\u0259m\u0259k.</p> <pre><code>await foreach (var item in GetLargeDataAsync())\n{\n    ProcessItem(item);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Ax\u0131n\u0131 erk\u0259n dayand\u0131rma\u011f\u0131n m\u00fcmk\u00fcn oldu\u011fu hallarda d\u00f6vr\u0259ni vaxt\u0131nda sonland\u0131rmaq.</p> <pre><code>await foreach (var item in GetLargeDataAsync())\n{\n    if (ShouldStopProcessing(item)) break;\n    ProcessItem(item);\n}\n</code></pre>"},{"location":"csharp/async-streams/#4-cancellationtoken-istifadsini-nzr-almamaq","title":"4. <code>CancellationToken</code> \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Asinxron ax\u0131nlarda l\u0259\u011fv d\u0259st\u0259yini g\u00f6zard\u0131 etm\u0259k.</p> <pre><code>await foreach (var item in GetDataAsync())\n{\n    Console.WriteLine(item);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>CancellationToken</code> istifad\u0259 ed\u0259r\u0259k \u0259m\u0259liyyat\u0131n l\u0259\u011fvini t\u0259min etm\u0259k.</p> <pre><code>await foreach (var item in GetDataAsync().WithCancellation(cancellationToken))\n{\n    Console.WriteLine(item);\n}\n</code></pre>"},{"location":"csharp/async-streams/#5-lazmsz-verilrin-filtrlnmsi","title":"5. Laz\u0131ms\u0131z Veril\u0259rin Filtrl\u0259nm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ax\u0131ndan al\u0131nan m\u0259lumatlar\u0131 d\u00f6vr\u0259nin daxilind\u0259 filtrasiya etm\u0259k.</p> <pre><code>await foreach (var item in GetDataAsync())\n{\n    if (item.IsRelevant)\n    {\n        Console.WriteLine(item);\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Ax\u0131n zaman\u0131 veril\u0259ri filtrl\u0259m\u0259yi optimalla\u015fd\u0131rmaq.</p> <pre><code>await foreach (var item in GetFilteredDataAsync())\n{\n    Console.WriteLine(item);\n}\n</code></pre>"},{"location":"csharp/async-streams/#6-mustqil-mliyyatlar-sinxron-icra-etmk","title":"6. M\u00fcst\u0259qil \u018fm\u0259liyyatlar\u0131 Sinxron \u0130cra Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcst\u0259qil \u0259m\u0259liyyatlar\u0131 ard\u0131c\u0131l \u015f\u0259kild\u0259 icra etm\u0259k.</p> <pre><code>await foreach (var item in GetDataAsync())\n{\n    await ProcessItemAsync(item); // M\u00fcst\u0259qil \u0259m\u0259liyyatlar ard\u0131c\u0131l i\u015fl\u0259yir\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018fm\u0259liyyatlar\u0131 paralel icra etm\u0259k \u00fc\u00e7\u00fcn <code>Task.WhenAll</code> istifad\u0259 edin.</p> <pre><code>var tasks = new List&lt;Task&gt;();\nawait foreach (var item in GetDataAsync())\n{\n    tasks.Add(ProcessItemAsync(item));\n}\nawait Task.WhenAll(tasks);\n</code></pre>"},{"location":"csharp/deconstruction/","title":"Deconstruction","text":"<p>Deconstruction obyektin komponentl\u0259rini hiss\u0259l\u0259r\u0259 ay\u0131raraq daha oxunaql\u0131 v\u0259 nizaml\u0131 kod yazma\u011fa imkan yarad\u0131r. Amma, yanl\u0131\u015f istifad\u0259l\u0259r kodun m\u00fcr\u0259kk\u0259bl\u0259\u015fm\u0259sin\u0259 v\u0259 s\u0259hvl\u0259r\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/deconstruction/#1-deconstruction-istifadsini-nzr-almamaq","title":"1. Deconstruction \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Deconstruction yerin\u0259 manual t\u0259yin etm\u0259l\u0259r etm\u0259k.</p> <pre><code>var point = GetPoint();\nvar x = point.X;\nvar y = point.Y;\nConsole.WriteLine($\"X: {x}, Y: {y}\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Deconstruction istifad\u0259 ed\u0259r\u0259k daha q\u0131sa v\u0259 oxunaql\u0131 kod yaz\u0131n.</p> <pre><code>var (x, y) = GetPoint();\nConsole.WriteLine($\"X: {x}, Y: {y}\");\n</code></pre> <p>Metod Tan\u0131m\u0131: <pre><code>public (int X, int Y) GetPoint() =&gt; (10, 20);\n</code></pre></p>"},{"location":"csharp/deconstruction/#2-deconstruction-ucun-mnasz-adlar-istifad-etmk","title":"2. Deconstruction \u00dc\u00e7\u00fcn M\u0259nas\u0131z Adlar \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Deconstruction-da uy\u011funsuz adlardan istifad\u0259 etm\u0259k.</p> <pre><code>var (a, b) = GetDimensions();\nConsole.WriteLine($\"Width: {a}, Height: {b}\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Deconstruction zaman\u0131 m\u0259nal\u0131 d\u0259yi\u015f\u0259n adlar\u0131ndan istifad\u0259 edin.</p> <pre><code>var (width, height) = GetDimensions();\nConsole.WriteLine($\"Width: {width}, Height: {height}\");\n</code></pre> <p>Metod Tan\u0131m\u0131: <pre><code>public (int Width, int Height) GetDimensions() =&gt; (1920, 1080);\n</code></pre></p>"},{"location":"csharp/deconstruction/#3-cox-murkkb-strukturlar-istifad-etmk","title":"3. \u00c7ox M\u00fcr\u0259kk\u0259b Strukturlar \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b tipl\u0259rd\u0259 deconstruction etm\u0259y\u0259 \u00e7al\u0131\u015fmaq.</p> <pre><code>var data = GetComplexData();\nvar a = data.Item1;\nvar b = data.Item2.X;\nvar c = data.Item2.Y;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Deconstruction il\u0259 daha nizaml\u0131 bir struktur istifad\u0259 edin.</p> <pre><code>var (id, (x, y)) = GetComplexData();\nConsole.WriteLine($\"ID: {id}, X: {x}, Y: {y}\");\n</code></pre> <p>Metod Tan\u0131m\u0131: <pre><code>public (int ID, (int X, int Y) Coordinates) GetComplexData() =&gt; (1, (10, 20));\n</code></pre></p>"},{"location":"csharp/deconstruction/#4-lazmsz-deconstruction-etmk","title":"4. Laz\u0131ms\u0131z Deconstruction Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sad\u0259 \u0259m\u0259liyyatlar \u00fc\u00e7\u00fcn laz\u0131ms\u0131z deconstruction.</p> <pre><code>var (x, y) = (10, 20);\nConsole.WriteLine($\"X: {x}, Y: {y}\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131ms\u0131z deconstruction-dan \u00e7\u0259kinin.</p> <pre><code>var point = (10, 20);\nConsole.WriteLine($\"X: {point.Item1}, Y: {point.Item2}\");\n</code></pre>"},{"location":"csharp/deconstruction/#5-nullable-tiplri-deconstruction-il-yanls-idar-etmk","title":"5. Nullable Tipl\u0259ri Deconstruction il\u0259 Yanl\u0131\u015f \u0130dar\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Nullable tipl\u0259rd\u0259 null yoxlamas\u0131 etm\u0259m\u0259k.</p> <pre><code>var (x, y) = GetNullablePoint(); // S\u0259hv riski\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Nullable tipl\u0259rd\u0259 t\u0259hl\u00fck\u0259siz deconstruction istifad\u0259 edin.</p> <pre><code>var point = GetNullablePoint();\nif (point.HasValue)\n{\n    var (x, y) = point.Value;\n    Console.WriteLine($\"X: {x}, Y: {y}\");\n}\nelse\n{\n    Console.WriteLine(\"Point is null.\");\n}\n</code></pre> <p>Metod Tan\u0131m\u0131: <pre><code>public (int X, int Y)? GetNullablePoint() =&gt; null;\n</code></pre></p>"},{"location":"csharp/default-interface-methods/","title":"Default Interface Methods","text":"<p>Default interface methods, C# 8.0 il\u0259 t\u0259qdim olunan bir x\u00fcsusiyy\u0259tdir v\u0259 interfeysl\u0259r\u0259 standart metod t\u0259yinatlar\u0131 \u0259lav\u0259 etm\u0259y\u0259 imkan verir. Bu, interfeysl\u0259rin geriy\u0259 uy\u011funlu\u011funu art\u0131r\u0131r, lakin d\u00fczg\u00fcn istifad\u0259 edilm\u0259dikd\u0259 kodu m\u00fcr\u0259kk\u0259bl\u0259\u015fdir\u0259 v\u0259 bax\u0131m\u0131n\u0131 \u00e7\u0259tinl\u0259\u015fdir\u0259 bil\u0259r.</p>"},{"location":"csharp/default-interface-methods/#1-default-metodlar-grksiz-yer-istifad-etmk","title":"1. Default Metodlar\u0131 G\u0259r\u0259ksiz Yer\u0259 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Default metodlar\u0131 \u0259sas sinif funksionall\u0131qlar\u0131 \u00fc\u00e7\u00fcn istifad\u0259 etm\u0259k.</p> <pre><code>public interface ILogger\n{\n    void Log(string message);\n\n    void LogError(string message) // G\u0259r\u0259ksiz bir default metod\n    {\n        Console.WriteLine($\"Error: {message}\");\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Default metodlar\u0131 yaln\u0131z geriy\u0259 uy\u011funluq m\u0259qs\u0259dil\u0259 istifad\u0259 edin.</p> <pre><code>public interface ILogger\n{\n    void Log(string message);\n\n    void LogError(string message)\n    {\n        Log($\"Error: {message}\");\n    }\n}\n</code></pre>"},{"location":"csharp/default-interface-methods/#2-murkkb-is-mntiqi-lav-etmk","title":"2. M\u00fcr\u0259kk\u0259b \u0130\u015f M\u0259ntiqi \u018flav\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Default metodlarda m\u00fcr\u0259kk\u0259b i\u015f m\u0259ntiqi t\u0259yin etm\u0259k.</p> <pre><code>public interface IDataProcessor\n{\n    void ProcessData(string data);\n\n    void ValidateData(string data)\n    {\n        if (string.IsNullOrEmpty(data))\n        {\n            throw new ArgumentException(\"Data is required.\");\n        }\n        // Daha m\u00fcr\u0259kk\u0259b \u0259m\u0259liyyatlar...\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b m\u0259ntiqi sinifl\u0259rd\u0259 v\u0259 ya ayr\u0131 prosedurlarda idar\u0259 edin.</p> <pre><code>public interface IDataProcessor\n{\n    void ProcessData(string data);\n\n    void ValidateData(string data)\n    {\n        if (string.IsNullOrEmpty(data))\n        {\n            throw new ArgumentException(\"Data is required.\");\n        }\n    }\n}\n</code></pre>"},{"location":"csharp/default-interface-methods/#3-default-metodlarla-interfeysi-sisirmk","title":"3. Default Metodlarla Interfeysi \u015ei\u015firm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Interfeysl\u0259r\u0259 h\u0259ddind\u0259n art\u0131q sayda default metod \u0259lav\u0259 etm\u0259k.</p> <pre><code>public interface IReportGenerator\n{\n    void GenerateReport();\n    void ExportReport(string format) { Console.WriteLine($\"Exporting in {format} format.\"); }\n    void PrintReport() { Console.WriteLine(\"Printing report.\"); }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Interfeysi sad\u0259 saxlay\u0131n v\u0259 laz\u0131m olduqda yeni interfeysl\u0259r yarad\u0131n.</p> <pre><code>public interface IReportGenerator\n{\n    void GenerateReport();\n    void ExportReport(string format)\n    {\n        Console.WriteLine($\"Exporting in {format} format.\");\n    }\n}\n</code></pre>"},{"location":"csharp/default-interface-methods/#4-default-metodlarn-ustunluklrindn-tam-istifad-etmmk","title":"4. Default Metodlar\u0131n \u00dcst\u00fcnl\u00fckl\u0259rind\u0259n Tam \u0130stifad\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn interfeys implementasiyalar\u0131nda default metodlardan faydalanmamaq.</p> <pre><code>public interface INotifier\n{\n    void Notify(string message);\n\n    void NotifyAll(string[] messages)\n    {\n        foreach (var message in messages)\n        {\n            Notify(message);\n        }\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Default metodlar\u0131n \u00fcst\u00fcnl\u00fckl\u0259rind\u0259n b\u00fct\u00fcn implementasiyalarda faydalan\u0131n.</p> <pre><code>public interface INotifier\n{\n    void Notify(string message);\n\n    void NotifyAll(string[] messages)\n    {\n        foreach (var message in messages)\n        {\n            Notify(message);\n        }\n    }\n}\n</code></pre>"},{"location":"csharp/default-interface-methods/#5-test-edil-bilnliyi-nzr-almamaq","title":"5. Test Edil\u0259 Bil\u0259nliyi N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Default metodlar\u0131 test bax\u0131m\u0131ndan \u00e7\u0259tinl\u0259\u015fdirm\u0259k.</p> <pre><code>public interface IService\n{\n    void PerformAction();\n\n    void DefaultAction()\n    {\n        Console.WriteLine(\"Default action performed.\");\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Default metodlar\u0131 bir baza sinfi v\u0259 ya \u201cdependency\u201d vasit\u0259sil\u0259 test edil\u0259 bil\u0259n hala g\u0259tirin.</p> <pre><code>public interface IService\n{\n    void PerformAction();\n\n    void DefaultAction()\n    {\n        PerformAction();\n    }\n}\n</code></pre>"},{"location":"csharp/expression-bodied-members/","title":"Expression-Bodied Members","text":"<p>Expression-bodied members, C# dilind\u0259 q\u0131sa v\u0259 y\u0131\u011fcam kod yazma\u011fa imkan verir. Lakin, yanl\u0131\u015f istifad\u0259 kodun oxunaql\u0131\u011f\u0131n\u0131 v\u0259 d\u0259st\u0259kl\u0259nm\u0259sini \u00e7\u0259tinl\u0259\u015fdir\u0259 bil\u0259r.</p>"},{"location":"csharp/expression-bodied-members/#1-sad-metodlar-ucun-lazmsz-tam-govdlr-yazmaq","title":"1. Sad\u0259 Metodlar \u00dc\u00e7\u00fcn Laz\u0131ms\u0131z Tam G\u00f6vd\u0259l\u0259r Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sad\u0259 gerid\u00f6n\u00fc\u015f \u0259m\u0259liyyatlar\u0131n\u0131 tam metod g\u00f6vd\u0259si il\u0259 yazmaq.</p> <pre><code>public string GetName()\n{\n    return \"Murat\";\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Expression-bodied members il\u0259 metodlar\u0131 q\u0131sald\u0131n.</p> <pre><code>public string GetName() =&gt; \"Murat\";\n</code></pre>"},{"location":"csharp/expression-bodied-members/#2-cox-murkkb-ifadlri-expression-bodied-members-il-yazmaq","title":"2. \u00c7ox M\u00fcr\u0259kk\u0259b \u0130fad\u0259l\u0259ri Expression-Bodied Members il\u0259 Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7ox s\u0259tirli ifad\u0259l\u0259ri bir expression-bodied member il\u0259 yazmaq.</p> <pre><code>public string GetFullName(string firstName, string lastName) =&gt; \n    $\"{firstName} {lastName}\".ToUpper() + $\" Length: {firstName.Length + lastName.Length}\";\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b ifad\u0259l\u0259ri bir ne\u00e7\u0259 s\u0259tirli \u015f\u0259kild\u0259 a\u00e7\u0131q yaz\u0131n.</p> <pre><code>public string GetFullName(string firstName, string lastName)\n{\n    var fullName = $\"{firstName} {lastName}\";\n    return $\"{fullName.ToUpper()} Length: {fullName.Length}\";\n}\n</code></pre>"},{"location":"csharp/expression-bodied-members/#3-sad-property-lr-ucun-tam-govdlr-yazmaq","title":"3. Sad\u0259 Property-l\u0259r \u00fc\u00e7\u00fcn Tam G\u00f6vd\u0259l\u0259r Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Property-l\u0259r \u00fc\u00e7\u00fcn tam metod g\u00f6vd\u0259si istifad\u0259 etm\u0259k.</p> <pre><code>private string _name;\n\npublic string Name\n{\n    get { return _name; }\n    set { _name = value; }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Expression-bodied members il\u0259 property-l\u0259ri q\u0131sald\u0131n.</p> <pre><code>public string Name { get; set; }\n</code></pre>"},{"location":"csharp/expression-bodied-members/#4-exception-qaytarma-mliyyatlarnda-expression-bodied-istifadsini-yanls-etmk","title":"4. Exception Qaytarma \u018fm\u0259liyyatlar\u0131nda Expression-Bodied \u0130stifad\u0259sini Yanl\u0131\u015f Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Exception qaytarma \u0259m\u0259liyyatlar\u0131n\u0131 expression-bodied member il\u0259 m\u00fcr\u0259kk\u0259bl\u0259\u015fdirm\u0259k.</p> <pre><code>public string Name =&gt; throw new ArgumentNullException(nameof(Name), \"Name is required.\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Exception qaytarma \u0259m\u0259liyyatlar\u0131n\u0131 a\u00e7\u0131q \u015f\u0259kild\u0259 yaz\u0131n.</p> <pre><code>public string Name\n{\n    get =&gt; throw new ArgumentNullException(nameof(Name), \"Name is required.\");\n}\n</code></pre>"},{"location":"csharp/expression-bodied-members/#5-constructor-larda-expression-bodied-istifadsini-sui-istifad-etmk","title":"5. Constructor-larda Expression-Bodied \u0130stifad\u0259sini Sui-istifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Constructor-lar\u0131 laz\u0131ms\u0131z yer\u0259 expression-bodied tipli yazmaq.</p> <pre><code>public Person(string name) =&gt; Name = name ?? throw new ArgumentNullException(nameof(name));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Constructor-larda expression-bodied istifad\u0259sini sad\u0259 saxlay\u0131n.</p> <pre><code>public Person(string name)\n{\n    Name = name ?? throw new ArgumentNullException(nameof(name));\n}\n</code></pre>"},{"location":"csharp/expression-bodied-members/#6-sad-mliyyatlar-ucun-tam-govdlr-yazmaq","title":"6. Sad\u0259 \u018fm\u0259liyyatlar \u00dc\u00e7\u00fcn Tam G\u00f6vd\u0259l\u0259r Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sad\u0259 property-l\u0259r \u00fc\u00e7\u00fcn tam metod g\u00f6vd\u0259si istifad\u0259 etm\u0259k.</p> <pre><code>public string Description\n{\n    get { return \"A short description.\"; }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Expression-bodied members il\u0259 sad\u0259 \u0259m\u0259liyyatlar\u0131 optimalla\u015fd\u0131r\u0131n.</p> <pre><code>public string Description =&gt; \"A short description.\";\n</code></pre>"},{"location":"csharp/extension-methods/","title":"Extension Methods","text":"<p>Extension methods, m\u00f6vcud sinifl\u0259r\u0259 v\u0259 ya interfeysl\u0259r\u0259 yeni metodlar \u0259lav\u0259 etm\u0259yin effektiv bir yoludur. Ancaq, yanl\u0131\u015f istifad\u0259 hallar\u0131 kodun anla\u015f\u0131ql\u0131q v\u0259 bax\u0131m\u0131n\u0131 \u00e7\u0259tinl\u0259\u015fdir\u0259 bil\u0259r.</p>"},{"location":"csharp/extension-methods/#1-extension-methodlar-yanls-sahd-istifad-etmk","title":"1. Extension Methodlar\u0131 Yanl\u0131\u015f Sah\u0259d\u0259 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Extension method\u2019lar\u0131 laz\u0131ms\u0131z yer\u0259 \u00fcmumi (<code>global</code>) etm\u0259k.</p> <pre><code>public static class GlobalExtensions\n{\n    public static string ToUpperCase(this string input) =&gt; input.ToUpper();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Extension method\u2019lar\u0131 m\u00fc\u0259yy\u0259n bir kontekst v\u0259 ya m\u0259qs\u0259d\u0259 y\u00f6n\u0259lik sah\u0259 il\u0259 m\u0259hdudla\u015fd\u0131r\u0131n.</p> <pre><code>public static class StringExtensions\n{\n    public static string ToUpperCase(this string input) =&gt; input.ToUpper();\n}\n</code></pre>"},{"location":"csharp/extension-methods/#2-extension-methodlar-yanls-adlandrmaq","title":"2. Extension Methodlar\u0131 Yanl\u0131\u015f Adland\u0131rmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Extension method\u2019lara m\u0259nas\u0131z adlar verm\u0259k.</p> <pre><code>public static string Func(this string input) =&gt; input.ToUpper();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Extension method\u2019lara m\u0259nal\u0131 v\u0259 izahl\u0131 adlar verin.</p> <pre><code>public static string ToUpperCase(this string input) =&gt; input.ToUpper();\n</code></pre>"},{"location":"csharp/extension-methods/#3-extension-methodlarda-lazmsz-yoxlamalar","title":"3. Extension Methodlarda Laz\u0131ms\u0131z Yoxlamalar","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131m olmayan null yoxlamalar\u0131 etm\u0259k.</p> <pre><code>public static string SafeToUpperCase(this string input)\n{\n    if (input == null) return string.Empty;\n    return input.ToUpper();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131ms\u0131z yoxlamalardan \u00e7\u0259kinin v\u0259 istifad\u0259\u00e7ini y\u00f6nl\u0259ndirin.</p> <pre><code>public static string ToUpperCase(this string input) =&gt; input?.ToUpper() ?? throw new ArgumentNullException(nameof(input));\n</code></pre>"},{"location":"csharp/extension-methods/#4-lazmsz-parametrlr-istifad-etmk","title":"4. Laz\u0131ms\u0131z Parametrl\u0259r \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Extension method\u2019da laz\u0131ms\u0131z \u0259lav\u0259 parametrl\u0259r istifad\u0259 etm\u0259k.</p> <pre><code>public static string AppendSuffix(this string input, string suffix)\n{\n    return input + suffix;\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131ms\u0131z parametrl\u0259rd\u0259n \u00e7\u0259kinin.</p> <pre><code>public static string AppendSuffix(this string input, string suffix = \"Default\")\n{\n    return input + suffix;\n}\n</code></pre>"},{"location":"csharp/extension-methods/#5-extension-methodlar-murkkblsdirmk","title":"5. Extension Methodlar\u0131 M\u00fcr\u0259kk\u0259bl\u0259\u015fdirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7ox funksionall\u0131\u011f\u0131 t\u0259k bir extension method\u2019da birl\u0259\u015fdirm\u0259k.</p> <pre><code>public static string TransformText(this string input, bool toUpper, bool addSuffix)\n{\n    var result = input;\n    if (toUpper) result = result.ToUpper();\n    if (addSuffix) result += \"_Suffix\";\n    return result;\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Funksiyalar\u0131 bir ne\u00e7\u0259 extension method\u2019a b\u00f6l\u00fcn.</p> <pre><code>public static string ToUpperCase(this string input) =&gt; input.ToUpper();\n\npublic static string AddSuffix(this string input, string suffix) =&gt; input + suffix;\n</code></pre>"},{"location":"csharp/extension-methods/#6-extension-methodlarn-istifadsini-dokunmentasiya-etmk","title":"6. Extension Methodlar\u0131n \u0130stifad\u0259sini Dokunmentasiya Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Extension method\u2019lar\u0131n nec\u0259 istifad\u0259 edil\u0259c\u0259yini a\u00e7\u0131qlamamaq.</p> <pre><code>public static string AddPrefix(this string input, string prefix)\n{\n    return prefix + input;\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Extension method\u2019lar\u0131n istifad\u0259sini \u015f\u0259rhl\u0259rl\u0259 a\u00e7\u0131qlay\u0131n.</p> <pre><code>/// &lt;summary&gt;\n/// Veril\u0259n m\u0259tnin \u0259vv\u0259lin\u0259 bir prefiks \u0259lav\u0259 edir.\n/// &lt;/summary&gt;\n/// &lt;param name=\"input\"&gt;Orijinal m\u0259tn.&lt;/param&gt;\n/// &lt;param name=\"prefix\"&gt;\u018flav\u0259 edil\u0259c\u0259k prefiks.&lt;/param&gt;\n/// &lt;returns&gt;Prefiks \u0259lav\u0259 edilmi\u015f m\u0259tn.&lt;/returns&gt;\npublic static string AddPrefix(this string input, string prefix)\n{\n    return prefix + input;\n}\n</code></pre>"},{"location":"csharp/immutable-collections/","title":"Immutable Collections","text":"<p>Immutable collections, m\u0259lumat strukturlar\u0131nda d\u0259yi\u015fiklik edilm\u0259sini \u0259ng\u0259ll\u0259y\u0259r\u0259k m\u0259lumat\u0131n tutarl\u0131l\u0131\u011f\u0131n\u0131 t\u0259min edir. Performans \u00fcst\u00fcnl\u00fckl\u0259ri v\u0259 eyni zamanda i\u015fl\u0259m\u0259l\u0259rd\u0259 etibarl\u0131l\u0131q t\u0259qdim edir. Ancaq, yanl\u0131\u015f istifad\u0259si laz\u0131ms\u0131z yadda\u015f istifad\u0259sin\u0259 v\u0259 m\u00fcr\u0259kk\u0259bliy\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/immutable-collections/#1-immutable-collections-yerin-mutable-collections-istifad-etmk","title":"1. Immutable Collections Yerin\u0259 Mutable Collections \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u0259lumat tutarl\u0131l\u0131\u011f\u0131 t\u0259l\u0259b ed\u0259n hallarda mutable kolleksiyalar\u0131 istifad\u0259 etm\u0259k.</p> <pre><code>var list = new List&lt;int&gt; { 1, 2, 3 };\nlist.Add(4); // Siyah\u0131 d\u0259yi\u015fdiril\u0259 bil\u0259r\nConsole.WriteLine(string.Join(\", \", list));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: D\u0259yi\u015fdiril\u0259 bilm\u0259y\u0259n bir kolleksiya istifad\u0259 ed\u0259r\u0259k m\u0259lumat tutarl\u0131l\u0131\u011f\u0131n\u0131 qoruyun.</p> <pre><code>var immutableList = ImmutableList.Create(1, 2, 3);\nvar newList = immutableList.Add(4); // Yeni bir kolleksiya yarad\u0131l\u0131r\nConsole.WriteLine(string.Join(\", \", newList));\n</code></pre>"},{"location":"csharp/immutable-collections/#2-performans-gozard-etmk","title":"2. Performans\u0131 G\u00f6zard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat d\u0259stl\u0259rind\u0259 laz\u0131ms\u0131z immutable d\u00f6n\u00fc\u015f\u00fcml\u0259r etm\u0259k.</p> <pre><code>var list = new List&lt;int&gt;();\nfor (int i = 0; i &lt; 1000; i++)\n{\n    list = list.Append(i).ToList(); // H\u0259r d\u00f6n\u00fc\u015f\u00fcmd\u0259 yeni bir siyah\u0131 yarad\u0131l\u0131r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Immutable kolleksiyalarla performans dostu \u0259m\u0259liyyatlar h\u0259yata ke\u00e7irin.</p> <pre><code>var builder = ImmutableList.CreateBuilder&lt;int&gt;();\nfor (int i = 0; i &lt; 1000; i++)\n{\n    builder.Add(i);\n}\nvar immutableList = builder.ToImmutable();\nConsole.WriteLine(string.Join(\", \", immutableList));\n</code></pre>"},{"location":"csharp/immutable-collections/#3-immutable-collections-yanls-anlamaq","title":"3. Immutable Collections\u2019\u0131 Yanl\u0131\u015f Anlamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Immutable kolleksiyan\u0131n m\u00f6vcud kolleksiyan\u0131 d\u0259yi\u015fdirdiyini d\u00fc\u015f\u00fcnm\u0259k.</p> <pre><code>var immutableList = ImmutableList.Create(1, 2, 3);\nimmutableList.Add(4); // Yeni kolleksiya yarad\u0131r, amma t\u0259yin edilmir\nConsole.WriteLine(string.Join(\", \", immutableList)); // K\u00f6hn\u0259 siyah\u0131\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: D\u0259yi\u015fiklikl\u0259ri yeni bir kolleksiyaya t\u0259yin edin.</p> <pre><code>var immutableList = ImmutableList.Create(1, 2, 3);\nvar updatedList = immutableList.Add(4);\nConsole.WriteLine(string.Join(\", \", updatedList)); // Yenil\u0259nmi\u015f siyah\u0131\n</code></pre>"},{"location":"csharp/immutable-collections/#4-lazmsz-mlumat-kopyalama","title":"4. Laz\u0131ms\u0131z M\u0259lumat Kopyalama","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r \u0259m\u0259liyyatda yeni bir immutable kolleksiya yaratmaq.</p> <pre><code>var immutableList = ImmutableList.Create&lt;int&gt;();\nfor (int i = 0; i &lt; 100; i++)\n{\n    immutableList = immutableList.Add(i); // H\u0259r d\u0259f\u0259 yeni bir siyah\u0131 yarad\u0131l\u0131r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Builder obyekti il\u0259 laz\u0131ms\u0131z kopyalamalardan qa\u00e7\u0131n\u0131n.</p> <pre><code>var builder = ImmutableList.CreateBuilder&lt;int&gt;();\nfor (int i = 0; i &lt; 100; i++)\n{\n    builder.Add(i);\n}\nvar immutableList = builder.ToImmutable();\nConsole.WriteLine(string.Join(\", \", immutableList));\n</code></pre>"},{"location":"csharp/immutable-collections/#5-yanls-kolleksiya-novunu-istifad-etmk","title":"5. Yanl\u0131\u015f Kolleksiya N\u00f6v\u00fcn\u00fc \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ehtiyaca uy\u011fun olmayan immutable kolleksiya n\u00f6vl\u0259rini istifad\u0259 etm\u0259k.</p> <pre><code>var immutableStack = ImmutableStack&lt;int&gt;.Empty;\nimmutableStack = immutableStack.Push(1);\nimmutableStack = immutableStack.Push(2);\nConsole.WriteLine(immutableStack.Peek()); // 2\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018fm\u0259liyyat n\u00f6v\u00fcn\u0259 uy\u011fun immutable kolleksiya se\u00e7in.</p> <pre><code>var immutableQueue = ImmutableQueue&lt;int&gt;.Empty;\nimmutableQueue = immutableQueue.Enqueue(1);\nimmutableQueue = immutableQueue.Enqueue(2);\nConsole.WriteLine(immutableQueue.Peek()); // 1\n</code></pre>"},{"location":"csharp/local-functions/","title":"Local Functions","text":"<p>Local functions, bir metod daxilind\u0259 t\u0259yin olunan v\u0259 yaln\u0131z h\u0259min metod daxilind\u0259 istifad\u0259 olunan ki\u00e7ik funksiyalard\u0131r. Bu, kodun oxunaql\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131r, laz\u0131ms\u0131z metod t\u0259yinatlar\u0131n\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131r v\u0259 \u0259hat\u0259 dair\u0259sini daraldaraq kodun daha s\u0259liq\u0259li olmas\u0131n\u0131 t\u0259min edir. Lakin, yanl\u0131\u015f istifad\u0259l\u0259r performans probleml\u0259rin\u0259 v\u0259 m\u00fcr\u0259kk\u0259bliy\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/local-functions/#1-lazmsz-local-function-istifadsi","title":"1. Laz\u0131ms\u0131z Local Function \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Vacib bir t\u0259l\u0259bat olmadan local function t\u0259yin etm\u0259k.</p> <pre><code>void PerformCalculation()\n{\n    void Helper()\n    {\n        Console.WriteLine(\"Hesablama tamamland\u0131.\");\n    }\n    Helper();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Local functions yaln\u0131z kodun m\u0259nas\u0131n\u0131 v\u0259 oxunaql\u0131l\u0131\u011f\u0131n\u0131 art\u0131rmaq \u00fc\u00e7\u00fcn istifad\u0259 edilm\u0259lidir.</p> <pre><code>void PerformCalculation()\n{\n    void AddNumbers(int x, int y) =&gt; Console.WriteLine($\"N\u0259tic\u0259: {x + y}\");\n    AddNumbers(5, 10);\n}\n</code></pre>"},{"location":"csharp/local-functions/#2-parametr-kecidlrini-yanls-istifad-etmk","title":"2. Parametr Ke\u00e7idl\u0259rini Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z parametr ke\u00e7idl\u0259ri etm\u0259k.</p> <pre><code>void PrintMessage(string message)\n{\n    void Display(string msg) =&gt; Console.WriteLine(msg);\n    Display(message);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131ms\u0131z parametr ke\u00e7idl\u0259rind\u0259n \u00e7\u0259kinin.</p> <pre><code>void PrintMessage(string message)\n{\n    void Display() =&gt; Console.WriteLine(message);\n    Display();\n}\n</code></pre>"},{"location":"csharp/local-functions/#3-local-function-yenidn-istifad-edil-biln-hala-gtirmmk","title":"3. Local Function\u2019\u0131 Yenid\u0259n \u0130stifad\u0259 Edil\u0259 Bil\u0259n Hala G\u0259tirm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Local function\u2019\u0131 yenid\u0259n istifad\u0259 edil\u0259 bil\u0259n kod par\u00e7alar\u0131 \u00fc\u00e7\u00fcn istifad\u0259 etm\u0259k.</p> <pre><code>void ProcessData(int data)\n{\n    void MultiplyByTwo(int value) =&gt; Console.WriteLine(value * 2);\n    MultiplyByTwo(data);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yenid\u0259n istifad\u0259 edil\u0259 bil\u0259n kodlar \u00fc\u00e7\u00fcn metodlar \u0259v\u0259zin\u0259 local function istifad\u0259sini m\u0259hdudla\u015fd\u0131rmaq.</p> <pre><code>void MultiplyByTwo(int value) =&gt; Console.WriteLine(value * 2);\nMultiplyByTwo(5);\nMultiplyByTwo(10);\n</code></pre>"},{"location":"csharp/local-functions/#4-xtalar-idar-etmmk","title":"4. X\u0259talar\u0131 \u0130dar\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Local function\u2019larda x\u0259talar\u0131 n\u0259z\u0259r\u0259 almamaq.</p> <pre><code>void PerformDivision(int x, int y)\n{\n    int Divide() =&gt; x / y; // X\u0259ta riski\n    Console.WriteLine(Divide());\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Local function daxilind\u0259 x\u0259ta idar\u0259sini t\u0259min edin.</p> <pre><code>void PerformDivision(int x, int y)\n{\n    int Divide()\n    {\n        if (y == 0) throw new DivideByZeroException(\"S\u0131f\u0131ra b\u00f6lm\u0259 x\u0259tas\u0131.\");\n        return x / y;\n    }\n\n    try\n    {\n        Console.WriteLine(Divide());\n    }\n    catch (DivideByZeroException ex)\n    {\n        Console.WriteLine($\"X\u0259ta: {ex.Message}\");\n    }\n}\n</code></pre>"},{"location":"csharp/local-functions/#5-adlandrma-standartlarn-nzr-etmk","title":"5. Adland\u0131rma Standartlar\u0131n\u0131 N\u0259z\u0259r\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u0259nas\u0131z v\u0259 q\u0131sa adlar istifad\u0259 etm\u0259k.</p> <pre><code>void DoTask()\n{\n    void Fn() =&gt; Console.WriteLine(\"Tap\u015f\u0131r\u0131q tamamland\u0131.\");\n    Fn();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Local function\u2019lar \u00fc\u00e7\u00fcn m\u0259nal\u0131 adlar istifad\u0259 edin.</p> <pre><code>void DoTask()\n{\n    void PrintCompletionMessage() =&gt; Console.WriteLine(\"Tap\u015f\u0131r\u0131q tamamland\u0131.\");\n    PrintCompletionMessage();\n}\n</code></pre>"},{"location":"csharp/local-functions/#6-lazmsz-asllq-lav-etmk","title":"6. Laz\u0131ms\u0131z As\u0131l\u0131l\u0131q \u018flav\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Local function\u2019larda laz\u0131ms\u0131z as\u0131l\u0131l\u0131qlar t\u0259yin etm\u0259k.</p> <pre><code>void ProcessData(int value)\n{\n    string message = \"N\u0259tic\u0259\";\n    void DisplayResult(int result) =&gt; Console.WriteLine($\"{message}: {result}\");\n    DisplayResult(value * 2);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131 minimuma endirin.</p> <pre><code>void ProcessData(int value)\n{\n    void DisplayResult(int result) =&gt; Console.WriteLine($\"N\u0259tic\u0259: {result}\");\n    DisplayResult(value * 2);\n}\n</code></pre>"},{"location":"csharp/null-handling/","title":"Null Handling","text":"<p>C# dilind\u0259 <code>null</code> d\u0259y\u0259rl\u0259rin yanl\u0131\u015f idar\u0259 edilm\u0259si, runtime x\u0259talar\u0131na v\u0259 g\u00f6zl\u0259nilm\u0259z davran\u0131\u015flara s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/null-handling/#1-null-nzartlrini-nzr-almamaq","title":"1. Null N\u0259zar\u0259tl\u0259rini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>null</code> hallar\u0131n\u0131 n\u0259zar\u0259t etm\u0259m\u0259k.</p> <pre><code>public void PrintMessage(string message)\n{\n    Console.WriteLine(message.Length); // NullReferenceException ba\u015f ver\u0259 bil\u0259r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>null</code> n\u0259zar\u0259tl\u0259rini ed\u0259r\u0259k x\u0259talar\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>public void PrintMessage(string message)\n{\n    if (message == null) throw new ArgumentNullException(nameof(message));\n    Console.WriteLine(message.Length);\n}\n</code></pre>"},{"location":"csharp/null-handling/#2-null-yerin-magic-value-istifadsi","title":"2. <code>null</code> Yerin\u0259 Magic Value \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>null</code> yerin\u0259 m\u0259nas\u0131z bir magic value istifad\u0259 etm\u0259k.</p> <pre><code>public string GetMessage() =&gt; \"\";\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>null</code> \u00fc\u00e7\u00fcn do\u011fru bir model istifad\u0259 ed\u0259r\u0259k daha oxunaql\u0131 kod yaz\u0131n.</p> <pre><code>public string GetMessage() =&gt; null;\n</code></pre>"},{"location":"csharp/null-handling/#3-null-coalescing-operatorunu-istifad-etmmk","title":"3. Null Coalescing Operatorunu \u0130stifad\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>null</code> n\u0259zar\u0259tini manuel olaraq etm\u0259k.</p> <pre><code>var result = value != null ? value : \"Default\";\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Null coalescing operatoru (<code>??</code>) istifad\u0259 ed\u0259r\u0259k kodu sad\u0259l\u0259\u015fdirin.</p> <pre><code>var result = value ?? \"Default\";\n</code></pre>"},{"location":"csharp/null-handling/#4-null-conditional-operatorunu-nzr-almamaq","title":"4. Null Conditional Operatorunu N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Null n\u0259zar\u0259ti etm\u0259d\u0259n z\u0259ncirvari property\u2019\u0259 \u00e7atmaq.</p> <pre><code>var length = person.Address.City.Length; // NullReferenceException riski\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Null conditional operatorunu (<code>?.</code>) istifad\u0259 ed\u0259r\u0259k x\u0259talar\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>var length = person?.Address?.City?.Length;\n</code></pre>"},{"location":"csharp/null-handling/#5-nullablet-istifadsini-gozard-etmk","title":"5. <code>Nullable&lt;T&gt;</code> \u0130stifad\u0259sini G\u00f6zard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Nullable d\u0259y\u0259r tipl\u0259ri il\u0259 i\u015fl\u0259y\u0259rk\u0259n manuel null n\u0259zar\u0259ti etm\u0259k.</p> <pre><code>int? number = null;\nif (number.HasValue) Console.WriteLine(number.Value);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>Nullable&lt;T&gt;</code> x\u00fcsusiyy\u0259tl\u0259rini istifad\u0259 ed\u0259r\u0259k kodu sad\u0259l\u0259\u015fdirin.</p> <pre><code>int? number = null;\nConsole.WriteLine(number ?? 0); // Varsay\u0131lan d\u0259y\u0259ri istifad\u0259 edir\n</code></pre>"},{"location":"csharp/null-handling/#6-null-dondrn-metodlar-istifad-etmk","title":"6. <code>null</code> D\u00f6nd\u0259r\u0259n Metodlar \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>null</code> d\u00f6nd\u0259r\u0259n metodlar istifad\u0259 ed\u0259r\u0259k x\u0259taya a\u00e7\u0131q bir struktur yaratmaq.</p> <pre><code>public string GetData()\n{\n    return null; // NullReferenceException riski\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Null Object Pattern v\u0259 ya alternativ bir h\u0259ll istifad\u0259 edin.</p> <pre><code>public string GetData()\n{\n    return string.Empty; // Null yerin\u0259 bo\u015f bir d\u0259y\u0259r d\u00f6nd\u0259rir\n}\n</code></pre>"},{"location":"csharp/null-handling/#7-argumentnullexception-il-detal-tmin-etmmk","title":"7. <code>ArgumentNullException</code> il\u0259 Detal T\u0259min Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>ArgumentNullException</code> istifad\u0259 ed\u0259rk\u0259n detal t\u0259min etm\u0259m\u0259k.</p> <pre><code>throw new ArgumentNullException();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Parametr ad\u0131 v\u0259 a\u00e7\u0131qlama \u0259lav\u0259 ed\u0259r\u0259k detal t\u0259min edin.</p> <pre><code>throw new ArgumentNullException(nameof(parameter), \"Parametr bo\u015f ola bilm\u0259z.\");\n</code></pre>"},{"location":"csharp/pattern-matching/","title":"Pattern Matching","text":"<p>C# dilind\u0259 Pattern Matching, daha oxunaql\u0131 v\u0259 davaml\u0131 kod yazma\u011f\u0131 t\u0259min ed\u0259n g\u00fccl\u00fc bir vasit\u0259dir. Ancaq, yanl\u0131\u015f istifad\u0259l\u0259r performans probleml\u0259rin\u0259 v\u0259 m\u00fcr\u0259kk\u0259b kod strukturlar\u0131na s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/pattern-matching/#1-is-operatoru-il-lazmsz-tip-dyismlri","title":"1. <code>is</code> Operatoru il\u0259 Laz\u0131ms\u0131z Tip D\u0259yi\u015fm\u0259l\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tip yoxlamas\u0131ndan sonra manual tip d\u0259yi\u015fm\u0259si.</p> <pre><code>if (obj is string)\n{\n    var str = (string)obj;\n    Console.WriteLine(str.ToUpper());\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>is</code> operatorunda birba\u015fa tip d\u0259yi\u015fm\u0259sini istifad\u0259 edin.</p> <pre><code>if (obj is string str)\n{\n    Console.WriteLine(str.ToUpper());\n}\n</code></pre>"},{"location":"csharp/pattern-matching/#2-switch-ifadlrind-sabit-dyrlrdn-istifad-etmmk","title":"2. <code>switch</code> \u0130fad\u0259l\u0259rind\u0259 Sabit D\u0259y\u0259rl\u0259rd\u0259n \u0130stifad\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>switch</code> ifad\u0259l\u0259rind\u0259 sabit d\u0259y\u0259rl\u0259r yerin\u0259 m\u00fcr\u0259kk\u0259b ifad\u0259l\u0259r istifad\u0259 etm\u0259k.</p> <pre><code>switch (input.Length)\n{\n    case int n when n &gt; 5:\n        Console.WriteLine(\"Uzun bir m\u0259tn.\");\n        break;\n    default:\n        Console.WriteLine(\"Q\u0131sa bir m\u0259tn.\");\n        break;\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sabit d\u0259y\u0259rl\u0259r istifad\u0259 ed\u0259r\u0259k kodun oxunaql\u0131\u011f\u0131n\u0131 art\u0131r\u0131n.</p> <pre><code>switch (input.Length)\n{\n    case &gt; 5:\n        Console.WriteLine(\"Uzun bir m\u0259tn.\");\n        break;\n    default:\n        Console.WriteLine(\"Q\u0131sa bir m\u0259tn.\");\n        break;\n}\n</code></pre>"},{"location":"csharp/pattern-matching/#3-when-srtlrini-yanls-istifad-etmk","title":"3. <code>when</code> \u015e\u0259rtl\u0259rini Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>when</code> \u015f\u0259rtl\u0259rind\u0259 laz\u0131ms\u0131z yoxlama etm\u0259k.</p> <pre><code>if (obj is int i &amp;&amp; i &gt; 10)\n{\n    Console.WriteLine(\"10-dan b\u00f6y\u00fck bir r\u0259q\u0259m.\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>when</code> ifad\u0259sini <code>is</code> il\u0259 inteqrasiya ed\u0259r\u0259k kodu sad\u0259l\u0259\u015fdirin.</p> <pre><code>if (obj is int i when i &gt; 10)\n{\n    Console.WriteLine(\"10-dan b\u00f6y\u00fck bir r\u0259q\u0259m.\");\n}\n</code></pre>"},{"location":"csharp/pattern-matching/#4-switch-ifadlrind-tip-yoxlamalarn-murkkblsdirmk","title":"4. <code>switch</code> \u0130fad\u0259l\u0259rind\u0259 Tip Yoxlamalar\u0131n\u0131 M\u00fcr\u0259kk\u0259bl\u0259\u015fdirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: F\u0259rqli tipl\u0259r \u00fc\u00e7\u00fcn ayr\u0131 <code>if</code> bloklar\u0131 istifad\u0259 etm\u0259k.</p> <pre><code>if (obj is string str)\n{\n    Console.WriteLine($\"M\u0259tn: {str}\");\n}\nelse if (obj is int num)\n{\n    Console.WriteLine($\"R\u0259q\u0259m: {num}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>switch</code> ifad\u0259sini istifad\u0259 ed\u0259r\u0259k tip yoxlamalar\u0131n\u0131 t\u0259nziml\u0259yin.</p> <pre><code>switch (obj)\n{\n    case string str:\n        Console.WriteLine($\"M\u0259tn: {str}\");\n        break;\n    case int num:\n        Console.WriteLine($\"R\u0259q\u0259m: {num}\");\n        break;\n    default:\n        Console.WriteLine(\"Nam\u0259lum tip.\");\n        break;\n}\n</code></pre>"},{"location":"csharp/pattern-matching/#5-destructuring-il-pattern-matchingi-nzr-almamag","title":"5. Destructuring il\u0259 Pattern Matching\u2019i N\u0259z\u0259r\u0259 Almamag","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b m\u0259lumat strukturlar\u0131n\u0131 manual h\u0259ll etm\u0259k.</p> <pre><code>if (point is Point)\n{\n    var p = (Point)point;\n    Console.WriteLine($\"X: {p.X}, Y: {p.Y}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Destructuring il\u0259 kodu sad\u0259l\u0259\u015fdirin.</p> <pre><code>if (point is Point(var x, var y))\n{\n    Console.WriteLine($\"X: {x}, Y: {y}\");\n}\n</code></pre>"},{"location":"csharp/pattern-matching/#6-performans-nzr-almamaq","title":"6. Performans\u0131 N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat strukturlar\u0131nda Pattern Matching\u2019i optimizasiya etm\u0259d\u0259n istifad\u0259 etm\u0259k.</p> <pre><code>foreach (var item in collection)\n{\n    if (item is string str &amp;&amp; str.Contains(\"test\"))\n    {\n        Console.WriteLine(str);\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Pattern Matching\u2019i erk\u0259n \u00e7\u0131x\u0131\u015f mexanizml\u0259ri il\u0259 birl\u0259\u015fdirin.</p> <pre><code>foreach (var str in collection.OfType&lt;string&gt;())\n{\n    if (str.Contains(\"test\"))\n    {\n        Console.WriteLine(str);\n    }\n}\n</code></pre>"},{"location":"csharp/ranges-indices/","title":"Ranges and Indices","text":"<p>C# 8.0 il\u0259 t\u0259qdim olunan Ranges (<code>..</code>) v\u0259 Indices (<code>^</code>) x\u00fcsusiyy\u0259tl\u0259ri, kolleksiyalar \u00fcz\u0259rind\u0259 daha oxunaql\u0131 v\u0259 q\u0131sa \u0259m\u0259liyyatlar etm\u0259yinizi t\u0259min edir. Lakin, bu x\u00fcsusiyy\u0259tl\u0259rin yanl\u0131\u015f istifad\u0259si g\u00f6zl\u0259nilm\u0259z n\u0259tic\u0259l\u0259r\u0259 v\u0259 ya performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/ranges-indices/#1-mntiqli-istifadni-nzr-almamaq","title":"1. M\u0259ntiqli \u0130stifad\u0259ni N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u018fn\u0259n\u0259vi \u00fcsullarla laz\u0131ms\u0131z m\u00fcr\u0259kk\u0259b \u0259m\u0259liyyatlar etm\u0259k.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar lastThree = array.Skip(array.Length - 3).ToArray();\n</code></pre> <p>\u2705 \u0130deal \u0130stifad\u0259: Indices x\u00fcsusiyy\u0259tini istifad\u0259 ed\u0259r\u0259k \u0259m\u0259liyyatlar\u0131 sad\u0259l\u0259\u015fdirin.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar lastThree = array[^3..];\n</code></pre>"},{"location":"csharp/ranges-indices/#2-mnfi-indices-istifadsini-yanls-anlamaq","title":"2. M\u0259nfi Indices \u0130stifad\u0259sini Yanl\u0131\u015f Anlamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u0259nfi indeksl\u0259rin yanl\u0131\u015f \u015f\u0259rh edilm\u0259si.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar invalidIndex = array[-1]; // X\u0259ta\n</code></pre> <p>\u2705 \u0130deal \u0130stifad\u0259: Indices il\u0259 son elementl\u0259r\u0259 do\u011fru giri\u015f t\u0259min edin.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar lastElement = array[^1]; // Son element\n</code></pre>"},{"location":"csharp/ranges-indices/#3-ranges-il-performans-nzr-almamaq","title":"3. Ranges il\u0259 Performans\u0131 N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat listl\u0259rind\u0259 laz\u0131ms\u0131z kopyalamalar etm\u0259k.</p> <pre><code>var data = Enumerable.Range(1, 1000000).ToArray();\nvar subset = data.Skip(100).Take(50).ToArray(); // Laz\u0131ms\u0131z kopyalama\n</code></pre> <p>\u2705 \u0130deal \u0130stifad\u0259: Ranges il\u0259 performans\u0131 optimalla\u015fd\u0131r\u0131n.</p> <pre><code>var data = Enumerable.Range(1, 1000000).ToArray();\nvar subset = data[100..150]; // Kopyalama minimal\n</code></pre>"},{"location":"csharp/ranges-indices/#4-kolleksiyalardan-knarda-ranges-istifadsi","title":"4. Kolleksiyalardan K\u0259narda Ranges \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ranges v\u0259 Indices x\u00fcsusiyy\u0259tl\u0259rini uy\u011fun olmayan m\u0259lumat tipl\u0259rind\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>string text = \"Hello World\";\nvar invalidRange = text[^5..]; // Yaln\u0131z siyah\u0131 tipl\u0259rind\u0259 ke\u00e7\u0259rlidir\n</code></pre> <p>\u2705 \u0130deal \u0130stifad\u0259: Ranges v\u0259 Indices x\u00fcsusiyy\u0259tl\u0259rini do\u011fru m\u0259lumat tipl\u0259ri il\u0259 istifad\u0259 edin.</p> <pre><code>string text = \"Hello World\";\nvar substring = text[^5..]; // Ke\u00e7\u0259rli v\u0259 effektiv istifad\u0259\n</code></pre>"},{"location":"csharp/ranges-indices/#5-start-v-end-indicesi-yanls-tyin-etmk","title":"5. Start v\u0259 End Indices\u2019i Yanl\u0131\u015f T\u0259yin Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ba\u015flan\u011f\u0131c v\u0259 biti\u015f indeksl\u0259rini qar\u0131\u015fd\u0131rmaq.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar invalidRange = array[5..3]; // X\u0259ta: Biti\u015f indeksi ba\u015flan\u011f\u0131cdan \u0259vv\u0259ldir\n</code></pre> <p>\u2705 \u0130deal \u0130stifad\u0259: Ranges \u00fc\u00e7\u00fcn do\u011fru ba\u015flan\u011f\u0131c v\u0259 biti\u015f indeksl\u0259rini t\u0259yin edin.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar validRange = array[3..5]; // Do\u011fru istifad\u0259\n</code></pre>"},{"location":"csharp/ranges-indices/#6-ranges-v-indicesi-birlikd-istifad-etmyi-nzr-almamaq","title":"6. Ranges v\u0259 Indices\u2019i Birlikd\u0259 \u0130stifad\u0259 Etm\u0259yi N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u00fcsusiyy\u0259tl\u0259ri birlikd\u0259 istifad\u0259 etm\u0259m\u0259k.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar firstThree = array.Take(3).ToArray(); // Laz\u0131ms\u0131z m\u00fcr\u0259kk\u0259blik\n</code></pre> <p>\u2705 \u0130deal \u0130stifad\u0259: Indices v\u0259 Ranges\u2019i birlikd\u0259 istifad\u0259 ed\u0259r\u0259k daha t\u0259miz bir struktur \u0259ld\u0259 edin.</p> <pre><code>var array = new int[] { 1, 2, 3, 4, 5 };\nvar firstThree = array[..3]; // \u0130lk \u00fc\u00e7 element\n</code></pre>"},{"location":"csharp/record-types/","title":"Record Types","text":"<p>C# dilind\u0259 Record Types, immutable(d\u0259yi\u015fm\u0259z) m\u0259lumat modell\u0259ri v\u0259 d\u0259y\u0259r \u0259sasl\u0131 b\u0259rab\u0259rlik m\u00fcqayis\u0259l\u0259ri yaratmaq \u00fc\u00e7\u00fcn istifad\u0259 olunan yeni bir tipdir. Yanl\u0131\u015f istifad\u0259 hallar\u0131 Record Type\u2019lar\u0131n \u00fcst\u00fcnl\u00fckl\u0259rini azalda bil\u0259r.</p>"},{"location":"csharp/record-types/#1-recordlar-immutable-qurulusda-saxlamamaq","title":"1. Record\u2019lar\u0131 Immutable Qurulu\u015fda Saxlamamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Record\u2019lar\u0131n property\u2019l\u0259rini d\u0259yi\u015fdiril\u0259 bil\u0259n (<code>mutable</code>) etm\u0259k.</p> <pre><code>public record Person\n{\n    public string Name { get; set; } // D\u0259yi\u015fdiril\u0259 bil\u0259n\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Record\u2019lar\u0131 immutable qurulu\u015fda saxlayaraq m\u0259lumat b\u00fct\u00f6vl\u00fcy\u00fcn\u00fc t\u0259min edin.</p> <pre><code>public record Person(string Name);\n</code></pre>"},{"location":"csharp/record-types/#2-brabrlik-muqayislrini-yanls-qurmaq","title":"2. B\u0259rab\u0259rlik M\u00fcqayis\u0259l\u0259rini Yanl\u0131\u015f Qurmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u0259rab\u0259rlik m\u00fcqayis\u0259l\u0259ri \u00fc\u00e7\u00fcn <code>class</code> istifad\u0259 etm\u0259k.</p> <pre><code>public class Person\n{\n    public string Name { get; set; }\n}\n\n// Reference b\u0259rab\u0259rliyi yoxlan\u0131l\u0131r\nvar p1 = new Person { Name = \"Murat\" };\nvar p2 = new Person { Name = \"Murat\" };\nConsole.WriteLine(p1 == p2); // False\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Record Type istifad\u0259 ed\u0259r\u0259k d\u0259y\u0259rl\u0259ri m\u00fcqayis\u0259 etm\u0259k.</p> <pre><code>public record Person(string Name);\n\nvar p1 = new Person(\"Murat\");\nvar p2 = new Person(\"Murat\");\nConsole.WriteLine(p1 == p2); // True\n</code></pre>"},{"location":"csharp/record-types/#3-with-acar-sozunu-yanls-istifad-etmk","title":"3. <code>with</code> A\u00e7ar S\u00f6z\u00fcn\u00fc Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>with</code> ifad\u0259sini istifad\u0259 etm\u0259d\u0259n m\u0259lumat\u0131 d\u0259yi\u015fdirm\u0259y\u0259 \u00e7al\u0131\u015fmaq.</p> <pre><code>var person = new Person(\"Murat\");\nperson.Name = \"Derin\"; // Derleme hatas\u0131\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>with</code> a\u00e7ar s\u00f6z\u00fcn\u00fc istifad\u0259 ed\u0259r\u0259k yeni bir Record n\u00fcmun\u0259si yarad\u0131n.</p> <pre><code>var person = new Person(\"Murat\");\nvar updatedPerson = person with { Name = \"Derin\" };\n</code></pre>"},{"location":"csharp/record-types/#4-mlumat-modeli-ucun-yanls-qurulus-secimi","title":"4. M\u0259lumat Modeli \u00dc\u00e7\u00fcn Yanl\u0131\u015f Qurulu\u015f Se\u00e7imi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Record Type yerin\u0259 <code>class</code> v\u0259 ya <code>struct</code> istifad\u0259 etm\u0259k.</p> <pre><code>public class Address\n{\n    public string City { get; set; }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Immutable v\u0259 d\u0259y\u0259r \u0259sasl\u0131 b\u0259rab\u0259rlik t\u0259l\u0259b ed\u0259n hallar \u00fc\u00e7\u00fcn Record Type istifad\u0259 edin.</p> <pre><code>public record Address(string City);\n</code></pre>"},{"location":"csharp/record-types/#5-recordlarn-performans-xususiyytlrini-gozard-etmk","title":"5. Record\u2019lar\u0131n Performans X\u00fcsusiyy\u0259tl\u0259rini G\u00f6zard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat qurulu\u015flar\u0131 \u00fc\u00e7\u00fcn Record Type istifad\u0259 etm\u0259k.</p> <pre><code>public record LargeRecord(string Data); // Performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat qurulu\u015flar\u0131 \u00fc\u00e7\u00fcn <code>class</code> istifad\u0259 etm\u0259yi d\u00fc\u015f\u00fcn\u00fcn.</p> <pre><code>public class LargeRecord\n{\n    public string Data { get; set; }\n}\n</code></pre>"},{"location":"csharp/record-types/#6-recordlar-yanls-sahd-istifad-etmk","title":"6. Record\u2019lar\u0131 Yanl\u0131\u015f Sah\u0259d\u0259 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Record Type\u2019lar\u0131 DTO (Data Transfer Object) xaricind\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>public record Repository(string Name); // Yanl\u0131\u015f istifad\u0259, record yerin\u0259 class istifad\u0259 edilm\u0259li\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Record Type\u2019lar\u0131 DTO v\u0259 m\u0259lumat modell\u0259ri \u00fc\u00e7\u00fcn istifad\u0259 edin.</p> <pre><code>public record PersonDto(string Name, int Age);\n</code></pre>"},{"location":"csharp/ref-returns-locals/","title":"Ref Returns and Ref Locals","text":"<p>Ref returns v\u0259 locals, yadda\u015fdak\u0131 m\u0259lumatlara birba\u015fa referans ed\u0259r\u0259k performans t\u0259kmill\u0259\u015fdirm\u0259l\u0259ri t\u0259klif edir. Lakin, yanl\u0131\u015f istifad\u0259l\u0259r m\u0259lumat b\u00fct\u00f6vl\u00fcy\u00fcn\u00fc t\u0259hl\u00fck\u0259y\u0259 ata bil\u0259r v\u0259 g\u00f6zl\u0259nilm\u0259z davran\u0131\u015flara s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/ref-returns-locals/#1-lazmsz-ref-istifadsi","title":"1. Laz\u0131ms\u0131z Ref \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z hallarda <code>ref</code> istifad\u0259si.</p> <pre><code>ref int GetFirstElement(ref int[] array)\n{\n    return ref array[0];\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>ref</code> yaln\u0131z b\u00f6y\u00fck m\u0259lumat strukturlar\u0131nda v\u0259 ya kritik performans t\u0259l\u0259b ed\u0259n hallarda istifad\u0259 edilm\u0259lidir.</p> <pre><code>ref int GetFirstElement(ref int[] array)\n{\n    if (array.Length == 0)\n        throw new ArgumentException(\"Array bo\u015f ola bilm\u0259z.\", nameof(array));\n    return ref array[0];\n}\n</code></pre>"},{"location":"csharp/ref-returns-locals/#2-ref-returns-il-mlumat-butovluyunu-thluky-atmaq","title":"2. Ref Returns il\u0259 M\u0259lumat B\u00fct\u00f6vl\u00fcy\u00fcn\u00fc T\u0259hl\u00fck\u0259y\u0259 Atmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Geri qaytar\u0131lan istinad\u0131 t\u0259hl\u00fck\u0259siz olmayan \u015f\u0259kild\u0259 d\u0259yi\u015fdirm\u0259k.</p> <pre><code>ref int GetElement(ref int[] array, int index)\n{\n    return ref array[index];\n}\n\n// M\u0259lumat yanl\u0131\u015fl\u0131qla d\u0259yi\u015fdiril\u0259 bil\u0259r.\nref int element = ref GetElement(ref numbers, 2);\nelement = -1;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u0130stinad\u0131n istifad\u0259si t\u0259hl\u00fck\u0259siz hala g\u0259tirilm\u0259lidir.</p> <pre><code>ref int GetElement(ref int[] array, int index)\n{\n    if (index &lt; 0 || index &gt;= array.Length)\n        throw new IndexOutOfRangeException(\"Yanl\u0131\u015f indeks.\");\n    return ref array[index];\n}\n</code></pre>"},{"location":"csharp/ref-returns-locals/#3-ref-locals-istifadsini-lazmsz-hale-getirmk","title":"3. Ref Locals \u0130stifad\u0259sini Laz\u0131ms\u0131z Hale Getirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ref locals istifad\u0259sini g\u0259r\u0259ksiz yer\u0259 m\u00fcr\u0259kk\u0259bl\u0259\u015fdirm\u0259k.</p> <pre><code>int[] numbers = { 1, 2, 3, 4 };\nref int firstNumber = ref numbers[0];\nfirstNumber = 10; // M\u00fcr\u0259kk\u0259b istifad\u0259\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Ref locals yaln\u0131z yadda\u015f q\u0259na\u0259ti v\u0259 ya performans \u00fc\u00e7\u00fcn laz\u0131md\u0131rsa istifad\u0259 edilm\u0259lidir.</p> <pre><code>ref int GetFirst(ref int[] array)\n{\n    return ref array[0];\n}\n\nref int first = ref GetFirst(ref numbers);\nfirst = 10;\n</code></pre>"},{"location":"csharp/ref-returns-locals/#4-boyuk-mlumat-strukturlarnda-performans-optimallasdrmamaq","title":"4. B\u00f6y\u00fck M\u0259lumat Strukturlar\u0131nda Performans\u0131 Optimalla\u015fd\u0131rmamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat strukturlar\u0131nda kopyalama \u0259m\u0259liyyat\u0131 etm\u0259k.</p> <pre><code>int[] largeArray = GetLargeArray();\nint value = largeArray[0]; // Kopyalama\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>ref</code> istifad\u0259 ed\u0259r\u0259k laz\u0131ms\u0131z kopyalamalar\u0131 \u00f6nl\u0259m\u0259k.</p> <pre><code>ref int GetLargeArrayFirstElement(ref int[] array)\n{\n    return ref array[0];\n}\n\nref int value = ref GetLargeArrayFirstElement(ref largeArray);\n</code></pre>"},{"location":"csharp/ref-returns-locals/#5-ref-readonly-istifadsini-nzr-almamaq","title":"5. <code>ref readonly</code> \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Yaln\u0131z oxunacaq istinadlar \u00fc\u00e7\u00fcn <code>ref</code> istifad\u0259 etm\u0259k.</p> <pre><code>ref int GetReadOnlyValue(ref int[] array, int index)\n{\n    return ref array[index]; // Yazma riski m\u00f6vcuddur\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z oxuna bil\u0259n istinadlar \u00fc\u00e7\u00fcn <code>ref readonly</code> istifad\u0259 edin.</p> <pre><code>ref readonly int GetReadOnlyValue(ref int[] array, int index)\n{\n    if (index &lt; 0 || index &gt;= array.Length)\n        throw new IndexOutOfRangeException(\"Yanl\u0131\u015f indeks.\");\n    return ref array[index];\n}\n</code></pre>"},{"location":"csharp/ref-returns-locals/#6-ref-istifadsini-dogru-dokumentasiya-etmk","title":"6. Ref \u0130stifad\u0259sini Do\u011fru Dokumentasiya Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>ref</code> parametrl\u0259rin m\u0259nas\u0131n\u0131 a\u00e7\u0131qlamamaq.</p> <pre><code>ref int Process(ref int number)\n{\n    number *= 2;\n    return ref number;\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>ref</code> parametrl\u0259rin m\u0259qs\u0259dini v\u0259 t\u0259sirini a\u00e7\u0131qlamaq \u00fc\u00e7\u00fcn \u015f\u0259rh \u0259lav\u0259 edin.</p> <pre><code>/// &lt;summary&gt;\n/// Veril\u0259n r\u0259q\u0259mi iki il\u0259 vurur v\u0259 istinad\u0131 geri qaytar\u0131r.\n/// &lt;/summary&gt;\n/// &lt;param name=\"number\"&gt;\u0130\u015fl\u0259n\u0259c\u0259k r\u0259q\u0259m.&lt;/param&gt;\n/// &lt;returns&gt;Yenil\u0259nmi\u015f r\u0259q\u0259min istinad\u0131.&lt;/returns&gt;\nref int Process(ref int number)\n{\n    number *= 2;\n    return ref number;\n}\n</code></pre>"},{"location":"csharp/safe-casting/","title":"Safe Casting with <code>as</code>","text":"<p>C# dilind\u0259 <code>as</code> a\u00e7ar s\u00f6z\u00fc, tip \u00e7evirm\u0259l\u0259rini t\u0259hl\u00fck\u0259siz \u015f\u0259kild\u0259 h\u0259yata ke\u00e7irm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunan bir vasit\u0259dir. Yanl\u0131\u015f istifad\u0259l\u0259r, g\u00f6zl\u0259nilm\u0259z s\u0259hvl\u0259r\u0259 v\u0259 kod m\u00fcr\u0259kk\u0259bliyin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"csharp/safe-casting/#1-as-istifadsini-yanls-idar-etmk","title":"1. <code>as</code> \u0130stifad\u0259sini Yanl\u0131\u015f \u0130dar\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>as</code> \u00e7evirm\u0259sind\u0259n sonra null yoxlamas\u0131 etm\u0259m\u0259k.</p> <pre><code>object obj = \"Hello, World!\";\nstring message = obj as string;\nConsole.WriteLine(message.Length); // NullReferenceException riski\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>as</code> \u00e7evirm\u0259sind\u0259n sonra null yoxlamas\u0131 ed\u0259r\u0259k exception\u2019\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>object obj = \"Hello, World!\";\nstring message = obj as string;\nif (message != null)\n{\n    Console.WriteLine(message.Length);\n}\nelse\n{\n    Console.WriteLine(\"\u00c7evirme u\u011fursuz oldu.\");\n}\n</code></pre>"},{"location":"csharp/safe-casting/#2-as-yerin-yanls-cast-istifadsi","title":"2. <code>as</code> Yerin\u0259 Yanl\u0131\u015f Cast \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tip \u00e7evirm\u0259sind\u0259 birba\u015fa cast istifad\u0259 etm\u0259k.</p> <pre><code>object obj = 123;\nstring text = (string)obj; // InvalidCastException\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tip \u00e7evirm\u0259sind\u0259 t\u0259hl\u00fck\u0259siz \u015f\u0259kild\u0259 <code>as</code> istifad\u0259 edin.</p> <pre><code>object obj = 123;\nstring text = obj as string;\nif (text == null)\n{\n    Console.WriteLine(\"\u00c7evirm\u0259 u\u011fursuz oldu.\");\n}\n</code></pre>"},{"location":"csharp/safe-casting/#3-hdf-tipi-yanls-muyyn-etmk","title":"3. H\u0259d\u0259f Tipi Yanl\u0131\u015f M\u00fc\u0259yy\u0259n Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Uy\u011funsuz h\u0259d\u0259f tipl\u0259 <code>as</code> \u00e7evirm\u0259si etm\u0259k.</p> <pre><code>object obj = new List&lt;int&gt;();\nvar str = obj as string; // Null qaytaracaq \u00e7\u00fcnki tip uy\u011fun g\u0259lmir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259d\u0259f tipi d\u00fczg\u00fcn \u015f\u0259kild\u0259 m\u00fc\u0259yy\u0259n etm\u0259k.</p> <pre><code>object obj = new List&lt;int&gt;();\nvar list = obj as List&lt;int&gt;;\nif (list != null)\n{\n    Console.WriteLine($\"Listd\u0259 {list.Count} obyekt var.\");\n}\n</code></pre>"},{"location":"csharp/safe-casting/#4-alternativ-yoxlamalar-gozard-etmk","title":"4. Alternativ Yoxlamalar\u0131 G\u00f6zard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Yaln\u0131z <code>as</code> istifad\u0259 ed\u0259r\u0259k \u00e7evirm\u0259 yoxlamas\u0131 etm\u0259k.</p> <pre><code>object obj = \"Test String\";\nstring text = obj as string;\nif (text != null)\n{\n    Console.WriteLine(text.ToUpper());\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>is</code> ifad\u0259si il\u0259 \u00e7evirm\u0259nin uy\u011funlu\u011funu yoxlay\u0131n.</p> <pre><code>object obj = \"Test String\";\nif (obj is string text)\n{\n    Console.WriteLine(text.ToUpper());\n}\n</code></pre>"},{"location":"csharp/safe-casting/#5-murkkb-yoxlamalar-as-il-birlsdirmk","title":"5. M\u00fcr\u0259kk\u0259b Yoxlamalar\u0131 <code>as</code> il\u0259 Birl\u0259\u015fdirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7oxlu yoxlamalar\u0131 birl\u0259\u015fdir\u0259r\u0259k kodu m\u00fcr\u0259kk\u0259b hala g\u0259tirm\u0259k.</p> <pre><code>object obj = \"Hello\";\nif (obj != null &amp;&amp; obj is string &amp;&amp; obj.ToString().Length &gt; 5)\n{\n    Console.WriteLine(\"Ke\u00e7\u0259rli string.\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Kodun oxunaql\u0131\u011f\u0131n\u0131 art\u0131rmaq \u00fc\u00e7\u00fcn yoxlaman\u0131 sad\u0259l\u0259\u015fdirin.</p> <pre><code>if (obj is string text &amp;&amp; text.Length &gt; 5)\n{\n    Console.WriteLine(\"Ke\u00e7\u0259rli string.\");\n}\n</code></pre>"},{"location":"csharp/static-local-functions/","title":"Static Lokal Funksiyalar","text":"<p>Static lokal funksiyalar, C# dilind\u0259 performans v\u0259 t\u0259hl\u00fck\u0259sizlik \u00fcst\u00fcnl\u00fckl\u0259ri t\u0259min etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 edil\u0259 bil\u0259r. Bu metodlar, xarici \u0259hat\u0259d\u0259ki he\u00e7 bir d\u0259yi\u015f\u0259n\u0259 \u00e7ata bilm\u0259z v\u0259 buna g\u00f6r\u0259 d\u0259 yadda\u015f istifad\u0259sini optimalla\u015fd\u0131r\u0131r. Lakin, yanl\u0131\u015f istifad\u0259l\u0259ri kodun performans\u0131n\u0131 a\u015fa\u011f\u0131 sala v\u0259 anla\u015f\u0131ql\u0131l\u0131\u011f\u0131n\u0131 \u00e7\u0259tinl\u0259\u015fdir\u0259 bil\u0259r.</p>"},{"location":"csharp/static-local-functions/#1-lazmsz-static-lokal-funksiya-istifadsi","title":"1. Laz\u0131ms\u0131z Static Lokal Funksiya \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Static lokal funksiyalar\u0131 laz\u0131ms\u0131z hallarda istifad\u0259 etm\u0259k.</p> <pre><code>void CalculateSum(int a, int b)\n{\n    static int Add(int x, int y) =&gt; x + y; // Laz\u0131ms\u0131z static istifad\u0259si\n    Console.WriteLine(Add(a, b));\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Static lokal funksiyalar\u0131 yaln\u0131z xarici \u0259hat\u0259y\u0259 giri\u015f laz\u0131m olmad\u0131qda istifad\u0259 edin.</p> <pre><code>void CalculateSum(int a, int b)\n{\n    int Add(int x, int y) =&gt; x + y;\n    Console.WriteLine(Add(a, b));\n}\n</code></pre>"},{"location":"csharp/static-local-functions/#2-xarici-dyisnlr-catmaga-calsmaq","title":"2. Xarici D\u0259yi\u015f\u0259nl\u0259r\u0259 \u00c7atma\u011fa \u00c7al\u0131\u015fmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Static lokal funksiya i\u00e7ind\u0259 xarici \u00e7atma\u011fa \u00e7al\u0131\u015fmaq</p> <pre><code>int multiplier = 2;\nvoid MultiplyAndPrint(int number)\n{\n    static int Multiply(int x) =&gt; x * multiplier; // S\u0259hv: Static metod xarici d\u0259yi\u015f\u0259nl\u0259r\u0259 \u00e7ata bilm\u0259z\n    Console.WriteLine(Multiply(number));\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131m olan m\u0259lumat\u0131 parametr olaraq \u00f6t\u00fcr\u00fcn.</p> <pre><code>int multiplier = 2;\nvoid MultiplyAndPrint(int number)\n{\n    static int Multiply(int x, int factor) =&gt; x * factor;\n    Console.WriteLine(Multiply(number, multiplier));\n}\n</code></pre>"},{"location":"csharp/static-local-functions/#3-mnasz-adlandrma","title":"3. M\u0259nas\u0131z Adland\u0131rma","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Static lokal funksiya \u00fc\u00e7\u00fcn m\u0259nas\u0131z v\u0259 q\u0131sa adlar istifad\u0259 etm\u0259k.</p> <pre><code>void ProcessData(int data)\n{\n    static int Fn(int x) =&gt; x * 2;\n    Console.WriteLine(Fn(data));\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Metod adlar\u0131n\u0131 a\u00e7\u0131qlay\u0131c\u0131 v\u0259 m\u0259nal\u0131 se\u00e7in.</p> <pre><code>void ProcessData(int data)\n{\n    static int DoubleValue(int x) =&gt; x * 2;\n    Console.WriteLine(DoubleValue(data));\n}\n</code></pre>"},{"location":"csharp/static-local-functions/#4-performans-yaxslasdrmalarn-nzr-almamaq","title":"4. Performans Yax\u015f\u0131la\u015fd\u0131rmalar\u0131n\u0131 N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Performans \u00fcst\u00fcnl\u00fcy\u00fc t\u0259min etm\u0259y\u0259c\u0259k v\u0259ziyy\u0259td\u0259 static lokal funksiya istifad\u0259 etm\u0259k.</p> <pre><code>void PrintNumbers()\n{\n    static void Print(int x) =&gt; Console.WriteLine(x);\n    for (int i = 0; i &lt; 5; i++)\n    {\n        Print(i); // Performans f\u0259rqi yaratmaz\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans kritik v\u0259ziyy\u0259tl\u0259rd\u0259 static lokal funksiya se\u00e7in.</p> <pre><code>void ProcessLargeData(int[] numbers)\n{\n    static int Process(int x) =&gt; x * 2;\n    foreach (var number in numbers)\n    {\n        Console.WriteLine(Process(number));\n    }\n}\n</code></pre>"},{"location":"csharp/static-local-functions/#5-lazmsz-asllqlar-lav-etmk","title":"5. Laz\u0131ms\u0131z As\u0131l\u0131l\u0131qlar \u018flav\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Static lokal funksiyada xarici metodlara laz\u0131ms\u0131z as\u0131l\u0131l\u0131q \u0259lav\u0259 etm\u0259k.</p> <pre><code>void ProcessNumbers()\n{\n    static int AddAndDouble(int x, int y)\n    {\n        return (x + y) * 2;\n    }\n    Console.WriteLine(AddAndDouble(3, 5));\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131m olan as\u0131l\u0131l\u0131qlar\u0131 minimuma endirin.</p> <pre><code>void ProcessNumbers()\n{\n    static int DoubleSum(int x, int y) =&gt; (x + y) * 2;\n    Console.WriteLine(DoubleSum(3, 5));\n}\n</code></pre>"},{"location":"csharp/string-interpolation/","title":"String \u0130nterpolasiyas\u0131","text":"<p>String interpolasiyas\u0131, m\u0259tn v\u0259 d\u0259yi\u015f\u0259nl\u0259ri birl\u0259\u015fdirm\u0259k \u00fc\u00e7\u00fcn t\u0259sirli bir \u00fcsul t\u0259qdim edir. Bu x\u00fcsusiyy\u0259t, kodunuzu daha oxunaql\u0131 v\u0259 q\u0131sa hala g\u0259tir\u0259 bil\u0259r. Lakin, yanl\u0131\u015f istifad\u0259l\u0259ri performans probleml\u0259rin\u0259 v\u0259 oxunaql\u0131l\u0131q \u00e7\u0259tinlikl\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"csharp/string-interpolation/#1-murkkb-ifadlri-string-interpolasiyasnda-istifad-etmk","title":"1. M\u00fcr\u0259kk\u0259b \u0130fad\u0259l\u0259ri String \u0130nterpolasiyas\u0131nda \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: String interpolasiya i\u00e7ind\u0259 m\u00fcr\u0259kk\u0259b ifad\u0259l\u0259r istifad\u0259 etm\u0259k.</p> <pre><code>var name = \"Murat\";\nvar greeting = $\"Merhaba, {name.ToUpper() + \"!\"} It is {DateTime.Now.ToString(\"HH:mm:ss\")}\";\nConsole.WriteLine(greeting);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b ifad\u0259l\u0259ri interpolasiya xaricind\u0259 i\u015fl\u0259yin.</p> <pre><code>var name = \"Murat\".ToUpper();\nvar time = DateTime.Now.ToString(\"HH:mm:ss\");\nvar greeting = $\"Merhaba, {name}! It is {time}\";\nConsole.WriteLine(greeting);\n</code></pre>"},{"location":"csharp/string-interpolation/#2-lazmsz-stringformat-istifadsi","title":"2. Laz\u0131ms\u0131z String.Format \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: String interpolasiya \u0259v\u0259zin\u0259 laz\u0131ms\u0131z <code>string.Format</code> istifad\u0259si.</p> <pre><code>var name = \"Murat\";\nvar age = 33;\nvar message = string.Format(\"Ad: {0}, Ya\u015f: {1}\", name, age);\nConsole.WriteLine(message);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: String interpolasiya il\u0259 daha t\u0259miz bir qurulu\u015f \u0259ld\u0259 edin.</p> <pre><code>var name = \"Murat\";\nvar age = 33;\nvar message = $\"Ad: {name}, Ya\u015f: {age}\";\nConsole.WriteLine(message);\n</code></pre>"},{"location":"csharp/string-interpolation/#3-performans-nzr-almamaq","title":"3. Performans\u0131 N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck d\u00f6vrl\u0259rd\u0259 string interpolasiya istifad\u0259 ed\u0259r\u0259k performans\u0131 n\u0259z\u0259r\u0259 almamaq.</p> <pre><code>for (int i = 0; i &lt; 1000; i++)\n{\n    var message = $\"Current value is: {i}\";\n    Console.WriteLine(message);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: StringBuilder kimi performans dostu h\u0259ll\u0259r istifad\u0259 edin.</p> <pre><code>var builder = new StringBuilder();\nfor (int i = 0; i &lt; 1000; i++)\n{\n    builder.AppendLine($\"Current value is: {i}\");\n}\nConsole.WriteLine(builder.ToString());\n</code></pre>"},{"location":"csharp/string-interpolation/#4-mdniyyt-frqliliklrini-nzr-almamaq","title":"4. M\u0259d\u0259niyy\u0259t F\u0259rqlilikl\u0259rini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: String interpolasiyada m\u0259d\u0259niyy\u0259t f\u0259rqlilikl\u0259rini n\u0259z\u0259r\u0259 almamaq.</p> <pre><code>var price = 1234.56;\nvar message = $\"Price: {price}\";\nConsole.WriteLine(message); // F\u0259rqli m\u0259d\u0259niyy\u0259tl\u0259rd\u0259 yanl\u0131\u015f formatda g\u00f6st\u0259ril\u0259 bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fc\u0259yy\u0259n bir m\u0259d\u0259niyy\u0259ti a\u00e7\u0131q \u015f\u0259kild\u0259 m\u00fc\u0259yy\u0259nl\u0259\u015fdir\u0259r\u0259k formatlay\u0131n.</p> <pre><code>var price = 1234.56;\nvar message = $\"Price: {price.ToString(\"C\", CultureInfo.GetCultureInfo(\"en-US\"))}\";\nConsole.WriteLine(message);\n</code></pre>"},{"location":"csharp/string-interpolation/#5-cox-stirli-string-icind-yanls-istifad","title":"5. \u00c7ox S\u0259tirli String \u0130\u00e7ind\u0259 Yanl\u0131\u015f \u0130stifad\u0259","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7ox s\u0259tirli stringl\u0259rd\u0259 string interpolasiyan\u0131 nizams\u0131z istifad\u0259 etm\u0259k.</p> <pre><code>var name = \"Murat\";\nvar message = $\"Merhaba, {name}\nHosgeldin!\";\nConsole.WriteLine(message);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u00c7ox s\u0259tirli stringl\u0259rd\u0259 nizaml\u0131 bir qurulu\u015f t\u0259min edin.</p> <pre><code>var name = \"Murat\";\nvar message = $\"Merhaba, {name}\nHosgeldin!\";\nConsole.WriteLine(message);\n</code></pre>"},{"location":"csharp/string-interpolation/#6-lazmsz-mortriz-istifadsi","title":"6. Laz\u0131ms\u0131z M\u00f6rt\u0259riz\u0259 \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u0130nterpolasiya ifad\u0259l\u0259rind\u0259 laz\u0131ms\u0131z m\u00f6rt\u0259riz\u0259l\u0259r \u0259lav\u0259 etm\u0259k.</p> <pre><code>var name = \"Murat\";\nvar message = $\"Merhaba, {(name)}!\";\nConsole.WriteLine(message);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131ms\u0131z m\u00f6rt\u0259riz\u0259l\u0259rd\u0259n qa\u00e7\u0131n\u0131n.</p> <pre><code>var name = \"Murat\";\nvar message = $\"Merhaba, {name}!\";\nConsole.WriteLine(message);\n</code></pre>"},{"location":"csharp/target-typed-new/","title":"Target-Typed New","text":"<p>C# 9.0 il\u0259 g\u0259l\u0259n target-typed <code>new</code> x\u00fcsusiyy\u0259ti, tip \u00e7\u0131xar\u0131lmas\u0131n\u0131 asanla\u015fd\u0131raraq kodunuzu daha q\u0131sa v\u0259 oxunaql\u0131 hala g\u0259tirir. Lakin, yanl\u0131\u015f istifad\u0259l\u0259ri kodun anla\u015f\u0131ql\u0131l\u0131\u011f\u0131n\u0131 v\u0259 bax\u0131m\u0131n\u0131 \u00e7\u0259tinl\u0259\u015fdir\u0259 bil\u0259r.</p>"},{"location":"csharp/target-typed-new/#1-hdf-tipin-qeyri-muyyn-oldugu-vziyytlr","title":"1. H\u0259d\u0259f Tipin Qeyri-M\u00fc\u0259yy\u0259n Oldu\u011fu V\u0259ziyy\u0259tl\u0259r","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259d\u0259f tipin a\u00e7\u0131q olmad\u0131\u011f\u0131 v\u0259ziyy\u0259tl\u0259rd\u0259 target-typed <code>new</code> istifad\u0259 etm\u0259k.</p> <pre><code>var person = new(); // Hans\u0131 tip oldu\u011fu anla\u015f\u0131la bilm\u0259z\nperson.Name = \"Murat\";\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259d\u0259f tipin ayd\u0131n bir \u015f\u0259kild\u0259 g\u00f6st\u0259rildiyi v\u0259ziyy\u0259tl\u0259rd\u0259 istifad\u0259 edin.</p> <pre><code>Person person = new();\nperson.Name = \"Murat\";\n</code></pre> <p>T\u0259rif: <pre><code>public class Person\n{\n    public string Name { get; set; }\n}\n</code></pre></p>"},{"location":"csharp/target-typed-new/#2-murkkb-ifadlrd-target-typed-new-istifad-etmk","title":"2. M\u00fcr\u0259kk\u0259b \u0130fad\u0259l\u0259rd\u0259 Target-Typed <code>new</code> \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Target-typed <code>new</code>\u2018i m\u00fcr\u0259kk\u0259b ifad\u0259l\u0259rd\u0259 istifad\u0259 ed\u0259r\u0259k kodu daha az oxunaql\u0131 hala g\u0259tirm\u0259k.</p> <pre><code>var person = new(\"Murat\", 33); // X\u00fcsusil\u0259 bird\u0259n \u00e7ox konstruktor varsa qeyri-m\u00fc\u0259yy\u0259nlik yarada bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Target-typed <code>new</code>\u2018i sad\u0259 ifad\u0259l\u0259rd\u0259 istifad\u0259 edin.</p> <pre><code>Person person = new(\"Murat\", 33);\n</code></pre> <p>Konstruktor T\u0259rifi: <pre><code>public Person(string name, int age)\n{\n    Name = name;\n    Age = age;\n}\n</code></pre></p>"},{"location":"csharp/target-typed-new/#3-kolleksiyalarda-istifadsini-yanls-idar-etmk","title":"3. Kolleksiyalarda \u0130stifad\u0259sini Yanl\u0131\u015f \u0130dar\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Kolleksiya yaradark\u0259n h\u0259d\u0259f tipi g\u00f6st\u0259rm\u0259m\u0259k.</p> <pre><code>var people = new List&lt;Person&gt;\n{\n    new() { Name = \"Murat\" },\n    new() { Name = \"Derin\" }\n};\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Kolleksiyan\u0131n tipini a\u00e7\u0131q \u015f\u0259kild\u0259 g\u00f6st\u0259rin.</p> <pre><code>List&lt;Person&gt; people = new()\n{\n    new() { Name = \"Murat\" },\n    new() { Name = \"Derin\" }\n};\n</code></pre>"},{"location":"csharp/target-typed-new/#4-adlandrlms-arqumentlrl-shv-istifad","title":"4. Adland\u0131r\u0131lm\u0131\u015f Arqumentl\u0259rl\u0259 S\u0259hv \u0130stifad\u0259","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Adland\u0131r\u0131lm\u0131\u015f arqumentl\u0259rl\u0259 target-typed <code>new</code> istifad\u0259si qeyri-m\u00fc\u0259yy\u0259nlik yarada bil\u0259r.</p> <pre><code>var person = new(name: \"Murat\", age: 33);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Adland\u0131r\u0131lm\u0131\u015f arqumentl\u0259r istifad\u0259 ed\u0259rk\u0259n h\u0259d\u0259f tipi ayd\u0131nla\u015fd\u0131r\u0131n.</p> <pre><code>Person person = new(name: \"Murat\", age: 33);\n</code></pre>"},{"location":"csharp/target-typed-new/#5-target-typed-new-v-nullable-tiplr","title":"5. Target-Typed <code>new</code> v\u0259 <code>Nullable</code> Tipl\u0259r","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Nullable tipl\u0259rl\u0259 target-typed <code>new</code> istifad\u0259si yanl\u0131\u015f anla\u015f\u0131lmalara yol a\u00e7a bil\u0259r.</p> <pre><code>Person? person = new(); // Nullable amma hans\u0131 konstruktorun \u00e7a\u011f\u0131r\u0131ld\u0131\u011f\u0131 qeyri-m\u00fc\u0259yy\u0259ndir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Nullable tipl\u0259rl\u0259 istifad\u0259d\u0259 h\u0259d\u0259f tipi ayd\u0131nla\u015fd\u0131r\u0131n.</p> <pre><code>Person? person = new Person();\n</code></pre>"},{"location":"csharp/target-typed-new/#6-test-edil-bilirliyini-nzr-almamaq","title":"6. Test Edil\u0259 Bilirliyini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Test edil\u0259 bilirlik bax\u0131m\u0131ndan target-typed <code>new</code>\u2018in t\u0259sirini n\u0259z\u0259r\u0259 almamaq.</p> <pre><code>var service = new();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tipi ayd\u0131n bir \u015f\u0259kild\u0259 g\u00f6st\u0259rin v\u0259 test edil\u0259 bilirliyi art\u0131r\u0131n.</p> <pre><code>IService service = new ServiceImplementation();\n</code></pre> <p>T\u0259rif: <pre><code>public interface IService { }\npublic class ServiceImplementation : IService { }\n</code></pre></p>"},{"location":"csharp/tuples/","title":"Tuples","text":"<p>C# dilind\u0259 tuples, bird\u0259n \u00e7ox d\u0259y\u0259ri bir arada da\u015f\u0131maq \u00fc\u00e7\u00fcn faydal\u0131 bir m\u0259lumat strukturudur. Lakin, yanl\u0131\u015f istifad\u0259 v\u0259ziyy\u0259tl\u0259ri kodun oxunaql\u0131l\u0131\u011f\u0131n\u0131 v\u0259 davaml\u0131l\u0131\u011f\u0131n\u0131 azalda bil\u0259r.</p>"},{"location":"csharp/tuples/#1-mnasz-tuple-adlar-istifad-etmk","title":"1. M\u0259nas\u0131z Tuple Adlar\u0131 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tuple komponentl\u0259rini standart adlarla saxlamaq.</p> <pre><code>var result = GetPerson();\nConsole.WriteLine(result.Item1); // M\u0259nas\u0131z\nConsole.WriteLine(result.Item2);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tuple komponentl\u0259rin\u0259 m\u0259nal\u0131 adlar verin.</p> <pre><code>var (name, age) = GetPerson();\nConsole.WriteLine(name);\nConsole.WriteLine(age);\n</code></pre> <p>T\u0259rif: <pre><code>(string Name, int Age) GetPerson() =&gt; (\"Murat\", 33);\n</code></pre></p>"},{"location":"csharp/tuples/#2-tuples-yerin-siniflri-istifad-etmyi-nzr-almamaq","title":"2. Tuples Yerin\u0259 Sinifl\u0259ri \u0130stifad\u0259 Etm\u0259yi N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b m\u0259lumat strukturlar\u0131 \u00fc\u00e7\u00fcn tuple istifad\u0259 etm\u0259k.</p> <pre><code>(string, int, string) GetDetailedPerson() =&gt; (\"Murat\", 33, \"Istanbul\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Daha m\u00fcr\u0259kk\u0259b m\u0259lumat strukturlar\u0131 \u00fc\u00e7\u00fcn sinif v\u0259 ya record strukturu istifad\u0259 edin.</p> <pre><code>public record Person(string Name, int Age, string City);\n\nPerson GetDetailedPerson() =&gt; new(\"Murat\", 33, \"Istanbul\");\n</code></pre>"},{"location":"csharp/tuples/#3-uzun-tuple-strukturlar-istifad-etmk","title":"3. Uzun Tuple Strukturlar\u0131 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7ox sayda komponent ehtiva ed\u0259n tuple t\u0259rifl\u0259ri.</p> <pre><code>(string, int, string, string, bool) GetComplexData() =&gt; (\"Murat\", 33, \"Istanbul\", \"Yaz\u0131l\u0131m Mimar\u0131\", true);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Daha q\u0131sa v\u0259 m\u0259nal\u0131 tuple strukturlar\u0131 istifad\u0259 edin.</p> <pre><code>(string Name, int Age) GetBasicData() =&gt; (\"Murat\", 33);\n</code></pre>"},{"location":"csharp/tuples/#4-tuplelar-dongulrd-yanls-istifad-etmk","title":"4. Tuple\u2019lar\u0131 D\u00f6ng\u00fcl\u0259rd\u0259 Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tuple komponentl\u0259rin\u0259 birba\u015fa indeks il\u0259 \u00e7atmaq.</p> <pre><code>var data = new List&lt;(string, int)&gt;\n{\n    (\"Murat\", 33),\n    (\"Derin\", 2)\n};\n\nforeach (var item in data)\n{\n    Console.WriteLine($\"Name: {item.Item1}, Age: {item.Item2}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tuple komponentl\u0259rini m\u0259nal\u0131 adlarla \u00e7at\u0131n.</p> <pre><code>var data = new List&lt;(string Name, int Age)&gt;\n{\n    (\"Murat\", 33),\n    (\"Derin\", 2)\n};\n\nforeach (var (name, age) in data)\n{\n    Console.WriteLine($\"Name: {name}, Age: {age}\");\n}\n</code></pre>"},{"location":"csharp/tuples/#5-tuplelar-geri-donus-dyri-olaraq-yanls-istifad-etmk","title":"5. Tuple\u2019lar\u0131 Geri D\u00f6n\u00fc\u015f D\u0259y\u0259ri Olaraq Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: A\u00e7\u0131q \u015f\u0259kild\u0259 t\u0259yin olunmam\u0131\u015f tuple\u2019lar\u0131 metod d\u00f6n\u00fc\u015f d\u0259y\u0259ri olaraq istifad\u0259 etm\u0259k.</p> <pre><code>public (string, int) GetPerson() =&gt; (\"Murat\", 33);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tuple d\u00f6n\u00fc\u015f d\u0259y\u0259rl\u0259rini a\u00e7\u0131q \u015f\u0259kild\u0259 t\u0259yin edin.</p> <pre><code>public (string Name, int Age) GetPerson() =&gt; (\"Murat\", 33);\n</code></pre>"},{"location":"csharp/tuples/#6-tuple-dyrlrini-yanls-dyrlndirmk","title":"6. Tuple D\u0259y\u0259rl\u0259rini Yanl\u0131\u015f D\u0259y\u0259rl\u0259ndirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tuple\u2019lar\u0131 m\u00fcqayis\u0259 ed\u0259rk\u0259n b\u00fct\u00fcn komponentl\u0259ri yoxlamamaq.</p> <pre><code>var tuple1 = (\"Murat\", 33);\nvar tuple2 = (\"Murat\", 2);\n\nif (tuple1 == tuple2) // X\u0259ta\n{\n    Console.WriteLine(\"B\u0259rab\u0259r!\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tuple m\u00fcqayis\u0259l\u0259rind\u0259 b\u00fct\u00fcn komponentl\u0259ri n\u0259z\u0259r\u0259 al\u0131n.</p> <pre><code>var tuple1 = (\"Murat\", 33);\nvar tuple2 = (\"Murat\", 33);\n\nif (tuple1 == tuple2)\n{\n    Console.WriteLine(\"B\u0259rab\u0259r!\");\n}\n</code></pre>"},{"location":"dapper/async-queries/","title":"Async/Await il\u0259 Asinxron Sor\u011fular","text":"<p>Dapper, asinxron sor\u011fular \u00fc\u00e7\u00fcn <code>async/await</code> d\u0259st\u0259yi t\u0259qdim edir. Asinxron proqramla\u015fd\u0131rma, y\u00fcks\u0259k performansl\u0131 v\u0259 miqyaslana bil\u0259n t\u0259tbiql\u0259r yaratma\u011f\u0131n t\u0259m\u0259l da\u015flar\u0131ndan biridir. Lakin, asinxron \u0259m\u0259liyyatlar\u0131n yanl\u0131\u015f istifad\u0259si g\u00f6zl\u0259nilm\u0259z davran\u0131\u015flara v\u0259 performans probleml\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dapper/async-queries/#1-sas-asinxron-sorgular","title":"1. \u018fsas Asinxron Sor\u011fular","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Asinxron sor\u011fular\u0131 sinxron olaraq \u00e7a\u011f\u0131rmaq.</p> <pre><code>var query = \"SELECT * FROM Users\";\nvar users = connection.QueryAsync&lt;User&gt;(query).Result; // Deadlock riski\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Asinxron \u00e7a\u011f\u0131r\u0131\u015flar\u0131 h\u0259r zaman <code>await</code> il\u0259 g\u00f6zl\u0259yin.</p> <pre><code>var query = \"SELECT * FROM Users\";\nvar users = await connection.QueryAsync&lt;User&gt;(query);\n</code></pre>"},{"location":"dapper/async-queries/#2-birdn-cox-asinxron-sorgu-idaretmsi","title":"2. Bird\u0259n \u00c7ox Asinxron Sor\u011fu \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sor\u011fular\u0131 ard\u0131c\u0131l i\u015fl\u0259tm\u0259k.</p> <pre><code>var orders = await connection.QueryAsync&lt;Order&gt;(\"SELECT * FROM Orders\");\nvar customers = await connection.QueryAsync&lt;Customer&gt;(\"SELECT * FROM Customers\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011fular\u0131 eyni anda ba\u015flad\u0131n v\u0259 <code>Task.WhenAll</code> il\u0259 g\u00f6zl\u0259yin.</p> <pre><code>var ordersTask = connection.QueryAsync&lt;Order&gt;(\"SELECT * FROM Orders\");\nvar customersTask = connection.QueryAsync&lt;Customer&gt;(\"SELECT * FROM Customers\");\n\nawait Task.WhenAll(ordersTask, customersTask);\n\nvar orders = ordersTask.Result;\nvar customers = customersTask.Result;\n</code></pre>"},{"location":"dapper/async-queries/#3-transaction-il-asinxron-mliyyatlar","title":"3. Transaction il\u0259 Asinxron \u018fm\u0259liyyatlar","text":"<p>Asinxron \u0259m\u0259liyyatlar\u0131 transaction il\u0259 birl\u0259\u015fdirm\u0259k m\u00fcmk\u00fcnd\u00fcr.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>using var transaction = connection.BeginTransaction();\n\ntry\n{\n    var insertQuery = \"INSERT INTO Orders (CustomerId) VALUES (@CustomerId)\";\n    await connection.ExecuteAsync(insertQuery, new { CustomerId = 1 }, transaction);\n\n    var updateQuery = \"UPDATE Customers SET IsActive = @IsActive WHERE Id = @Id\";\n    await connection.ExecuteAsync(updateQuery, new { IsActive = true, Id = 1 }, transaction);\n\n    transaction.Commit();\n}\ncatch\n{\n    transaction.Rollback();\n    throw;\n}\n</code></pre>"},{"location":"dapper/async-queries/#4-performans-v-resurs-idaretmsi","title":"4. Performans v\u0259 Resurs \u0130dar\u0259etm\u0259si","text":"<ul> <li>Connection Pooling: Asinxron \u0259m\u0259liyyatlarda \u201cconnection pool\u201dun s\u0259m\u0259r\u0259li istifad\u0259 olundu\u011fundan \u0259min olun.</li> <li>Cancellation Token \u0130stifad\u0259si: Uzun vaxt t\u0259l\u0259b ed\u0259n \u0259m\u0259liyyatlar \u00fc\u00e7\u00fcn l\u0259\u011fvetm\u0259 mexanizml\u0259ri istifad\u0259 edin.</li> </ul> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var cts = new CancellationTokenSource(TimeSpan.FromSeconds(10));\n\nvar query = \"SELECT * FROM Orders WHERE OrderDate &gt; @Date\";\nvar orders = await connection.QueryAsync&lt;Order&gt;(query, new { Date = DateTime.UtcNow.AddDays(-30) }, cancellationToken: cts.Token);\n</code></pre>"},{"location":"dapper/async-queries/#5-deadlock-problemlrini-onlmk","title":"5. Deadlock Probleml\u0259rini \u00d6nl\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>.Result</code> v\u0259 ya <code>.Wait()</code> istifad\u0259 etm\u0259k.</p> <pre><code>var query = \"SELECT * FROM Products\";\nvar products = connection.QueryAsync&lt;Product&gt;(query).Result; // Deadlock riski\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>await</code> a\u00e7ar s\u00f6z\u00fcn\u00fc istifad\u0259 edin.</p> <pre><code>var query = \"SELECT * FROM Products\";\nvar products = await connection.QueryAsync&lt;Product&gt;(query);\n</code></pre>"},{"location":"dapper/basic-crud-operations/","title":"\u018fsas CRUD \u018fm\u0259liyyatlar\u0131","text":"<p>Dapper, sad\u0259 v\u0259 performansl\u0131 m\u0259lumat \u0259ld\u0259 etm\u0259yi t\u0259min etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 edil\u0259n bir kitabxanad\u0131r. CRUD (Create, Read, Update, Delete) \u0259m\u0259liyyatlar\u0131 Dapper il\u0259 olduqca asand\u0131r, lakin yanl\u0131\u015f istifad\u0259si t\u0259hl\u00fck\u0259sizlik a\u00e7\u0131qlar\u0131na v\u0259 performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"dapper/basic-crud-operations/#1-mlumat-lav-etm-insert","title":"1. M\u0259lumat \u018flav\u0259 Etm\u0259 (Insert)","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: SQL injection a\u00e7\u0131q sor\u011fular yazmaq.</p> <pre><code>var query = $\"INSERT INTO Users (Name, Age) VALUES ('{name}', {age})\";\nconnection.Execute(query);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Parametrl\u0259ri t\u0259hl\u00fck\u0259siz bir \u015f\u0259kild\u0259 istifad\u0259 edin.</p> <pre><code>var query = \"INSERT INTO Users (Name, Age) VALUES (@Name, @Age)\";\nconnection.Execute(query, new { Name = name, Age = age });\n</code></pre>"},{"location":"dapper/basic-crud-operations/#2-mlumat-oxuma-read","title":"2. M\u0259lumat Oxuma (Read)","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn c\u0259dv\u0259li yadda\u015fa y\u00fckl\u0259m\u0259k.</p> <pre><code>var query = \"SELECT * FROM Users\";\nvar users = connection.Query&lt;User&gt;(query).ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Filtirl\u0259m\u0259 v\u0259 projeksiyon il\u0259 daha az m\u0259lumat g\u0259tirin.</p> <pre><code>var query = \"SELECT Id, Name FROM Users WHERE Age &gt; @Age\";\nvar users = connection.Query&lt;User&gt;(query, new { Age = 25 }).ToList();\n</code></pre>"},{"location":"dapper/basic-crud-operations/#3-mlumat-yenilm-update","title":"3. M\u0259lumat Yenil\u0259m\u0259 (Update)","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn s\u00fctunlar\u0131 laz\u0131ms\u0131z yer\u0259 yenil\u0259m\u0259k.</p> <pre><code>var query = \"UPDATE Users SET Name = 'UpdatedName', Age = 30 WHERE Id = @Id\";\nconnection.Execute(query, new { Id = userId });\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z laz\u0131m olan s\u00fctunlar\u0131 yenil\u0259yin.</p> <pre><code>var query = \"UPDATE Users SET Name = @Name WHERE Id = @Id\";\nconnection.Execute(query, new { Name = \"UpdatedName\", Id = userId });\n</code></pre>"},{"location":"dapper/basic-crud-operations/#4-mlumat-silm-delete","title":"4. M\u0259lumat Silm\u0259 (Delete)","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u015e\u0259rt olmadan m\u0259lumat silm\u0259k.</p> <pre><code>var query = \"DELETE FROM Users\";\nconnection.Execute(query);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Silm\u0259 \u0259m\u0259liyyatlar\u0131n\u0131 h\u0259r zaman filtirl\u0259yin.</p> <pre><code>var query = \"DELETE FROM Users WHERE Id = @Id\";\nconnection.Execute(query, new { Id = userId });\n</code></pre>"},{"location":"dapper/basic-crud-operations/#5-performans-v-thluksizlik-ipuclar","title":"5. Performans v\u0259 T\u0259hl\u00fck\u0259sizlik \u0130pu\u00e7lar\u0131","text":"<ul> <li>Prepared Statements: H\u0259r zaman parametrl\u0259rl\u0259 sor\u011fular istifad\u0259 ed\u0259r\u0259k SQL enjeksiyonunu \u00f6nl\u0259yin.</li> <li>Minimal M\u0259lumat G\u0259tirm\u0259: B\u00fct\u00fcn c\u0259dv\u0259li yadda\u015fa y\u00fckl\u0259m\u0259k yerin\u0259 ehtiyac\u0131n\u0131z olan s\u00fctunlar\u0131 se\u00e7in.</li> <li>Transaction \u0130stifad\u0259si: Bird\u0259n \u00e7ox \u0259m\u0259liyyat\u0131 birlikd\u0259 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn transaction istifad\u0259 etm\u0259yi d\u00fc\u015f\u00fcn\u00fcn.</li> </ul> <pre><code>using var transaction = connection.BeginTransaction();\ntry\n{\n    var insertQuery = \"INSERT INTO Users (Name, Age) VALUES (@Name, @Age)\";\n    connection.Execute(insertQuery, new { Name = \"Murat\", Age = 33 }, transaction);\n\n    var updateQuery = \"UPDATE Users SET Age = @Age WHERE Name = @Name\";\n    connection.Execute(updateQuery, new { Name = \"Murat\", Age = 34 }, transaction);\n\n    transaction.Commit();\n}\ncatch\n{\n    transaction.Rollback();\n    throw;\n}\n</code></pre>"},{"location":"dapper/bulk-operations/","title":"Toplu \u018fm\u0259liyyatlar v\u0259 Performans Art\u0131m\u0131","text":"<p>Dapper, bir d\u0259f\u0259y\u0259 \u00e7ox miqdarda m\u0259lumat \u0259m\u0259liyyatlar\u0131 (toplu \u0259m\u0259liyyatlar) \u00fc\u00e7\u00fcn t\u0259sirli bir vasit\u0259dir. Lakin, bu \u0259m\u0259liyyatlar\u0131 do\u011fru qurmazsan\u0131z performans probleml\u0259rin\u0259 yol a\u00e7a bil\u0259rsiniz. Toplu \u0259m\u0259liyyatlar\u0131 optimalla\u015fd\u0131rmaq, t\u0259tbiqinizin resurs s\u0259rfiyyat\u0131n\u0131 azald\u0131r v\u0259 \u0259m\u0259liyyat m\u00fcdd\u0259tl\u0259rini q\u0131sald\u0131r.</p>"},{"location":"dapper/bulk-operations/#1-tkli-lav-etm-v-performans-problemi","title":"1. T\u0259kli \u018flav\u0259 Etm\u0259 v\u0259 Performans Problemi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r \u0259lav\u0259 etm\u0259 \u0259m\u0259liyyat\u0131 \u00fc\u00e7\u00fcn ayr\u0131 bir sor\u011fu i\u015fl\u0259tm\u0259k.</p> <pre><code>foreach (var user in users)\n{\n    connection.Execute(\"INSERT INTO Users (Name, Age) VALUES (@Name, @Age)\", user);\n}\n</code></pre> <p>Bu \u00fcsul, b\u00f6y\u00fck m\u0259lumat d\u0259stl\u0259rind\u0259 veril\u0259nl\u0259r bazas\u0131na laz\u0131ms\u0131z sor\u011fular g\u00f6nd\u0259r\u0259r\u0259k performans\u0131 a\u015fa\u011f\u0131 sal\u0131r.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00fct\u00fcn m\u0259lumat\u0131 t\u0259k bir \u0259m\u0259liyyatla \u0259lav\u0259 edin.</p> <pre><code>var query = \"INSERT INTO Users (Name, Age) VALUES (@Name, @Age)\";\nconnection.Execute(query, users);\n</code></pre>"},{"location":"dapper/bulk-operations/#2-toplu-update-mliyyatlar","title":"2. Toplu Update \u018fm\u0259liyyatlar\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r bir yenil\u0259m\u0259 \u00fc\u00e7\u00fcn ayr\u0131 bir sor\u011fu.</p> <pre><code>foreach (var user in users)\n{\n    connection.Execute(\"UPDATE Users SET Age = @Age WHERE Id = @Id\", user);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: T\u0259k bir sor\u011fuda toplu yenil\u0259m\u0259.</p> <pre><code>var query = @\"\n    UPDATE Users \n    SET Age = CASE Id \n        WHEN @Id1 THEN @Age1 \n        WHEN @Id2 THEN @Age2 \n    END\n    WHERE Id IN (@Id1, @Id2)\";\n\nconnection.Execute(query, new \n{\n    Id1 = users[0].Id, Age1 = users[0].Age,\n    Id2 = users[1].Id, Age2 = users[1].Age\n});\n</code></pre>"},{"location":"dapper/bulk-operations/#3-performans-ucun-table-valued-parameters-tvp","title":"3. Performans \u00dc\u00e7\u00fcn Table-Valued Parameters (TVP)","text":"<p>Dapper, birba\u015fa TVP d\u0259st\u0259yi t\u0259qdim etmir, lakin SQL Server-d\u0259 TVP istifad\u0259 ed\u0259r\u0259k performans\u0131 art\u0131ra bil\u0259rsiniz.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var dataTable = new DataTable();\ndataTable.Columns.Add(\"Id\", typeof(int));\ndataTable.Columns.Add(\"Name\", typeof(string));\n\nforeach (var user in users)\n{\n    dataTable.Rows.Add(user.Id, user.Name);\n}\n\nusing var connection = new SqlConnection(connectionString);\nusing var command = connection.CreateCommand();\ncommand.CommandText = \"dbo.BulkInsertUsers\";\ncommand.CommandType = CommandType.StoredProcedure;\n\nvar parameter = command.Parameters.AddWithValue(\"@Users\", dataTable);\nparameter.SqlDbType = SqlDbType.Structured;\n\nconnection.Open();\ncommand.ExecuteNonQuery();\n</code></pre>"},{"location":"dapper/bulk-operations/#4-performans-ipuclar","title":"4. Performans \u0130pu\u00e7lar\u0131","text":"<ul> <li>Batching: \u018fm\u0259liyyatlar\u0131 qruplara ay\u0131raraq sor\u011fu say\u0131n\u0131 azald\u0131n.</li> <li>Transaction \u0130stifad\u0259si: Toplu \u0259m\u0259liyyatlar \u00fc\u00e7\u00fcn <code>Transaction</code> istifad\u0259 ed\u0259r\u0259k m\u0259lumat tutarl\u0131l\u0131\u011f\u0131n\u0131 t\u0259min edin.</li> <li>Profiling v\u0259 \u0130zl\u0259m\u0259: SQL Server-d\u0259 <code>Query Execution Plan</code> istifad\u0259 ed\u0259r\u0259k sor\u011fular\u0131n\u0131z\u0131 optimalla\u015fd\u0131r\u0131n.</li> </ul>"},{"location":"dapper/multiple-mapping/","title":"\u00c7oxlu E\u015fl\u0259\u015fdirm\u0259","text":"<p>Dapper, bird\u0259n \u00e7ox obyekti t\u0259k bir sor\u011fudan \u00e7\u0259km\u0259k \u00fc\u00e7\u00fcn Multiple Mapping x\u00fcsusiyy\u0259ti t\u0259qdim edir. Bu, x\u00fcsusil\u0259 \u0259laq\u0259li veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131nda, bird\u0259n \u00e7ox c\u0259dv\u0259ld\u0259n m\u0259lumat \u00e7\u0259km\u0259 \u0259m\u0259liyyatlar\u0131nda olduqca faydal\u0131d\u0131r. Lakin, yanl\u0131\u015f istifad\u0259 edildiyind\u0259 m\u00fcr\u0259kk\u0259b kod strukturuna v\u0259 performans itkisin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"dapper/multiple-mapping/#1-tk-obyekt-eslsdirm","title":"1. T\u0259k Obyekt E\u015fl\u0259\u015fdirm\u0259","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: C\u0259dv\u0259ll\u0259ri manual birl\u0259\u015fdirm\u0259.</p> <pre><code>var query = \"SELECT * FROM Orders o JOIN Customers c ON o.CustomerId = c.Id\";\nvar data = connection.Query(query).ToList(); // Birl\u0259\u015fdirm\u0259 apar\u0131lm\u0131r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: T\u0259k bir sor\u011fudan bird\u0259n \u00e7ox obyekti e\u015fl\u0259\u015fdirin.</p> <pre><code>var query = \"SELECT o.*, c.* FROM Orders o JOIN Customers c ON o.CustomerId = c.Id\";\nvar result = connection.Query&lt;Order, Customer, Order&gt;(\n    query,\n    (order, customer) =&gt;\n    {\n        order.Customer = customer;\n        return order;\n    },\n    splitOn: \"Id\"\n).ToList();\n</code></pre>"},{"location":"dapper/multiple-mapping/#2-birdn-cox-obyekt-v-murkkb-birlsdirm","title":"2. Bird\u0259n \u00c7ox Obyekt v\u0259 M\u00fcr\u0259kk\u0259b Birl\u0259\u015fdirm\u0259","text":"<p>Dapper, bird\u0259n \u00e7ox obyekti birl\u0259\u015fdirm\u0259k \u00fc\u00e7\u00fcn <code>splitOn</code> x\u00fcsusiyy\u0259tini istifad\u0259 edir. Bu, h\u0259r obyekt \u00fc\u00e7\u00fcn ay\u0131r\u0131c\u0131 s\u00fctunlar m\u00fc\u0259yy\u0259nl\u0259\u015fdirm\u0259yiniz\u0259 imkan verir.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var query = @\"\n    SELECT o.Id, o.OrderDate, c.Id, c.Name, p.Id, p.Name \n    FROM Orders o \n    JOIN Customers c ON o.CustomerId = c.Id\n    JOIN Products p ON o.ProductId = p.Id\";\n\nvar result = connection.Query&lt;Order, Customer, Product, Order&gt;(\n    query,\n    (order, customer, product) =&gt;\n    {\n        order.Customer = customer;\n        order.Product = product;\n        return order;\n    },\n    splitOn: \"Id,Id\"\n).ToList();\n</code></pre>"},{"location":"dapper/multiple-mapping/#3-performans-ipuclar","title":"3. Performans \u0130pu\u00e7lar\u0131","text":"<ul> <li>splitOn \u0130stifad\u0259si: <code>splitOn</code> x\u00fcsusiyy\u0259tini do\u011fru m\u00fc\u0259yy\u0259nl\u0259\u015fdirin; \u0259ks halda yanl\u0131\u015f birl\u0259\u015fdirm\u0259 apar\u0131la bil\u0259r.</li> <li>Laz\u0131ms\u0131z M\u0259lumatlar\u0131 Daxil Etm\u0259yin: Yaln\u0131z ehtiyac duyulan s\u00fctunlar\u0131 se\u00e7in.</li> <li>\u018flaq\u0259 \u0130dar\u0259etm\u0259si: Obyektl\u0259r aras\u0131 \u0259laq\u0259l\u0259ri kod t\u0259r\u0259find\u0259 idar\u0259 edin.</li> </ul>"},{"location":"dapper/multiple-mapping/#4-coxlu-birlsdirm-il-problemi-hll-etmk","title":"4. \u00c7oxlu Birl\u0259\u015fdirm\u0259 il\u0259 Problemi H\u0259ll Etm\u0259k","text":"<ul> <li>Do\u011fru splitOn Ayar\u0131: <code>splitOn</code> x\u00fcsusiyy\u0259tind\u0259 s\u00fctun adlar\u0131n\u0131n s\u0131ras\u0131n\u0131 yoxlay\u0131n.</li> <li>S\u00fctun Adland\u0131rma Toqqu\u015fmalar\u0131: \u018fg\u0259r eyni adda s\u00fctunlar varsa, alias (l\u0259q\u0259b) istifad\u0259 edin.</li> </ul> <pre><code>SELECT \n    o.Id AS OrderId, \n    c.Id AS CustomerId, \n    p.Id AS ProductId \nFROM Orders o \nJOIN Customers c ON o.CustomerId = c.Id\nJOIN Products p ON o.ProductId = p.Id\n</code></pre>"},{"location":"dapper/n-plus-1-problem/","title":"N+1 Problemi","text":"<p>N+1 problemi, \u0259laq\u0259li veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131nda tez-tez rast g\u0259lin\u0259n bir performans t\u0259l\u0259sidir. X\u00fcsusil\u0259 Dapper kimi ORM al\u0259tl\u0259ri il\u0259 i\u015fl\u0259y\u0259rk\u0259n, d\u00fczg\u00fcn sor\u011fulama apar\u0131lmad\u0131qda veril\u0259nl\u0259r bazas\u0131na laz\u0131ms\u0131z bir \u015f\u0259kild\u0259 \u00e7ox sayda sor\u011fu g\u00f6nd\u0259rilm\u0259sin\u0259 yol a\u00e7\u0131r. Bu v\u0259ziyy\u0259t, t\u0259tbiqinizin performans\u0131na ciddi t\u0259sir ed\u0259 bil\u0259r.</p>"},{"location":"dapper/n-plus-1-problem/#1-n1-probleminin-trifi","title":"1. N+1 Probleminin T\u0259rifi","text":"<p>N+1 problemi, bir siyah\u0131ya aid h\u0259r bir element \u00fc\u00e7\u00fcn ayr\u0131 bir sor\u011fu i\u015f\u0259 sal\u0131nd\u0131qda ortaya \u00e7\u0131x\u0131r. Bu, \u00fcmumilikd\u0259 1 \u0259sas sor\u011fu v\u0259 N \u0259d\u0259d alt sor\u011fu i\u015f\u0259 sal\u0131nmas\u0131 dem\u0259kdir.</p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Siyah\u0131n\u0131 d\u00f6vr i\u00e7ind\u0259 sor\u011fulamaq.</p> <pre><code>var orders = connection.Query&lt;Order&gt;(\"SELECT * FROM Orders\").ToList();\n\nforeach (var order in orders)\n{\n    order.Customer = connection.QuerySingle&lt;Customer&gt;(\n        \"SELECT * FROM Customers WHERE Id = @Id\",\n        new { Id = order.CustomerId });\n}\n</code></pre> <p>Bu \u00fcsul, veril\u0259nl\u0259r bazas\u0131na laz\u0131ms\u0131z yer\u0259 \u00e7ox sayda sor\u011fu g\u00f6nd\u0259rir v\u0259 performans\u0131 a\u015fa\u011f\u0131 sal\u0131r.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>JOIN</code> istifad\u0259 ed\u0259r\u0259k b\u00fct\u00fcn veril\u0259nl\u0259ri t\u0259k bir sor\u011fuda g\u0259tirin.</p> <pre><code>var query = @\"\n    SELECT o.*, c.* \n    FROM Orders o\n    JOIN Customers c ON o.CustomerId = c.Id\";\n\nvar orders = connection.Query&lt;Order, Customer, Order&gt;(\n    query,\n    (order, customer) =&gt;\n    {\n        order.Customer = customer;\n        return order;\n    },\n    splitOn: \"Id\"\n).ToList();\n</code></pre>"},{"location":"dapper/n-plus-1-problem/#2-lazy-loading-tlsi","title":"2. Lazy Loading T\u0259l\u0259si","text":"<p>Lazy loading (gec y\u00fckl\u0259m\u0259), ad\u0259t\u0259n N+1 problemini yaradan bir \u00fcsuldur. Dapper, standart olaraq lazy loading d\u0259st\u0259kl\u0259mir, lakin manual t\u0259tbiq oluna bil\u0259r. Bu proses performans probleml\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r obyekt \u00fc\u00e7\u00fcn ayr\u0131 sor\u011fu.</p> <pre><code>var orders = connection.Query&lt;Order&gt;(\"SELECT * FROM Orders\").ToList();\n\nforeach (var order in orders)\n{\n    order.Customer = GetCustomerById(order.CustomerId);\n}\n\nCustomer GetCustomerById(int customerId)\n{\n    return connection.QuerySingle&lt;Customer&gt;(\n        \"SELECT * FROM Customers WHERE Id = @Id\",\n        new { Id = customerId });\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131m olan b\u00fct\u00fcn veril\u0259nl\u0259ri birl\u0259\u015fdir\u0259r\u0259k g\u0259tirin.</p> <pre><code>var query = @\"\n    SELECT o.Id, o.OrderDate, c.Id AS CustomerId, c.Name AS CustomerName\n    FROM Orders o\n    JOIN Customers c ON o.CustomerId = c.Id\";\n\nvar orders = connection.Query&lt;Order, Customer, Order&gt;(\n    query,\n    (order, customer) =&gt;\n    {\n        order.Customer = customer;\n        return order;\n    },\n    splitOn: \"CustomerId\"\n).ToList();\n</code></pre>"},{"location":"dapper/n-plus-1-problem/#3-performans-v-resurs-istifadsi","title":"3. Performans v\u0259 Resurs \u0130stifad\u0259si","text":"<ul> <li>JOIN \u0130stifad\u0259si: N+1 probleminin qar\u015f\u0131s\u0131n\u0131 almaq \u00fc\u00e7\u00fcn veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131nda <code>JOIN</code> istifad\u0259 edin.</li> <li>Siyah\u0131 \u018fm\u0259liyyatlar\u0131: B\u00fct\u00fcn siyah\u0131n\u0131 t\u0259k bir sor\u011fu il\u0259 al\u0131n, d\u00f6vr i\u00e7ind\u0259 sor\u011fu etm\u0259kd\u0259n qa\u00e7\u0131n\u0131n.</li> <li>Profiling Al\u0259tl\u0259ri: Sor\u011fular\u0131n\u0131z\u0131n veril\u0259nl\u0259r bazas\u0131na ne\u00e7\u0259 d\u0259f\u0259 getdiyini izl\u0259m\u0259k \u00fc\u00e7\u00fcn profiling istifad\u0259 edin.</li> </ul>"},{"location":"dapper/query-multiple/","title":"QueryMultiple","text":"<p>Dapper, bir sor\u011fudan bird\u0259n \u00e7ox n\u0259tic\u0259 toplusu alma\u011f\u0131n\u0131za imkan verir. <code>QueryMultiple</code> metodu say\u0259sind\u0259, \u0259laq\u0259li veril\u0259nl\u0259r bazalar\u0131ndak\u0131 m\u00fcr\u0259kk\u0259b sor\u011fular\u0131 sad\u0259l\u0259\u015fdir\u0259 v\u0259 bird\u0259n \u00e7ox c\u0259dv\u0259li t\u0259k bir \u0259m\u0259liyyatda \u00e7\u0259k\u0259 bil\u0259rsiniz. Lakin, bu metodun yanl\u0131\u015f istifad\u0259si performans probleml\u0259rin\u0259 v\u0259 veril\u0259nl\u0259rin uy\u011funsuzluqlar\u0131na yol a\u00e7a bil\u0259r.</p>"},{"location":"dapper/query-multiple/#1-sas-querymultiple-istifadsi","title":"1. \u018fsas QueryMultiple \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sor\u011fu n\u0259tic\u0259l\u0259rini manual b\u00f6lm\u0259k.</p> <pre><code>var orders = connection.Query&lt;Order&gt;(\"SELECT * FROM Orders\").ToList();\nvar customers = connection.Query&lt;Customer&gt;(\"SELECT * FROM Customers\").ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>QueryMultiple</code> il\u0259 h\u0259r iki n\u0259tic\u0259ni t\u0259k bir sor\u011fuda al\u0131n.</p> <pre><code>var query = \"SELECT * FROM Orders; SELECT * FROM Customers\";\n\nusing var multi = connection.QueryMultiple(query);\nvar orders = multi.Read&lt;Order&gt;().ToList();\nvar customers = multi.Read&lt;Customer&gt;().ToList();\n</code></pre>"},{"location":"dapper/query-multiple/#2-parametrli-sorgularla-querymultiple-istifadsi","title":"2. Parametrli Sor\u011fularla QueryMultiple \u0130stifad\u0259si","text":"<p>\u2705 N\u00fcmun\u0259: Parametrl\u0259rd\u0259n istifad\u0259 ed\u0259r\u0259k n\u0259tic\u0259 topulsunu dinamikl\u0259\u015fdirin.</p> <pre><code>var query = \"SELECT * FROM Orders WHERE CustomerId = @CustomerId; SELECT * FROM Customers WHERE Id = @CustomerId\";\n\nusing var multi = connection.QueryMultiple(query, new { CustomerId = 1 });\nvar orders = multi.Read&lt;Order&gt;().ToList();\nvar customer = multi.Read&lt;Customer&gt;().FirstOrDefault();\n</code></pre>"},{"location":"dapper/query-multiple/#3-coxlu-ntic-toplusu-il-murkkb-veri-birlsdirm","title":"3. \u00c7oxlu N\u0259tic\u0259 Toplusu il\u0259 M\u00fcr\u0259kk\u0259b Veri Birl\u0259\u015fdirm\u0259","text":"<p>Dapper, <code>QueryMultiple</code> il\u0259 m\u00fcr\u0259kk\u0259b veril\u0259r strukturlar\u0131n\u0131 idar\u0259 etm\u0259yi asanla\u015fd\u0131r\u0131r.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var query = @\"\n    SELECT o.Id, o.OrderDate, c.Id AS CustomerId, c.Name AS CustomerName\n    FROM Orders o\n    JOIN Customers c ON o.CustomerId = c.Id;\n    SELECT * FROM Products;\";\n\nusing var multi = connection.QueryMultiple(query);\nvar orders = multi.Read&lt;OrderWithCustomer&gt;().ToList();\nvar products = multi.Read&lt;Product&gt;().ToList();\n</code></pre> <p>Burada <code>OrderWithCustomer</code> a\u015fa\u011f\u0131dak\u0131 kimi bir sinif ola bil\u0259r:</p> <pre><code>public class OrderWithCustomer\n{\n    public int Id { get; set; }\n    public DateTime OrderDate { get; set; }\n    public Customer Customer { get; set; }\n}\n</code></pre>"},{"location":"dapper/query-multiple/#4-performans-mslhtlri","title":"4. Performans M\u0259sl\u0259h\u0259tl\u0259ri","text":"<ul> <li>Minimum Veri \u00c7\u0259km\u0259: Yaln\u0131z ehtiyac duyulan s\u00fctunlar\u0131 sor\u011fulay\u0131n.</li> <li>D\u00fczg\u00fcn S\u0131ra: <code>QueryMultiple</code> il\u0259 al\u0131nan n\u0259tic\u0259l\u0259ri d\u00fczg\u00fcn s\u0131rada oxuyun. Yanl\u0131\u015f s\u0131ra x\u0259talara yol a\u00e7a bil\u0259r.</li> <li>Resurs \u0130dar\u0259etm\u0259: <code>QueryMultiple</code> n\u0259tic\u0259l\u0259ri tamamland\u0131qdan sonra <code>Dispose</code> \u00e7a\u011f\u0131raraq resurslar\u0131 s\u0259rb\u0259st buraxma\u011f\u0131 unutmay\u0131n.</li> </ul>"},{"location":"dapper/query-parameters/","title":"Query Parametrl\u0259ri \u0130stifad\u0259si","text":"<p>Dapper, SQL sor\u011fular\u0131nda parametr istifad\u0259si il\u0259 h\u0259m t\u0259hl\u00fck\u0259siz, h\u0259m d\u0259 oxunaql\u0131 kod yazma\u011f\u0131n\u0131z\u0131 t\u0259min edir. Parametrl\u0259r say\u0259sind\u0259 SQL injeksiyonunun qar\u015f\u0131s\u0131n\u0131 ala bil\u0259r v\u0259 performans\u0131 art\u0131ra bil\u0259rsiniz. Lakin, parametrl\u0259rin yanl\u0131\u015f istifad\u0259si performans itkisin\u0259 v\u0259 t\u0259hl\u00fck\u0259sizlik a\u00e7\u0131qlar\u0131na s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"dapper/query-parameters/#1-parametrsiz-sorgular-yazmaq","title":"1. Parametrsiz Sor\u011fular Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Parametrsiz sor\u011fular SQL injeksiyonuna a\u00e7\u0131q qap\u0131 burax\u0131r.</p> <pre><code>var query = $\"SELECT * FROM Users WHERE Name = '{name}'\";\nvar users = connection.Query&lt;User&gt;(query);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Parametrl\u0259r il\u0259 t\u0259hl\u00fck\u0259siz sor\u011fular yaz\u0131n.</p> <pre><code>var query = \"SELECT * FROM Users WHERE Name = @Name\";\nvar users = connection.Query&lt;User&gt;(query, new { Name = name });\n</code></pre>"},{"location":"dapper/query-parameters/#2-birdn-cox-parametr-istifadsi","title":"2. Bird\u0259n \u00c7ox Parametr \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Parametrl\u0259ri \u0259ll\u0259 birl\u0259\u015fdirm\u0259k.</p> <pre><code>var query = $\"SELECT * FROM Users WHERE Name = '{name}' AND Age = {age}\";\nvar users = connection.Query&lt;User&gt;(query);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Dapper-in parametr idar\u0259etm\u0259sini istifad\u0259 edin.</p> <pre><code>var query = \"SELECT * FROM Users WHERE Name = @Name AND Age = @Age\";\nvar users = connection.Query&lt;User&gt;(query, new { Name = name, Age = age });\n</code></pre>"},{"location":"dapper/query-parameters/#3-dinamik-parametrlrl-islmk","title":"3. Dinamik Parametrl\u0259rl\u0259 \u0130\u015fl\u0259m\u0259k","text":"<p>Dapper, dinamik parametrl\u0259r il\u0259 \u00e7evik sor\u011fular yazma\u011f\u0131n\u0131za imkan verir.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var parameters = new DynamicParameters();\nparameters.Add(\"Name\", name);\nparameters.Add(\"Age\", age);\n\nvar query = \"SELECT * FROM Users WHERE Name = @Name AND Age = @Age\";\nvar users = connection.Query&lt;User&gt;(query, parameters);\n</code></pre>"},{"location":"dapper/query-parameters/#4-performans-v-thluksizlik-mslhtlri","title":"4. Performans v\u0259 T\u0259hl\u00fck\u0259sizlik M\u0259sl\u0259h\u0259tl\u0259ri","text":"<ul> <li>SQL \u0130njeksiyonunun Qar\u015f\u0131s\u0131n\u0131 Al\u0131n: H\u0259r zaman parametrli sor\u011fular\u0131 istifad\u0259 edin.</li> <li>DynamicParameters \u0130stifad\u0259si: Dinamik ssenaril\u0259rd\u0259 parametr idar\u0259etm\u0259sini asanla\u015fd\u0131r\u0131r.</li> <li>Parametrl\u0259rin N\u00f6vl\u0259rin\u0259 Diqq\u0259t Edin: SQL tipl\u0259ri il\u0259 uy\u011fun parametrl\u0259r istifad\u0259 edin.</li> </ul> <pre><code>var parameters = new DynamicParameters();\nparameters.Add(\"IsActive\", true, DbType.Boolean);\nparameters.Add(\"JoinDate\", DateTime.Now, DbType.DateTime);\n\nvar query = \"SELECT * FROM Users WHERE IsActive = @IsActive AND JoinDate &gt; @JoinDate\";\nvar users = connection.Query&lt;User&gt;(query, parameters);\n</code></pre>"},{"location":"dapper/stored-procedures/","title":"Stored Procedure \u0130stifad\u0259si","text":"<p>Dapper, stored procedure\u2019l\u0259r il\u0259 effektiv v\u0259 performansl\u0131 veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131 h\u0259yata ke\u00e7irm\u0259y\u0259 imkan verir. Stored procedure\u2019l\u0259r, x\u00fcsusil\u0259 m\u00fcr\u0259kk\u0259b veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131 v\u0259 \u00e7oxlu sor\u011fular \u00fc\u00e7\u00fcn se\u00e7ilir. Lakin, d\u00fczg\u00fcn istifad\u0259 edilm\u0259dikd\u0259 performans probleml\u0259rin\u0259 v\u0259 idar\u0259etm\u0259 \u00e7\u0259tinlikl\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dapper/stored-procedures/#1-stored-procedure-cagrma","title":"1. Stored Procedure \u00c7a\u011f\u0131rma","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Stored procedure\u2019\u00fc birba\u015fa m\u0259tn olaraq \u00e7a\u011f\u0131rmaq.</p> <pre><code>var query = \"EXEC GetUsers\";\nvar users = connection.Query&lt;User&gt;(query);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>CommandType.StoredProcedure</code> istifad\u0259 ed\u0259r\u0259k proseduru \u00e7a\u011f\u0131r\u0131n.</p> <pre><code>var users = connection.Query&lt;User&gt;(\"GetUsers\", commandType: CommandType.StoredProcedure);\n</code></pre>"},{"location":"dapper/stored-procedures/#2-parametrli-stored-procedure-istifadsi","title":"2. Parametrli Stored Procedure \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Parametrl\u0259ri \u0259ll\u0259 birl\u0259\u015fdirm\u0259k.</p> <pre><code>var query = $\"EXEC GetUsersByAge {age}\";\nvar users = connection.Query&lt;User&gt;(query);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Parametrl\u0259ri d\u00fczg\u00fcn \u015f\u0259kild\u0259 t\u0259yin edin.</p> <pre><code>var users = connection.Query&lt;User&gt;(\n    \"GetUsersByAge\",\n    new { Age = age },\n    commandType: CommandType.StoredProcedure);\n</code></pre>"},{"location":"dapper/stored-procedures/#3-output-parametrlri-istifadsi","title":"3. Output Parametrl\u0259ri \u0130stifad\u0259si","text":"<p>Dapper, stored procedure\u2019d\u0259n d\u00f6n\u0259n <code>output</code> parametrl\u0259rini asanl\u0131qla idar\u0259 ed\u0259 bil\u0259r.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var parameters = new DynamicParameters();\nparameters.Add(\"InputParam\", 10);\nparameters.Add(\"OutputParam\", dbType: DbType.Int32, direction: ParameterDirection.Output);\n\nconnection.Execute(\"CalculateTotal\", parameters, commandType: CommandType.StoredProcedure);\n\nvar total = parameters.Get&lt;int&gt;(\"OutputParam\");\nConsole.WriteLine($\"Total: {total}\");\n</code></pre>"},{"location":"dapper/stored-procedures/#4-coxlu-ntic-coxlugu-multiple-result-sets","title":"4. \u00c7oxlu N\u0259tic\u0259 \u00c7oxlu\u011fu (Multiple Result Sets)","text":"<p>Dapper, stored procedure\u2019l\u0259rd\u0259n d\u00f6n\u0259n bird\u0259n \u00e7ox n\u0259tic\u0259 toplusunu da d\u0259st\u0259kl\u0259yir.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>using var multi = connection.QueryMultiple(\"GetUsersAndOrders\", commandType: CommandType.StoredProcedure);\n\nvar users = multi.Read&lt;User&gt;().ToList();\nvar orders = multi.Read&lt;Order&gt;().ToList();\n</code></pre>"},{"location":"dapper/stored-procedures/#5-performans-v-thluksizlik-mslhtlri","title":"5. Performans v\u0259 T\u0259hl\u00fck\u0259sizlik M\u0259sl\u0259h\u0259tl\u0259ri","text":"<ul> <li>Parametr \u0130stifad\u0259si: SQL injeksiyonunun qar\u015f\u0131s\u0131n\u0131 almaq \u00fc\u00e7\u00fcn h\u0259r zaman parametrli sor\u011fular\u0131 se\u00e7in.</li> <li>CommandType.StoredProcedure: Prosedur \u00e7a\u011f\u0131r\u0131\u015flar\u0131nda bu parametri m\u00fctl\u0259q \u0259lav\u0259 edin.</li> <li>\u0130ndeks v\u0259 Query Planlar\u0131na Diqq\u0259t: Stored procedure\u2019l\u0259rinizin s\u0259m\u0259r\u0259li i\u015fl\u0259diyind\u0259n \u0259min olun.</li> </ul> <pre><code>var parameters = new { StartDate = DateTime.UtcNow.AddDays(-30), EndDate = DateTime.UtcNow };\nvar results = connection.Query(\"GetReportData\", parameters, commandType: CommandType.StoredProcedure);\n</code></pre>"},{"location":"dapper/transaction-management/","title":"Transaction \u0130dar\u0259etm\u0259si","text":"<p>Dapper, bird\u0259n \u00e7ox veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyat\u0131n\u0131 bir yerd\u0259 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn transaction d\u0259st\u0259yi t\u0259klif edir. Transaction idar\u0259etm\u0259si, \u0259m\u0259liyyatlar\u0131n ham\u0131s\u0131 u\u011furlu olmad\u0131qda edil\u0259n d\u0259yi\u015fiklikl\u0259rin geri al\u0131nmas\u0131n\u0131 t\u0259min edir v\u0259 veril\u0259nl\u0259rin tutarl\u0131l\u0131\u011f\u0131n\u0131 qoruyur. Lakin, yanl\u0131\u015f transaction idar\u0259etm\u0259si veril\u0259nl\u0259rin itkisin\u0259 v\u0259 tutars\u0131zl\u0131qlara s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"dapper/transaction-management/#1-transaction-baslatma-v-istifadsi","title":"1. Transaction Ba\u015flatma v\u0259 \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Transaction istifad\u0259 etm\u0259d\u0259n bird\u0259n \u00e7ox \u0259m\u0259liyyat h\u0259yata ke\u00e7irm\u0259k.</p> <pre><code>connection.Execute(\"INSERT INTO Orders (CustomerId) VALUES (@CustomerId)\", new { CustomerId = 1 });\nconnection.Execute(\"INSERT INTO OrderDetails (OrderId, ProductId) VALUES (@OrderId, @ProductId)\", new { OrderId = 1, ProductId = 1 });\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00fct\u00fcn \u0259m\u0259liyyatlar\u0131 bir transaction i\u00e7ind\u0259 idar\u0259 edin.</p> <pre><code>using var transaction = connection.BeginTransaction();\n\ntry\n{\n    connection.Execute(\"INSERT INTO Orders (CustomerId) VALUES (@CustomerId)\", new { CustomerId = 1 }, transaction);\n    connection.Execute(\"INSERT INTO OrderDetails (OrderId, ProductId) VALUES (@OrderId, @ProductId)\", new { OrderId = 1, ProductId = 1 }, transaction);\n\n    transaction.Commit();\n}\ncatch\n{\n    transaction.Rollback();\n    throw;\n}\n</code></pre>"},{"location":"dapper/transaction-management/#2-nested-transaction-istifadsi","title":"2. Nested Transaction \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: T\u0259k bir transaction i\u00e7ind\u0259 bird\u0259n \u00e7ox transaction ba\u015flatmaq.</p> <pre><code>var transaction1 = connection.BeginTransaction();\nvar transaction2 = connection.BeginTransaction(); // S\u0259hv istifad\u0259\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259r ba\u011flant\u0131 \u00fc\u00e7\u00fcn yaln\u0131z bir transaction ba\u015flad\u0131n.</p> <pre><code>using var transaction = connection.BeginTransaction();\nconnection.Execute(\"INSERT INTO Orders (CustomerId) VALUES (@CustomerId)\", new { CustomerId = 1 }, transaction);\ntransaction.Commit();\n</code></pre>"},{"location":"dapper/transaction-management/#3-performans-v-thluksizlik-mslhtlri","title":"3. Performans v\u0259 T\u0259hl\u00fck\u0259sizlik M\u0259sl\u0259h\u0259tl\u0259ri","text":"<ul> <li>Transaction Commit N\u0259zar\u0259ti: Yaln\u0131z b\u00fct\u00fcn \u0259m\u0259liyyatlar u\u011furlu olduqda <code>Commit</code> \u00e7a\u011f\u0131r\u0131n.</li> <li>Timeout T\u0259nziml\u0259m\u0259si: Uzun s\u00fcr\u0259n transaction\u2019lar \u00fc\u00e7\u00fcn bir timeout t\u0259nziml\u0259yin.</li> <li>Transaction Kapsam\u0131n\u0131 Darald\u0131n: Transaction i\u00e7ind\u0259 yaln\u0131z laz\u0131mi \u0259m\u0259liyyatlar\u0131 edin.</li> </ul> <pre><code>using var transaction = connection.BeginTransaction(System.Data.IsolationLevel.Serializable);\ntry\n{\n    // \u018fm\u0259liyyatlar\n    transaction.Commit();\n}\ncatch\n{\n    transaction.Rollback();\n    throw;\n}\n</code></pre>"},{"location":"dapper/transaction-management/#4-isolation-levels-izolyasiya-sviyylri","title":"4. Isolation Levels (\u0130zolyasiya S\u0259viyy\u0259l\u0259ri)","text":"<p>Dapper, f\u0259rqli izolyasiya s\u0259viyy\u0259l\u0259ri il\u0259 i\u015fl\u0259y\u0259 bil\u0259r. Bu s\u0259viyy\u0259l\u0259r, transaction\u2019\u0131n dig\u0259r transaction\u2019larla nec\u0259 qar\u015f\u0131l\u0131ql\u0131 \u0259laq\u0259d\u0259 olaca\u011f\u0131n\u0131 m\u00fc\u0259yy\u0259n edir.</p>"},{"location":"dapper/transaction-management/#izolyasiya-sviyylri","title":"\u0130zolyasiya S\u0259viyy\u0259l\u0259ri:","text":"<ul> <li>Read Uncommitted: Dig\u0259r transaction\u2019lar\u0131n h\u0259l\u0259 commit edilm\u0259mi\u015f veril\u0259nl\u0259rini oxuya bil\u0259r.</li> <li>Read Committed: Yaln\u0131z commit edilmi\u015f veril\u0259nl\u0259r oxuna bil\u0259r.</li> <li>Repeatable Read: Bir transaction boyunca eyni m\u0259lumat\u0131 oxuma z\u0259man\u0259ti verir.</li> <li>Serializable: \u018fn y\u00fcks\u0259k izolyasiya s\u0259viyy\u0259sidir, veril\u0259nl\u0259r bazas\u0131 kilidl\u0259m\u0259l\u0259rini art\u0131ra bil\u0259r.</li> </ul> <pre><code>using var transaction = connection.BeginTransaction(System.Data.IsolationLevel.RepeatableRead);\n</code></pre>"},{"location":"dotnet/async-programming/","title":"Asinxron Proqramla\u015fd\u0131rma v\u0259 Task \u0130dar\u0259etm\u0259si","text":"<p>Asinxron proqramla\u015fd\u0131rma, m\u00fcasir t\u0259tbiql\u0259rd\u0259 performans v\u0259 cavab verm\u0259 qabiliyy\u0259ti bax\u0131m\u0131ndan b\u00f6y\u00fck \u0259h\u0259miyy\u0259t da\u015f\u0131y\u0131r. Lakin, yanl\u0131\u015f istifad\u0259 edildikd\u0259 g\u00f6zl\u0259nilm\u0259z probleml\u0259r\u0259 yol a\u00e7a bil\u0259r. Budur C#\u2019da asinxron proqramla\u015fd\u0131rma \u00fc\u00e7\u00fcn tez-tez edil\u0259n s\u0259hvl\u0259r v\u0259 t\u0259klif olunan h\u0259ll\u0259r.</p>"},{"location":"dotnet/async-programming/#1-await-istifadsini-atlatmaq","title":"1. <code>await</code> \u0130stifad\u0259sini Atlatmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>await</code> istifad\u0259 edilm\u0259dikd\u0259 istisna v\u0259ziyy\u0259tl\u0259ri d\u00fczg\u00fcn \u015f\u0259kild\u0259 idar\u0259 oluna bilm\u0259z.</p> <pre><code>try\n{\n    DoWorkWithoutAwaitAsync();\n}\ncatch (Exception e)\n{\n    Console.WriteLine($\"X\u0259ta: {e.Message}\");\n}\n\nstatic Task DoWorkWithoutAwaitAsync()\n{\n    return ThrowExceptionAsync();\n}\n\nstatic async Task ThrowExceptionAsync()\n{\n    await Task.Yield();\n    throw new Exception(\"Bir x\u0259ta ba\u015f verdi!\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>await</code> il\u0259 \u00e7a\u011f\u0131r\u0131\u015f\u0131 g\u00f6zl\u0259y\u0259r\u0259k x\u0259ta idar\u0259etm\u0259sini yax\u015f\u0131la\u015fd\u0131r\u0131n.</p> <pre><code>try\n{\n    await DoWorkWithAwaitAsync();\n}\ncatch (Exception e)\n{\n    Console.WriteLine($\"X\u0259ta: {e.Message}\");\n}\n\nstatic async Task DoWorkWithAwaitAsync()\n{\n    await ThrowExceptionAsync();\n}\n\nstatic async Task ThrowExceptionAsync()\n{\n    await Task.Yield();\n    throw new Exception(\"Bir x\u0259ta ba\u015f verdi!\");\n}\n</code></pre>"},{"location":"dotnet/async-programming/#2-async-void-istifadsi","title":"2. <code>async void</code> \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>async void</code> x\u0259talar\u0131 d\u00fczg\u00fcn bir \u015f\u0259kild\u0259 idar\u0259 etm\u0259yi \u00e7\u0259tinl\u0259\u015fdirir.</p> <pre><code>public async void DoAsync()\n{\n    await SomeAsyncOperation();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>async Task</code> istifad\u0259 ed\u0259r\u0259k x\u0259ta idar\u0259etm\u0259sini v\u0259 test edil\u0259 bil\u0259rliyi art\u0131r\u0131n.</p> <pre><code>public async Task DoAsync()\n{\n    await SomeAsyncOperation();\n}\n</code></pre>"},{"location":"dotnet/async-programming/#3-task-obyektini-gozlmdn-dondrmk","title":"3. <code>Task</code> Obyektini G\u00f6zl\u0259m\u0259d\u0259n D\u00f6nd\u0259rm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>using</code> bloku i\u00e7ind\u0259 <code>Task</code> obyektini g\u00f6zl\u0259m\u0259d\u0259n d\u00f6nd\u0259rm\u0259k resurslar\u0131n erk\u0259n s\u0259rb\u0259st burax\u0131lmas\u0131na s\u0259b\u0259b ola bil\u0259r.</p> <pre><code>public Task&lt;string&gt; GetContentAsync()\n{\n    using var client = new HttpClient();\n    return client.GetStringAsync(\"https://example.com\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>await</code> istifad\u0259 ed\u0259r\u0259k resurs idar\u0259etm\u0259sini maksimalla\u015fd\u0131r\u0131n.</p> <pre><code>public async Task&lt;string&gt; GetContentAsync()\n{\n    using var client = new HttpClient();\n    return await client.GetStringAsync(\"https://example.com\");\n}\n</code></pre>"},{"location":"dotnet/async-programming/#4-paralel-mliyyatlarn-yanls-idaretmsi","title":"4. Paralel \u018fm\u0259liyyatlar\u0131n Yanl\u0131\u015f \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Paralel tap\u015f\u0131r\u0131qlar\u0131 ard\u0131c\u0131ll\u0131qla g\u00f6zl\u0259m\u0259k.</p> <pre><code>await Task1();\nawait Task2();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tap\u015f\u0131r\u0131qlar\u0131 paralel olaraq ba\u015flad\u0131n v\u0259 eyni anda g\u00f6zl\u0259yin.</p> <pre><code>var task1 = Task1();\nvar task2 = Task2();\nawait Task.WhenAll(task1, task2);\n</code></pre>"},{"location":"dotnet/async-programming/#5-taskdelay-il-hssas-zamanlama","title":"5. <code>Task.Delay</code> il\u0259 H\u0259ssas Zamanlama","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Q\u0131sa m\u00fcdd\u0259tli h\u0259ssas zamanlama \u00fc\u00e7\u00fcn <code>Task.Delay</code> istifad\u0259 etm\u0259k.</p> <pre><code>await Task.Delay(1); // M\u00fcdd\u0259t tam olaraq 1ms olmaya bil\u0259r.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259ssas zamanlama \u00fc\u00e7\u00fcn daha uy\u011fun al\u0259tl\u0259r istifad\u0259 edin.</p>"},{"location":"dotnet/async-programming/#6-deadlock-problemlri","title":"6. Deadlock Probleml\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>Task.Result</code> v\u0259 ya <code>Task.Wait</code> istifad\u0259 ed\u0259r\u0259k deadlock yaratmaq.</p> <pre><code>var result = SomeAsyncOperation().Result;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>await</code> istifad\u0259 ed\u0259r\u0259k deadlock probleml\u0259rinin qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>var result = await SomeAsyncOperation();\n</code></pre>"},{"location":"dotnet/async-programming/#7-task-obyektlrini-geri-donusturmk","title":"7. <code>Task</code> Obyektl\u0259rini Geri D\u00f6n\u00fc\u015ft\u00fcrm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r \u0259m\u0259liyyat \u00fc\u00e7\u00fcn yeni bir <code>Task</code> obyekti yaratmaq.</p> <pre><code>public Task&lt;int&gt; GetNumberAsync()\n{\n    return Task.Run(() =&gt; 42);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>Task.FromResult</code> istifad\u0259 ed\u0259r\u0259k laz\u0131ms\u0131z obyekt yaratma\u011f\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>public Task&lt;int&gt; GetNumberAsync()\n{\n    return Task.FromResult(42);\n}\n</code></pre>"},{"location":"dotnet/authentication-authorization/","title":"Authentication v\u0259 Authorization","text":"<p>Authentication (kimlik do\u011frulama) v\u0259 authorization (yetki verm\u0259k, icaz\u0259 verm\u0259k), m\u00fcasir veb t\u0259tbiql\u0259rinin \u0259sas t\u0259hl\u00fck\u0259sizlik komponentl\u0259ridir. Yanl\u0131\u015f t\u0259tbiql\u0259ri t\u0259hl\u00fck\u0259sizlik a\u00e7\u0131qlar\u0131na, performans probleml\u0259rin\u0259 v\u0259 istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259si probleml\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/authentication-authorization/#1-jwt-nin-yanls-istifadsi","title":"1. JWT-nin Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: JWT-ni saxlamaq \u00fc\u00e7\u00fcn <code>localStorage</code> istifad\u0259 etm\u0259k.</p> <pre><code>localStorage.setItem(\"jwt\", token); // T\u0259hl\u00fck\u0259sizlik a\u00e7\u0131\u011f\u0131na s\u0259b\u0259b ola bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: JWT-ni <code>HttpOnly</code> cookie olaraq saxlayaraq XSS h\u00fccumlar\u0131n\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>var cookieOptions = new CookieOptions\n{\n    HttpOnly = true,\n    Secure = true,\n    SameSite = SameSiteMode.Strict\n};\nResponse.Cookies.Append(\"jwt\", token, cookieOptions);\n</code></pre>"},{"location":"dotnet/authentication-authorization/#2-shv-icaz-nzartlri","title":"2. S\u0259hv \u0130caz\u0259 N\u0259zar\u0259tl\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Yetkilendirm\u0259 n\u0259zar\u0259tl\u0259rini m\u00fc\u015ft\u0259ri t\u0259r\u0259find\u0259 h\u0259yata ke\u00e7irm\u0259k.</p> <pre><code>if (user.role === \"admin\") {\n    // Yetkili \u0259m\u0259liyyatlar\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yetkilendirme n\u0259zar\u0259tl\u0259rini server t\u0259r\u0259find\u0259 h\u0259yata ke\u00e7irin.</p> <pre><code>[Authorize(Roles = \"Admin\")]\npublic IActionResult AdminEndpoint()\n{\n    return Ok(\"Yaln\u0131zca admin istifad\u0259\u00e7il\u0259r daxil ola bil\u0259r.\");\n}\n</code></pre>"},{"location":"dotnet/authentication-authorization/#3-sifrlrin-yanls-idaredilmsi","title":"3. \u015eifr\u0259l\u0259rin Yanl\u0131\u015f \u0130dar\u0259edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u015eifr\u0259l\u0259ri d\u00fcz m\u0259tn (plaintext) olaraq saxlamaq.</p> <pre><code>INSERT INTO Users (Username, Password) VALUES ('user1', '123456');\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u015eifr\u0259l\u0259ri hash\u2019l\u0259y\u0259r\u0259k t\u0259hl\u00fck\u0259siz bir \u015f\u0259kild\u0259 saxlay\u0131n.</p> <pre><code>var hashedPassword = BCrypt.Net.BCrypt.HashPassword(\"123456\");\n</code></pre>"},{"location":"dotnet/authentication-authorization/#4-thluksiz-olmayan-standart-konfiqurasiyalar","title":"4. T\u0259hl\u00fck\u0259siz Olmayan Standart Konfiqurasiyalar","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: HTTPS-i m\u0259cburi etm\u0259m\u0259k.</p> <pre><code>app.UseAuthentication();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: HTTPS istifad\u0259sini m\u0259cburi edin v\u0259 t\u0259hl\u00fck\u0259siz konfiqurasiyalar t\u0259tbiq edin.</p> <pre><code>app.UseHttpsRedirection();\napp.UseAuthentication();\n</code></pre>"},{"location":"dotnet/authentication-authorization/#5-expired-token-idaretmsinin-nzr-almamaq","title":"5. Expired Token \u0130dar\u0259etm\u0259sinin N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcdd\u0259ti bit\u0259n token\u2019lar\u0131 yoxlamamaq.</p> <pre><code>var tokenHandler = new JwtSecurityTokenHandler();\nvar token = tokenHandler.ReadJwtToken(jwt);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Token etibarl\u0131l\u0131\u011f\u0131n\u0131 do\u011frulay\u0131n v\u0259 m\u00fcdd\u0259ti bit\u0259n token\u2019lar\u0131 idar\u0259 edin.</p> <pre><code>var validationParameters = new TokenValidationParameters\n{\n    ValidateIssuer = true,\n    ValidateAudience = true,\n    ValidateLifetime = true,\n    IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(\"secret_key\"))\n};\ntokenHandler.ValidateToken(jwt, validationParameters, out SecurityToken validatedToken);\n</code></pre>"},{"location":"dotnet/authentication-authorization/#6-role-based-authorization-yanls-istifadsi","title":"6. Role-Based Authorization Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Rollar\u0131 sabit kodla\u015fd\u0131rmaq.</p> <pre><code>if (user.Role == \"Admin\")\n{\n    // Yetkili \u0259m\u0259liyyatlar\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Policy-based authorization t\u0259tbiq edin.</p> <pre><code>services.AddAuthorization(options =&gt;\n{\n    options.AddPolicy(\"AdminOnly\", policy =&gt; policy.RequireRole(\"Admin\"));\n});\n\n[Authorize(Policy = \"AdminOnly\")]\npublic IActionResult AdminEndpoint()\n{\n    return Ok(\"Yaln\u0131zca admin istifad\u0259\u00e7il\u0259r daxil ola bil\u0259r.\");\n}\n</code></pre>"},{"location":"dotnet/authentication-authorization/#7-open-redirect-thluksizlik-acqlar","title":"7. Open Redirect T\u0259hl\u00fck\u0259sizlik A\u00e7\u0131qlar\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Redirect URL-l\u0259rini do\u011frulamadan y\u00f6nl\u0259ndirm\u0259k.</p> <pre><code>return Redirect(returnUrl); // T\u0259hl\u00fck\u0259sizlik a\u00e7\u0131\u011f\u0131\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Y\u00f6nl\u0259ndirm\u0259 URL-l\u0259rini do\u011frulay\u0131n.</p> <pre><code>if (Url.IsLocalUrl(returnUrl))\n{\n    return Redirect(returnUrl);\n}\nreturn RedirectToAction(\"Index\", \"Home\");\n</code></pre>"},{"location":"dotnet/authentication-authorization/#8-istifadci-sessiyalarnn-pis-idaredilmsi","title":"8. \u0130stifad\u0259\u00e7i Sessiyalar\u0131n\u0131n Pis \u0130dar\u0259edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u0130stifad\u0259\u00e7i sessiyalar\u0131n\u0131 \u0259ll\u0259 idar\u0259 etm\u0259k.</p> <pre><code>HttpContext.Session.SetString(\"User\", \"user1\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Identity framework kimi standart sessiya idar\u0259etm\u0259 al\u0259tl\u0259rini istifad\u0259 edin.</p> <pre><code>services.AddIdentity&lt;ApplicationUser, IdentityRole&gt;()\n    .AddEntityFrameworkStores&lt;ApplicationDbContext&gt;()\n    .AddDefaultTokenProviders();\n</code></pre>"},{"location":"dotnet/background-services/","title":"Arxa Plan Xidm\u0259tl\u0259ri: Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":"<p>Arxa plan xidm\u0259tl\u0259ri, uzunm\u00fcdd\u0259tli \u0259m\u0259liyyatlar\u0131 v\u0259 ya arxa planda i\u015fl\u0259m\u0259si laz\u0131m olan tap\u015f\u0131r\u0131qlar\u0131 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunur. Yanl\u0131\u015f dizayn edilmi\u015f arxa plan xidm\u0259tl\u0259ri performans probleml\u0259rin\u0259, resurs istehlak\u0131na v\u0259 g\u00f6zl\u0259nilm\u0259z x\u0259talara yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/background-services/#1-uzunmuddtli-mliyyatlar-ui-thread-d-isltmk","title":"1. Uzunm\u00fcdd\u0259tli \u018fm\u0259liyyatlar\u0131 UI Thread-d\u0259 \u0130\u015fl\u0259tm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Uzunm\u00fcdd\u0259tli \u0259m\u0259liyyatlar\u0131 UI thread-d\u0259 i\u015fl\u0259tm\u0259k.</p> <pre><code>public void DoWork()\n{\n    Thread.Sleep(5000); // UI thread-i bloklay\u0131r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Uzunm\u00fcdd\u0259tli \u0259m\u0259liyyatlar\u0131 arxa planda i\u015fl\u0259din.</p> <pre><code>public class BackgroundTaskService : BackgroundService\n{\n    protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        while (!stoppingToken.IsCancellationRequested)\n        {\n            await Task.Delay(5000, stoppingToken); // Arxa planda i\u015fl\u0259yir\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet/background-services/#2-cancellationtoken-istifadsin-etinasz-yanasmaq","title":"2. CancellationToken \u0130stifad\u0259sin\u0259 Etinas\u0131z yana\u015fmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: CancellationToken-i olmadan arxa plan tap\u015f\u0131r\u0131qlar\u0131 yaratmaq.</p> <pre><code>protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n{\n    while (true)\n    {\n        await Task.Delay(1000); // \u0130mtina edil\u0259 bilm\u0259z\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>CancellationToken</code> istifad\u0259 ed\u0259r\u0259k tap\u015f\u0131r\u0131qlar\u0131n d\u00fczg\u00fcn \u015f\u0259kild\u0259 imtina edilm\u0259sini t\u0259min edin.</p> <pre><code>protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n{\n    while (!stoppingToken.IsCancellationRequested)\n    {\n        await Task.Delay(1000, stoppingToken);\n    }\n}\n</code></pre>"},{"location":"dotnet/background-services/#3-xtalar-nzartsiz-buraxmaq","title":"3. X\u0259talar\u0131 N\u0259zar\u0259tsiz Buraxmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Arxa plan tap\u015f\u0131r\u0131qlar\u0131ndak\u0131 x\u0259talar\u0131 g\u00f6z ard\u0131 etm\u0259k.</p> <pre><code>protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n{\n    while (!stoppingToken.IsCancellationRequested)\n    {\n        throw new Exception(\"Bir x\u0259ta ba\u015f verdi.\"); // \u0130dar\u0259 olunmaz\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: X\u0259talar\u0131 tutaraq loqlay\u0131n v\u0259 idar\u0259 edil\u0259 bil\u0259r hala g\u0259tirin.</p> <pre><code>protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n{\n    while (!stoppingToken.IsCancellationRequested)\n    {\n        try\n        {\n            // \u0130\u015f m\u0259ntiqi\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($\"X\u0259ta: {ex.Message}\");\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet/background-services/#4-hddindn-artq-sayda-background-service-yaratmaq","title":"4. H\u0259ddind\u0259n Art\u0131q Sayda Background Service Yaratmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r tap\u015f\u0131r\u0131q \u00fc\u00e7\u00fcn ayr\u0131 bir background service t\u0259yin etm\u0259k.</p> <pre><code>services.AddHostedService&lt;Service1&gt;();\nservices.AddHostedService&lt;Service2&gt;();\nservices.AddHostedService&lt;Service3&gt;();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tap\u015f\u0131r\u0131qlar\u0131 birl\u0259\u015fdir\u0259r\u0259k idar\u0259 oluna bil\u0259r bir qurulu\u015f yarad\u0131n.</p> <pre><code>public class CombinedBackgroundService : BackgroundService\n{\n    protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        var task1 = Task1(stoppingToken);\n        var task2 = Task2(stoppingToken);\n        await Task.WhenAll(task1, task2);\n    }\n\n    private async Task Task1(CancellationToken stoppingToken) { /* ... */ }\n    private async Task Task2(CancellationToken stoppingToken) { /* ... */ }\n}\n</code></pre>"},{"location":"dotnet/background-services/#5-resurslar-srbst-buraxmamaq","title":"5. Resurslar\u0131 S\u0259rb\u0259st Buraxmamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Arxa plan tap\u015f\u0131r\u0131qlar\u0131nda istifad\u0259 edil\u0259n resurslar\u0131 t\u0259mizl\u0259m\u0259m\u0259k.</p> <pre><code>public class MyBackgroundService : BackgroundService\n{\n    private readonly Timer _timer = new Timer(OnTimerElapsed);\n\n    protected override Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        _timer.Change(0, 1000); // Timer ba\u015flad\u0131l\u0131r, ancaq t\u0259mizl\u0259nmir\n        return Task.CompletedTask;\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>Dispose</code> metodunu istifad\u0259 ed\u0259r\u0259k resurslar\u0131 t\u0259mizl\u0259yin.</p> <pre><code>public class MyBackgroundService : BackgroundService, IDisposable\n{\n    private readonly Timer _timer = new Timer(OnTimerElapsed);\n\n    protected override Task ExecuteAsync(CancellationToken stoppingToken)\n    {\n        _timer.Change(0, 1000);\n        return Task.CompletedTask;\n    }\n\n    public override void Dispose()\n    {\n        _timer?.Dispose();\n        base.Dispose();\n    }\n}\n</code></pre>"},{"location":"dotnet/background-services/#6-performans-izlmmk","title":"6. Performans\u0131 \u0130zl\u0259m\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Arxa plan tap\u015f\u0131r\u0131qlar\u0131n\u0131n performans\u0131n\u0131 v\u0259 v\u0259ziyy\u0259tini izl\u0259m\u0259m\u0259k.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u0130zl\u0259m\u0259 al\u0259tl\u0259ri istifad\u0259 ed\u0259r\u0259k performans\u0131 \u00f6l\u00e7\u00fcn.</p> <ul> <li>N\u00fcmun\u0259 Al\u0259tl\u0259r: Application Insights, Prometheus, Grafana</li> </ul> <pre><code>protected override async Task ExecuteAsync(CancellationToken stoppingToken)\n{\n    var stopwatch = Stopwatch.StartNew();\n\n    while (!stoppingToken.IsCancellationRequested)\n    {\n        stopwatch.Restart();\n        await DoWorkAsync();\n        Console.WriteLine($\"Tap\u015f\u0131r\u0131q m\u00fcdd\u0259ti: {stopwatch.ElapsedMilliseconds} ms\");\n    }\n}\n</code></pre>"},{"location":"dotnet/caching-strategies/","title":"Ke\u015fl\u0259m\u0259 Strategiyalar\u0131","text":"<p>Ke\u015fl\u0259m\u0259 (caching), t\u0259tbiq performans\u0131n\u0131 art\u0131rma\u011f\u0131n v\u0259 resurs istehlak\u0131n\u0131 azaltma\u011f\u0131n effektiv bir yoludur. Lakin, yanl\u0131\u015f istifad\u0259 edil\u0259n ke\u015fl\u0259m\u0259 strategiyalar\u0131 performans probleml\u0259rin\u0259, veril\u0259nl\u0259rin uy\u011funsuzlu\u011funa v\u0259 h\u0259ddind\u0259n art\u0131q yadda\u015f istifad\u0259sin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/caching-strategies/#1-lazmsz-yer-boyuk-datan-keslmk","title":"1. Laz\u0131ms\u0131z Yer\u0259 B\u00f6y\u00fck Datan\u0131 Ke\u015fl\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck datan\u0131 birba\u015fa ke\u015f\u0259 \u0259lav\u0259 etm\u0259k.</p> <pre><code>var largeData = GetLargeData();\n_memoryCache.Set(\"LargeData\", largeData);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6y\u00fck veril\u0259ri b\u00f6l\u0259r\u0259k v\u0259 ya s\u0131x\u0131\u015fd\u0131raraq ke\u015f\u0259 \u0259lav\u0259 edin.</p> <pre><code>var largeData = GetLargeData();\nvar compressedData = CompressData(largeData);\n_memoryCache.Set(\"CompressedLargeData\", compressedData);\n</code></pre>"},{"location":"dotnet/caching-strategies/#2-kes-muddtini-yanls-tnzimlmk","title":"2. Ke\u015f M\u00fcdd\u0259tini Yanl\u0131\u015f T\u0259nziml\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sonsuz m\u00fcdd\u0259tl\u0259 ke\u015f istifad\u0259 etm\u0259k.</p> <pre><code>_memoryCache.Set(\"Data\", data, TimeSpan.MaxValue);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Uy\u011fun bir m\u00fcdd\u0259t t\u0259yin edin v\u0259 laz\u0131m g\u0259ldikd\u0259 sliding expiration istifad\u0259 edin.</p> <pre><code>_memoryCache.Set(\"Data\", data, new MemoryCacheEntryOptions\n{\n    AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(30),\n    SlidingExpiration = TimeSpan.FromMinutes(10)\n});\n</code></pre>"},{"location":"dotnet/caching-strategies/#3-distributed-cache-istifadsini-dusunmmk","title":"3. Distributed Cache \u0130stifad\u0259sini D\u00fc\u015f\u00fcnm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn ke\u015f veril\u0259nl\u0259rini yaln\u0131z yadda\u015f i\u00e7ind\u0259 saxlamaq.</p> <pre><code>services.AddMemoryCache();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Paylanm\u0131\u015f ke\u015f istifad\u0259 ed\u0259r\u0259k miqyaslanma qabiliyy\u0259tini art\u0131r\u0131n.</p> <pre><code>services.AddStackExchangeRedisCache(options =&gt;\n{\n    options.Configuration = \"localhost:6379\";\n    options.InstanceName = \"MyApp_\";\n});\n</code></pre>"},{"location":"dotnet/caching-strategies/#4-lazy-loading-istifadsini-nzr-almamaq","title":"4. Lazy Loading \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u0259lumatlar\u0131 \u0259vv\u0259lc\u0259d\u0259n y\u00fckl\u0259yib laz\u0131ms\u0131z yadda\u015f istifad\u0259si etm\u0259k.</p> <pre><code>var data = GetDataFromDatabase();\n_memoryCache.Set(\"Data\", data);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Lazy loading il\u0259 yaln\u0131z laz\u0131m olduqda m\u0259lumatlar\u0131 y\u00fckl\u0259yin.</p> <pre><code>_memoryCache.GetOrCreate(\"Data\", entry =&gt;\n{\n    entry.AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(30);\n    return GetDataFromDatabase();\n});\n</code></pre>"},{"location":"dotnet/caching-strategies/#5-kes-invaildasiyasn-idar-ed-bilmmk","title":"5. Ke\u015f \u0130nvaildasiyas\u0131n\u0131 \u0130dar\u0259 Ed\u0259 Bilm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Veril\u0259n d\u0259yi\u015fiklikl\u0259rini ke\u015f\u0259 \u0259ks etdirm\u0259m\u0259k.</p> <pre><code>_memoryCache.Set(\"User_123\", user);\nuser.Name = \"Updated Name\"; // Ke\u015f yenil\u0259nmir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Veril\u0259n d\u0259yi\u015fiklikl\u0259rini ke\u015fd\u0259 yenil\u0259yin v\u0259 ya invaildasiyan\u0131 idar\u0259 edin.</p> <pre><code>_memoryCache.Remove(\"User_123\");\n_memoryCache.Set(\"User_123\", updatedUser);\n</code></pre>"},{"location":"dotnet/caching-strategies/#6-hssas-mlumatlarn-kes-edilmsi","title":"6. H\u0259ssas M\u0259lumatlar\u0131n Ke\u015f Edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u015eifr\u0259l\u0259ri v\u0259 ya \u015f\u0259xsi m\u0259lumatlar\u0131 ke\u015f\u0259 \u0259lav\u0259 etm\u0259k.</p> <pre><code>_memoryCache.Set(\"UserPassword\", \"123456\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259ssas m\u0259lumatlar\u0131 ke\u015f\u0259 \u0259lav\u0259 etm\u0259kd\u0259n qa\u00e7\u0131n\u0131n.</p>"},{"location":"dotnet/caching-strategies/#7-kes-istifadsini-olcmmmk","title":"7. Ke\u015f \u0130stifad\u0259sini \u00d6l\u00e7m\u0259m\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Cache hit/miss nisb\u0259tl\u0259rini izl\u0259m\u0259m\u0259k.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Ke\u015f performans\u0131n\u0131 izl\u0259m\u0259k \u00fc\u00e7\u00fcn \u00f6l\u00e7m\u0259 apar\u0131n.</p> <ul> <li>N\u00fcmun\u0259: Prometheus, Grafana v\u0259 ya App Insights istifad\u0259 ed\u0259r\u0259k performans veril\u0259nl\u0259rini toplay\u0131n.</li> <li>Kodda N\u00fcmun\u0259:</li> </ul> <pre><code>if (!_memoryCache.TryGetValue(\"Data\", out var data))\n{\n    data = GetDataFromDatabase();\n    _memoryCache.Set(\"Data\", data);\n    Console.WriteLine(\"Cache miss!\");\n}\nelse\n{\n    Console.WriteLine(\"Cache hit!\");\n}\n</code></pre>"},{"location":"dotnet/configuration-management/","title":"Configuration \u0130dar\u0259etm\u0259si","text":"<p>T\u0259tbiq parametrl\u0259rinin idar\u0259si, bir proqram t\u0259minat\u0131n\u0131n f\u0259rqli m\u00fchitl\u0259rd\u0259 (development, test, production) d\u00fczg\u00fcn \u015f\u0259kild\u0259 i\u015fl\u0259m\u0259sini t\u0259min etm\u0259k \u00fc\u00e7\u00fcn kritik \u0259h\u0259miyy\u0259t\u0259 malikdir. Yanl\u0131\u015f parametr idar\u0259etm\u0259si, t\u0259hl\u00fck\u0259sizlik a\u00e7\u0131qlar\u0131na v\u0259 ya t\u0259tbiq x\u0259talar\u0131na yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/configuration-management/#1-sabit-kodlanms-hardcoded-dyrlr-istifadsi","title":"1. Sabit Kodlanm\u0131\u015f (Hardcoded) D\u0259y\u0259rl\u0259r \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Parametri birba\u015fa kod i\u00e7ind\u0259 t\u0259yin etm\u0259k.</p> <pre><code>public class DatabaseConfig\n{\n    public string ConnectionString =&gt; \"Server=localhost;Database=MyApp;User=admin;Password=password;\";\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>appsettings.json</code> v\u0259 ya <code>enviroment variables</code> istifad\u0259 ed\u0259r\u0259k parametrl\u0259ri xaricl\u0259\u015fdirin.</p> <p>appsettings.json: <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=MyApp;User=admin;Password=password;\"\n  }\n}\n</code></pre></p> <p>\u0130stifad\u0259: <pre><code>var builder = WebApplication.CreateBuilder(args);\nvar connectionString = builder.Configuration.GetConnectionString(\"DefaultConnection\");\n</code></pre></p>"},{"location":"dotnet/configuration-management/#2-environment-parametrinin-yetrsiz-idaretmsi","title":"2. Environment Parametrinin Yet\u0259rsiz \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn m\u00fchitl\u0259r \u00fc\u00e7\u00fcn eyni m\u0259ntigi istifad\u0259 etm\u0259k.</p> <pre><code>{\n  \"Environment\": \"Production\",\n  \"Logging\": {\n    \"LogLevel\": \"Information\"\n  }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fchit \u0259sasl\u0131 m\u0259ntigl\u0259ri ayr\u0131 fayllarla idar\u0259 edin.</p> <p>appsettings.Development.json: <pre><code>{\n  \"Environment\": \"Development\",\n  \"Logging\": {\n    \"LogLevel\": \"Debug\"\n  }\n}\n</code></pre></p> <p>appsettings.Production.json: <pre><code>{\n  \"Environment\": \"Production\",\n  \"Logging\": {\n    \"LogLevel\": \"Error\"\n  }\n}\n</code></pre></p>"},{"location":"dotnet/configuration-management/#3-gizli-mlumatlarn-acga-cxmas","title":"3. Gizli M\u0259lumatlar\u0131n A\u00e7\u0131\u011fa \u00e7\u0131xmas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: API a\u00e7arlar\u0131n\u0131 v\u0259 ya \u015fifr\u0259l\u0259ri a\u00e7\u0131q \u015f\u0259kild\u0259 saxlamaq.</p> <pre><code>{\n  \"APIKey\": \"12345-secret-key\"\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Gizli m\u0259lumatlar\u0131 <code>environment variables</code> v\u0259 ya t\u0259hl\u00fck\u0259siz bir xidm\u0259td\u0259 saxlay\u0131n.</p> <p>\u0130stifad\u0259: <pre><code>var apiKey = Environment.GetEnvironmentVariable(\"MY_APP_API_KEY\");\n</code></pre></p>"},{"location":"dotnet/configuration-management/#4-parametr-dyisikliklri-ucun-yenidn-paylama-tlb-etmk","title":"4. Parametr D\u0259yi\u015fiklikl\u0259ri \u00fc\u00e7\u00fcn Yenid\u0259n Paylama T\u0259l\u0259b Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Parametr d\u0259yi\u015fiklikl\u0259ri \u00fc\u00e7\u00fcn t\u0259tbiqin yenid\u0259n i\u015f\u0259 sal\u0131nmas\u0131.</p> <pre><code>public class Config\n{\n    public string SomeSetting { get; set; } = \"DefaultValue\";\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Dinamik Parametr y\u00fckl\u0259m\u0259l\u0259ri edin.</p> <p>N\u00fcmun\u0259: Azure App Configuration v\u0259 ya dig\u0259r dinamik parametr al\u0259tl\u0259rini istifad\u0259 edin.</p> <pre><code>builder.Configuration.AddAzureAppConfiguration(\"ConnectionString\");\n</code></pre>"},{"location":"dotnet/configuration-management/#5-lazmsz-murkkblik-yaratmaq","title":"5. Laz\u0131ms\u0131z M\u00fcr\u0259kk\u0259blik Yaratmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z parametr a\u00e7arlar\u0131 v\u0259 m\u00fcr\u0259kk\u0259blik.</p> <pre><code>{\n  \"AppSettings\": {\n    \"Feature1\": {\n      \"Enabled\": true,\n      \"MaxItems\": 10,\n      \"Timeout\": 5000\n    },\n    \"Feature2\": {\n      \"Enabled\": false,\n      \"MaxItems\": 5,\n      \"Timeout\": 2000\n    }\n  }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sad\u0259 v\u0259 oxunaql\u0131 parametrl\u0259r yarad\u0131n.</p> <pre><code>{\n  \"Features\": [\n    {\n      \"Name\": \"Feature1\",\n      \"Enabled\": true,\n      \"MaxItems\": 10,\n      \"Timeout\": 5000\n    },\n    {\n      \"Name\": \"Feature2\",\n      \"Enabled\": false,\n      \"MaxItems\": 5,\n      \"Timeout\": 2000\n    }\n  ]\n}\n</code></pre>"},{"location":"dotnet/configuration-management/#6-environment-variables-yanls-istifadsi","title":"6. <code>Environment Variables</code> Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>Environment Variables</code> birba\u015fa v\u0259 d\u00fcz\u0259nsiz bir \u015f\u0259kild\u0259 oxumaq.</p> <pre><code>var setting = Environment.GetEnvironmentVariable(\"MY_APP_SETTING\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018ftraf m\u00fchit d\u0259yi\u015f\u0259nl\u0259rini parametrl\u0259r il\u0259 birl\u0259\u015fdirin.</p> <pre><code>builder.Configuration.AddEnvironmentVariables();\nvar setting = builder.Configuration[\"MY_APP_SETTING\"];\n</code></pre>"},{"location":"dotnet/dependency-injection/","title":"Dependency Injection (DI)","text":"<p>Dependency Injection (DI), bir t\u0259tbiqd\u0259 as\u0131l\u0131l\u0131qlar\u0131n idar\u0259 edilm\u0259sini asanla\u015fd\u0131raraq test edil\u0259 bil\u0259rliyi v\u0259 kodun davaml\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131r. Lakin DI yanl\u0131\u015f istifad\u0259 edildikd\u0259 kodun m\u00fcr\u0259kk\u0259bliyini art\u0131ra bil\u0259r.</p>"},{"location":"dotnet/dependency-injection/#1-asllqlarn-ll-idar-edilmsi","title":"1. As\u0131l\u0131l\u0131qlar\u0131n \u018fll\u0259 \u0130dar\u0259 Edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131 \u0259ll\u0259 n\u00fcmun\u0259l\u0259ndirm\u0259k.</p> <pre><code>public class OrderService\n{\n    private readonly ProductRepository _productRepository;\n\n    public OrderService()\n    {\n        _productRepository = new ProductRepository(); // B\u0259rk as\u0131l\u0131l\u0131q\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131 bir IoC konteyneri \u00fcz\u0259rind\u0259n injekt\u0259 etm\u0259k.</p> <pre><code>public class OrderService\n{\n    private readonly IProductRepository _productRepository;\n\n    public OrderService(IProductRepository productRepository)\n    {\n        _productRepository = productRepository;\n    }\n}\n</code></pre>"},{"location":"dotnet/dependency-injection/#2-yanls-yasam-muddti-lifetime-idaretmsi","title":"2. Yanl\u0131\u015f Ya\u015fam M\u00fcdd\u0259ti (Lifetime) \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Scoped as\u0131l\u0131l\u0131qlar\u0131 singleton bir xidm\u0259t\u0259 injekt\u0259 etm\u0259k.</p> <pre><code>services.AddSingleton&lt;MyService&gt;();\nservices.AddScoped&lt;MyDbContext&gt;();\n\npublic class MyService\n{\n    private readonly MyDbContext _dbContext;\n\n    public MyService(MyDbContext dbContext)\n    {\n        _dbContext = dbContext; // S\u0259hv ya\u015fam m\u00fcdd\u0259ti\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131n ya\u015fam m\u00fcdd\u0259tini d\u00fczg\u00fcn konfiqurasiya edin.</p> <pre><code>services.AddScoped&lt;MyService&gt;();\nservices.AddScoped&lt;MyDbContext&gt;();\n\npublic class MyService\n{\n    private readonly MyDbContext _dbContext;\n\n    public MyService(MyDbContext dbContext)\n    {\n        _dbContext = dbContext;\n    }\n}\n</code></pre>"},{"location":"dotnet/dependency-injection/#3-cox-asllq-injekt-etmk","title":"3. \u00c7ox As\u0131l\u0131l\u0131q \u0130njekt\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Bir sinifd\u0259 \u00e7ox as\u0131l\u0131l\u0131\u011f\u0131 birba\u015fa injekt\u0259 etm\u0259k.</p> <pre><code>public class MyController\n{\n    public MyController(IService1 service1, IService2 service2, IService3 service3, IService4 service4)\n    {\n        // \u00c7ox fazla as\u0131l\u0131l\u0131q\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131 qrupla\u015fd\u0131raraq bir interfeys il\u0259 abstraktla\u015fd\u0131r\u0131n.</p> <pre><code>public interface IServiceGroup\n{\n    IService1 Service1 { get; }\n    IService2 Service2 { get; }\n}\n\npublic class ServiceGroup : IServiceGroup\n{\n    public IService1 Service1 { get; }\n    public IService2 Service2 { get; }\n\n    public ServiceGroup(IService1 service1, IService2 service2)\n    {\n        Service1 = service1;\n        Service2 = service2;\n    }\n}\n</code></pre>"},{"location":"dotnet/dependency-injection/#4-service-locator-istifadsi","title":"4. Service Locator \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Service locator anti-pattern\u2019ini istifad\u0259 etm\u0259k.</p> <pre><code>public class MyService\n{\n    public void DoWork()\n    {\n        var service = ServiceLocator.GetService&lt;IMyDependency&gt;();\n        service.PerformAction();\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131 birba\u015fa injekt\u0259 edin.</p> <pre><code>public class MyService\n{\n    private readonly IMyDependency _myDependency;\n\n    public MyService(IMyDependency myDependency)\n    {\n        _myDependency = myDependency;\n    }\n\n    public void DoWork()\n    {\n        _myDependency.PerformAction();\n    }\n}\n</code></pre>"},{"location":"dotnet/dependency-injection/#5-test-edil-bilrliyi-goz-ard-etmk","title":"5. Test Edil\u0259 Bil\u0259rliyi G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: G\u00fccl\u00fc as\u0131l\u0131l\u0131qlar s\u0259b\u0259bind\u0259n test edil\u0259 bilm\u0259y\u0259n sinifl\u0259r.</p> <pre><code>public class ReportService\n{\n    private readonly Logger _logger = new Logger();\n\n    public void GenerateReport()\n    {\n        _logger.Log(\"Hesabat yarad\u0131l\u0131r...\");\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Logger kimi as\u0131l\u0131l\u0131qlar\u0131 inject\u0259 ed\u0259r\u0259k test edil\u0259 bil\u0259rliyi art\u0131r\u0131n.</p> <pre><code>public class ReportService\n{\n    private readonly ILogger _logger;\n\n    public ReportService(ILogger logger)\n    {\n        _logger = logger;\n    }\n\n    public void GenerateReport()\n    {\n        _logger.Log(\"Hesabat yarad\u0131l\u0131r...\");\n    }\n}\n</code></pre>"},{"location":"dotnet/dependency-injection/#6-xidmtlrin-hddindn-artq-registrasiyas","title":"6. Xidm\u0259tl\u0259rin H\u0259ddind\u0259n Art\u0131q Registrasiyas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r as\u0131l\u0131l\u0131\u011f\u0131 \u0259ll\u0259 qeyd etm\u0259k.</p> <pre><code>services.AddSingleton&lt;IService1, Service1&gt;();\nservices.AddSingleton&lt;IService2, Service2&gt;();\nservices.AddSingleton&lt;IService3, Service3&gt;();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Assembly skan etm\u0259 il\u0259 xidm\u0259tl\u0259ri avtomatik olaraq qeyd edin.</p> <pre><code>var assemblies = AppDomain.CurrentDomain.GetAssemblies();\nservices.Scan(scan =&gt; scan\n    .FromAssemblies(assemblies)\n    .AddClasses()\n    .AsImplementedInterfaces()\n    .WithScopedLifetime());\n</code></pre>"},{"location":"dotnet/dynamic-configuration/","title":"Dinamik Konfiqurasiya: Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":"<p>Dinamik konfiqurasiya, t\u0259tbiqinizin konfiqurasiya parametrl\u0259rini, t\u0259tbiq i\u015fl\u0259y\u0259rk\u0259n d\u0259yi\u015fdirm\u0259 qabiliyy\u0259ti t\u0259min edir. Yanl\u0131\u015f istifad\u0259 edil\u0259n dinamik konfiqurasiyalar, m\u0259lumat uy\u011funsuzluqlar\u0131na v\u0259 g\u00f6zl\u0259nilm\u0259z davran\u0131\u015flara yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/dynamic-configuration/#1-sabit-kodlanms-konfiqurasiyalar","title":"1. Sabit Kodlanm\u0131\u015f Konfiqurasiyalar","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Konfiqurasiyalar\u0131 sabit kodlamaq.</p> <pre><code>public class AppConfig\n{\n    public const string ConnectionString = \"Server=localhost;Database=MyApp;User=admin;Password=1234;\";\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Konfiqurasiyalar\u0131 bir faylda v\u0259 ya <code>environment variables</code>da tutaraq dinamik hala g\u0259tirin.</p> <p>appsettings.json: <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=MyApp;User=admin;Password=1234;\"\n  }\n}\n</code></pre></p> <p>\u0130stifad\u0259: <pre><code>var connectionString = builder.Configuration.GetConnectionString(\"DefaultConnection\");\n</code></pre></p>"},{"location":"dotnet/dynamic-configuration/#2-hssas-mlumatlar-thluksiz-skild-idar-etmmk","title":"2. H\u0259ssas M\u0259lumatlar\u0131 T\u0259hl\u00fck\u0259siz \u015e\u0259kild\u0259 \u0130dar\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259ssas m\u0259lumatlar\u0131 konfiqurasiya fayllar\u0131nda d\u00fcz m\u0259tn olaraq saxlamaq.</p> <pre><code>{\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=MyApp;User=admin;Password=1234;\"\n  }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259ssas m\u0259lumatlar\u0131 t\u0259hl\u00fck\u0259siz bir \u015f\u0259kild\u0259 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn bir secret management al\u0259ti istifad\u0259 edin.</p> <p>HashiCorp Vault \u0130stifad\u0259si:</p> <pre><code>builder.Configuration.AddVault(options =&gt;\n{\n    options.Address = \"https://vault.example.com\";\n    options.Token = Environment.GetEnvironmentVariable(\"VAULT_TOKEN\");\n});\n</code></pre> <p>Azure Key Vault \u0130stifad\u0259si:</p> <pre><code>builder.Configuration.AddAzureKeyVault(\n    new Uri(\"https://mykeyvault.vault.azure.net/\"),\n    new DefaultAzureCredential()\n);\n</code></pre>"},{"location":"dotnet/dynamic-configuration/#3-dinamik-konfiqurasiyan-izlmmk","title":"3. Dinamik Konfiqurasiyan\u0131 \u0130zl\u0259m\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Konfiqurasiya d\u0259yi\u015fiklikl\u0259rini izl\u0259m\u0259m\u0259k.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Dinamik konfiqurasiya d\u0259yi\u015fiklikl\u0259rini izl\u0259m\u0259k \u00fc\u00e7\u00fcn konfiqurasiya t\u0259minat\u00e7\u0131lar\u0131n\u0131 istifad\u0259 edin.</p> <p>Azure App Configuration N\u00fcmun\u0259si: <pre><code>builder.Configuration.AddAzureAppConfiguration(options =&gt;\n{\n    options.Connect(\"ConnectionString\")\n           .ConfigureRefresh(refresh =&gt;\n           {\n               refresh.Register(\"AppSettings:Sentinel\", refreshAll: true);\n           });\n});\n</code></pre></p>"},{"location":"dotnet/dynamic-configuration/#4-performans-uzrindki-tsirlri-goz-ard-etmk","title":"4. Performans \u00dcz\u0259rind\u0259ki T\u0259sirl\u0259ri G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Konfiqurasiyalar\u0131n davaml\u0131 olaraq oxunmas\u0131.</p> <pre><code>var setting = builder.Configuration[\"AppSettings:SettingKey\"]; // Davaml\u0131 \u00e7a\u011f\u0131r\u0131\u015flar\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Konfiqurasiyalar\u0131 bir ke\u015f mexanizmi il\u0259 optimalla\u015fd\u0131r\u0131n.</p> <pre><code>public class MyService\n{\n    private readonly IConfiguration _configuration;\n    private string _cachedSetting;\n\n    public MyService(IConfiguration configuration)\n    {\n        _configuration = configuration;\n        _cachedSetting = _configuration[\"AppSettings:SettingKey\"];\n    }\n}\n</code></pre>"},{"location":"dotnet/error-handling/","title":"Exception Handling","text":"<p>Exception handling (error handling), proqram t\u0259minat\u0131n\u0131n etibarl\u0131l\u0131\u011f\u0131n\u0131 v\u0259 sabitliyini art\u0131ran vacib bir elementdir. Lakin, Exceptionlar\u0131n d\u00fczg\u00fcn idar\u0259 olunmamas\u0131, Exceptionlar\u0131n aradan qald\u0131r\u0131lmas\u0131n\u0131 \u00e7\u0259tinl\u0259\u015fdir\u0259 v\u0259 t\u0259tbiqin performans\u0131na m\u0259nfi t\u0259sir g\u00f6st\u0259r\u0259 bil\u0259r.</p>"},{"location":"dotnet/error-handling/#1-exceptionlarn-umumi-tutulmas","title":"1. Exceptionlar\u0131n \u00dcmumi Tutulmas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn Exceptionlar\u0131 <code>Exception</code> sinifi il\u0259 tutmaq.</p> <pre><code>try\n{\n    // \u018fm\u0259liyyat\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"Exception: {ex.Message}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Spesifik Exception n\u00f6vl\u0259rini tutaraq daha \u0259trafl\u0131 Exception idar\u0259etm\u0259si h\u0259yata ke\u00e7irin.</p> <pre><code>try\n{\n    // \u018fm\u0259liyyat\n}\ncatch (NullReferenceException ex)\n{\n    Console.WriteLine($\"Null referans Exception\u0131: {ex.Message}\");\n}\ncatch (FileNotFoundException ex)\n{\n    Console.WriteLine($\"Fayl tap\u0131lmad\u0131: {ex.Message}\");\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"G\u00f6zl\u0259nilm\u0259z bir Exception: {ex.Message}\");\n}\n</code></pre>"},{"location":"dotnet/error-handling/#2-finally-blokunun-yanls-istifadsi","title":"2. Finally Blokunun Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>finally</code> bloku i\u00e7ind\u0259 kodun n\u0259zar\u0259td\u0259n \u00e7\u0131xar\u0131lmas\u0131.</p> <pre><code>try\n{\n    // \u018fm\u0259liyyat\n}\nfinally\n{\n    throw new InvalidOperationException(\"S\u0259hv \u0259m\u0259liyyat\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Resurslar\u0131n d\u00fczg\u00fcn \u015f\u0259kild\u0259 s\u0259rb\u0259st burax\u0131lmas\u0131n\u0131 t\u0259min edin.</p> <pre><code>FileStream? file = null;\n\ntry\n{\n    file = new FileStream(\"data.txt\", FileMode.Open);\n    // \u018fm\u0259liyyat\n}\nfinally\n{\n    file?.Dispose();\n}\n</code></pre>"},{"location":"dotnet/error-handling/#3-asinxron-exception-idaretmsi","title":"3. Asinxron Exception \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Asinxron Exceptionlar\u0131 <code>await</code> etm\u0259d\u0259n tutma\u011fa \u00e7al\u0131\u015fmaq.</p> <pre><code>try\n{\n    DoAsync(); // await \u0259skik\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"Exception: {ex.Message}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Asinxron \u0259m\u0259liyyatlar\u0131 <code>await</code> il\u0259 tutaraq d\u00fczg\u00fcn Exception idar\u0259etm\u0259sini t\u0259min edin.</p> <pre><code>try\n{\n    await DoAsync();\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"Asinxron Exception: {ex.Message}\");\n}\n</code></pre>"},{"location":"dotnet/error-handling/#4-exceptionlarn-loggingd-qeyd-edilmmsi","title":"4. Exceptionlar\u0131n Loggingd\u0259 Qeyd Edilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Exceptionlar\u0131 yaln\u0131z konsola yazmaq.</p> <pre><code>catch (Exception ex)\n{\n    Console.WriteLine($\"Exception: {ex.Message}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Logging frameworkl\u0259ri il\u0259 Exceptionlar\u0131 qeyd edin.</p> <pre><code>var logger = LoggerFactory.Create(builder =&gt; builder.AddConsole()).CreateLogger(\"ErrorLogger\");\n\ntry\n{\n    // \u018fm\u0259liyyat\n}\ncatch (Exception ex)\n{\n    logger.LogError(ex, \"Bir Exception ba\u015f verdi.\");\n}\n</code></pre>"},{"location":"dotnet/error-handling/#5-global-exception-handler","title":"5. Global Exception Handler","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn Exceptionlar\u0131 qlobal olaraq idar\u0259 etm\u0259m\u0259k.</p> <pre><code>app.MapGet(\"/\", () =&gt; throw new Exception(\"Bir Exception ba\u015f verdi!\"));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00fct\u00fcn t\u0259tbiq boyunca Exceptionlar\u0131 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn bir middleware istifad\u0259 edin.</p> <pre><code>app.UseExceptionHandler(\"/error\");\n\napp.Map(\"/error\", (HttpContext context) =&gt;\n{\n    var exception = context.Features.Get&lt;IExceptionHandlerFeature&gt;()?.Error;\n    return Results.Problem(detail: exception?.Message, statusCode: 500);\n});\n</code></pre>"},{"location":"dotnet/error-handling/#6-exception-idaretmsind-xususi-siniflrin-istifadsi","title":"6. Exception \u0130dar\u0259etm\u0259sind\u0259 X\u00fcsusi Sinifl\u0259rin \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Exception idar\u0259etm\u0259si \u00fc\u00e7\u00fcn standart <code>Exception</code> sinifini birba\u015fa istifad\u0259 etm\u0259k.</p> <pre><code>throw new Exception(\"S\u0259hv \u0259m\u0259liyyat\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: X\u00fcsusi Exception sinifl\u0259ri yaradaraq daha m\u0259nal\u0131 Exception mesajlar\u0131 t\u0259min edin.</p> <pre><code>public class CustomException : Exception\n{\n    public CustomException(string message) : base(message) { }\n}\n\nthrow new CustomException(\"Bu x\u00fcsusi bir Exceptiond\u0131r.\");\n</code></pre>"},{"location":"dotnet/error-handling/#7-exceptionlarn-sssizc-udulmas","title":"7. Exceptionlar\u0131n S\u0259ssizc\u0259 Udulmas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Exceptionlar\u0131 tutub he\u00e7 bir \u0259m\u0259liyyat etm\u0259m\u0259k.</p> <pre><code>try\n{\n    // \u018fm\u0259liyyat\n}\ncatch\n{\n    // S\u0259ssizc\u0259 udulan Exception\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Exceptionlar\u0131 d\u00fczg\u00fcn bir \u015f\u0259kild\u0259 emal edin v\u0259 ya qeyd edin.</p> <pre><code>try\n{\n    // \u018fm\u0259liyyat\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"Exception: {ex.Message}\");\n}\n</code></pre>"},{"location":"dotnet/exception-logging/","title":"Exception Qeydiyyat\u0131","text":"<p>Exception qeydiyyat\u0131, bir t\u0259tbiqd\u0259 meydana g\u0259l\u0259n x\u0259talar\u0131 anlamaq v\u0259 d\u00fcz\u0259ltm\u0259k \u00fc\u00e7\u00fcn h\u0259yati \u0259h\u0259miyy\u0259t da\u015f\u0131y\u0131r. Lakin, pis qurulmu\u015f v\u0259 ya yet\u0259rsiz logging strategiyalar\u0131, x\u0259ta ay\u0131rd etm\u0259yi \u00e7\u0259tinl\u0259\u015fdir\u0259 bil\u0259r.</p>"},{"location":"dotnet/exception-logging/#1-exceptionlarn-logging-qeyd-edilmmsi","title":"1. Exceptionlar\u0131n Logging\u0259 Qeyd Edilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Exceptionlar\u0131 yaln\u0131z konsola yazd\u0131rmaq.</p> <pre><code>try\n{\n    // \u018fm\u0259liyyat\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"Exception: {ex.Message}\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Logging frameworkl\u0259ri il\u0259 Exceptionlar\u0131 \u0259trafl\u0131 \u015f\u0259kild\u0259 qeyd edin.</p> <pre><code>var logger = LoggerFactory.Create(builder =&gt; builder.AddConsole()).CreateLogger(\"AppLogger\");\n\ntry\n{\n    // \u018fm\u0259liyyat\n}\ncatch (Exception ex)\n{\n    logger.LogError(ex, \"Bir Exception ba\u015f verdi.\");\n}\n</code></pre>"},{"location":"dotnet/exception-logging/#2-yetrsiz-exception-mesajlar","title":"2. Yet\u0259rsiz Exception Mesajlar\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Exceptionlar\u0131n detal\u0131n\u0131 (context) bildirm\u0259m\u0259k.</p> <pre><code>catch (Exception ex)\n{\n    logger.LogError(ex.Message); // Ba\u011flam \u0259ksik\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Exception detal\u0131n\u0131 a\u00e7\u0131q \u015f\u0259kild\u0259 bildir\u0259r\u0259k daha \u00e7ox m\u0259lumat t\u0259min edin.</p> <pre><code>catch (Exception ex)\n{\n    logger.LogError(ex, \"Veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyat\u0131 zaman\u0131 bir Exception ba\u015f verdi.\");\n}\n</code></pre>"},{"location":"dotnet/exception-logging/#3-global-exception-loggingi-atlatmaq","title":"3. Global Exception Logging\u2019i Atlatmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Global Exception idar\u0259etm\u0259sini v\u0259 logginge qeydetm\u0259yi n\u0259z\u0259r\u0259 almamaq.</p> <pre><code>app.MapGet(\"/\", () =&gt; throw new Exception(\"Exception!\")); // Global idar\u0259etm\u0259 yox\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Global exception handler il\u0259 b\u00fct\u00fcn Exceptionlar\u0131 yaxalay\u0131n.</p> <pre><code>app.UseExceptionHandler(\"/error\");\n\napp.Map(\"/error\", (HttpContext context) =&gt;\n{\n    var exception = context.Features.Get&lt;IExceptionHandlerFeature&gt;()?.Error;\n    logger.LogError(exception, \"Global bir Exception yaxaland\u0131.\");\n    return Results.Problem(detail: exception?.Message, statusCode: 500);\n});\n</code></pre>"},{"location":"dotnet/exception-logging/#4-exceptionlarn-tkrarlanaraq-qeyd-edilmsi","title":"4. Exceptionlar\u0131n T\u0259krarlanaraq Qeyd Edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Eyni Exception\u0131 bird\u0259n \u00e7ox d\u0259f\u0259 qeyd etm\u0259k.</p> <pre><code>catch (Exception ex)\n{\n    logger.LogError(ex, \"Exception!\");\n    throw; // Yenid\u0259n qeyd edilir.\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Exceptionlar\u0131 yaln\u0131z bir d\u0259f\u0259 qeyd edin.</p> <pre><code>catch (Exception ex) when (LogException(ex))\n{\n    throw;\n}\n\nstatic bool LogException(Exception ex)\n{\n    logger.LogError(ex, \"Exception qeyd edildi.\");\n    return false;\n}\n</code></pre>"},{"location":"dotnet/exception-logging/#5-hssas-mlumatlarn-logginge-qeyd-edilmsi","title":"5. H\u0259ssas M\u0259lumatlar\u0131n Logginge Qeyd Edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u0130stifad\u0259\u00e7i m\u0259lumatlar\u0131n\u0131 v\u0259 ya h\u0259ssas m\u0259lumatlar\u0131 loqlamaq.</p> <pre><code>catch (Exception ex)\n{\n    logger.LogError($\"Exception: {ex.Message}, \u0130stifad\u0259\u00e7i: {user.Password}\"); // T\u0259hl\u00fck\u0259sizlik z\u0259ifliyi\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259ssas m\u0259lumatlar\u0131 k\u0259narla\u015fd\u0131r\u0131n.</p> <pre><code>catch (Exception ex)\n{\n    logger.LogError(ex, \"Exception ba\u015f verdi.\");\n}\n</code></pre>"},{"location":"dotnet/exception-logging/#6-logging-sviyylrini-yanls-istifad-etmk","title":"6. Logging S\u0259viyy\u0259l\u0259rini Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn Exceptionlar\u0131 eyni s\u0259viyy\u0259d\u0259 qeyd etm\u0259k.</p> <pre><code>logger.LogError(\"Exception!\"); // H\u0259r \u015fey Error olaraq loqlan\u0131b.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Do\u011fru log s\u0259viyy\u0259l\u0259rini istifad\u0259 edin.</p> <pre><code>logger.LogInformation(\"M\u0259lumat: \u018fm\u0259liyyat ba\u015flad\u0131.\");\nlogger.LogWarning(\"X\u0259b\u0259rdarl\u0131q: G\u00f6zl\u0259nilm\u0259z bir v\u0259ziyy\u0259t.\");\nlogger.LogError(\"Exception: Bir istisna \u0259m\u0259l\u0259 g\u0259ldi.\");\n</code></pre>"},{"location":"dotnet/exception-logging/#7-log-idaretm-sistemlrini-istifad-etmmk","title":"7. Log \u0130dar\u0259etm\u0259 Sisteml\u0259rini \u0130stifad\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Lokal loqlama il\u0259 m\u0259hdud qalmaq.</p> <pre><code>logger.LogError(\"Exception qeyd edildi.\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u0259rk\u0259zi log idar\u0259etm\u0259 al\u0259tl\u0259rini istifad\u0259 edin.</p> <ul> <li>Azure Application Insights</li> <li>Elastic Stack (ELK)</li> <li>Sentry</li> <li>Loggly</li> <li>Seq</li> <li>Splunk</li> <li>Datadog</li> <li>Raygun</li> <li>New Relic</li> <li>Serilog</li> <li>NLog</li> <li>Log4Net</li> <li>Graylog</li> </ul>"},{"location":"dotnet/fluent-validation/","title":"Validation v\u0259 FluentValidation \u0130stifad\u0259si","text":"<p>Validation (do\u011frulama), istifad\u0259\u00e7i giri\u015fl\u0259rini yoxlayaraq t\u0259tbiqin t\u0259hl\u00fck\u0259sizliyini v\u0259 b\u00fct\u00f6vl\u00fcy\u00fcn\u00fc t\u0259min etm\u0259k \u00fc\u00e7\u00fcn kritik bir prosesdir. FluentValidation, g\u00fccl\u00fc v\u0259 elastik do\u011frulama qaydalar\u0131 yaratma\u011f\u0131 asanla\u015fd\u0131r\u0131r. Yanl\u0131\u015f istifad\u0259 olunan do\u011frulama qaydalar\u0131, veril\u0259nl\u0259r uy\u011funsuzlu\u011funa v\u0259 t\u0259hl\u00fck\u0259sizlik bo\u015fluqlar\u0131na yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/fluent-validation/#1-birbasa-kodda-validation-qaydalar-yazmaq","title":"1. Birba\u015fa Kodda Validation Qaydalar\u0131 Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Do\u011frulama qaydalar\u0131n\u0131 birba\u015fa i\u015f m\u0259ntiqin\u0259 daxil etm\u0259k.</p> <pre><code>public IActionResult CreateUser(User user)\n{\n    if (string.IsNullOrWhiteSpace(user.Name) || user.Age &lt; 18)\n    {\n        return BadRequest(\"S\u0259hv istifad\u0259\u00e7i veril\u0259nl\u0259ri.\");\n    }\n\n    // \u0130\u015f m\u0259ntiqi\n    return Ok();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: FluentValidation il\u0259 do\u011frulama qaydalar\u0131n\u0131 ay\u0131r\u0131n.</p> <pre><code>public class UserValidator : AbstractValidator&lt;User&gt;\n{\n    public UserValidator()\n    {\n        RuleFor(user =&gt; user.Name).NotEmpty().WithMessage(\"\u0130stifad\u0259\u00e7i ad\u0131 bo\u015f ola bilm\u0259z.\");\n        RuleFor(user =&gt; user.Age).GreaterThanOrEqualTo(18).WithMessage(\"Ya\u015f 18-d\u0259n b\u00f6y\u00fck olmal\u0131d\u0131r.\");\n    }\n}\n\npublic IActionResult CreateUser(User user)\n{\n    var validator = new UserValidator();\n    var result = validator.Validate(user);\n    if (!result.IsValid)\n    {\n        return BadRequest(result.Errors);\n    }\n\n    // \u0130\u015f m\u0259ntiqi\n    return Ok();\n}\n</code></pre>"},{"location":"dotnet/fluent-validation/#2-cox-sayda-qaydaya-sahib-murkkb-validatorlar","title":"2. \u00c7ox Sayda Qaydaya Sahib M\u00fcr\u0259kk\u0259b Validatorlar","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: T\u0259k bir sinifd\u0259 h\u0259ddind\u0259n art\u0131q m\u00fcr\u0259kk\u0259b do\u011frulama qaydalar\u0131 t\u0259yin etm\u0259k.</p> <pre><code>public class ComplexValidator : AbstractValidator&lt;ComplexObject&gt;\n{\n    public ComplexValidator()\n    {\n        RuleFor(x =&gt; x.Property1).NotEmpty();\n        RuleFor(x =&gt; x.Property2).GreaterThan(0);\n        RuleFor(x =&gt; x.NestedObject.Property).NotEmpty();\n        // ... daha \u00e7ox m\u00fcr\u0259kk\u0259b qayda\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Qaydalar\u0131 alt validatorlara ay\u0131raraq idar\u0259 oluna bil\u0259n hala g\u0259tirin.</p> <pre><code>public class NestedObjectValidator : AbstractValidator&lt;NestedObject&gt;\n{\n    public NestedObjectValidator()\n    {\n        RuleFor(x =&gt; x.Property).NotEmpty();\n    }\n}\n\npublic class ComplexValidator : AbstractValidator&lt;ComplexObject&gt;\n{\n    public ComplexValidator()\n    {\n        RuleFor(x =&gt; x.Property1).NotEmpty();\n        RuleFor(x =&gt; x.Property2).GreaterThan(0);\n        RuleFor(x =&gt; x.NestedObject).SetValidator(new NestedObjectValidator());\n    }\n}\n</code></pre>"},{"location":"dotnet/fluent-validation/#3-cascademode-istifadsini-nzr-almamaq","title":"3. <code>CascadeMode</code> \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r qaydan\u0131n ayr\u0131-ayr\u0131l\u0131qda i\u015f\u0259 d\u00fc\u015fm\u0259sin\u0259 s\u0259b\u0259b olmaq.</p> <pre><code>public UserValidator()\n{\n    RuleFor(user =&gt; user.Email).NotEmpty().EmailAddress();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: CascadeMode istifad\u0259 ed\u0259r\u0259k do\u011frulama prosesini optimalla\u015fd\u0131r\u0131n.</p> <pre><code>public UserValidator()\n{\n    RuleFor(user =&gt; user.Email)\n        .Cascade(CascadeMode.Stop)\n        .NotEmpty()\n        .EmailAddress();\n}\n</code></pre>"},{"location":"dotnet/fluent-validation/#4-xtalar-anlaslan-skild-cevirmmk","title":"4. X\u0259talar\u0131 Anla\u015f\u0131lan \u015e\u0259kild\u0259 \u00c7evirm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u0259talar\u0131 anla\u015f\u0131lmayan bir formatda qaytarmaq.</p> <pre><code>return BadRequest(result.Errors);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: X\u0259talar\u0131 istifad\u0259\u00e7i dostu bir formatda \u00e7evirin.</p> <pre><code>return BadRequest(result.Errors.Select(e =&gt; e.ErrorMessage));\n</code></pre>"},{"location":"dotnet/fluent-validation/#5-global-dogrulama-idaretmsi-istifadsini-kecmk","title":"5. Global Do\u011frulama \u0130dar\u0259etm\u0259si \u0130stifad\u0259sini Ke\u00e7m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r yerd\u0259 manual olaraq validator \u00e7a\u011f\u0131rmaq.</p> <pre><code>var validator = new UserValidator();\nvar result = validator.Validate(user);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Global do\u011frulama idar\u0259etm\u0259sini aktivl\u0259\u015fdirin.</p> <pre><code>services.AddFluentValidationAutoValidation()\n        .AddValidatorsFromAssemblyContaining&lt;UserValidator&gt;();\n</code></pre>"},{"location":"dotnet/fluent-validation/#6-verilnlr-bazas-asllqlarn-validatorda-istifad-etmk","title":"6. Veril\u0259nl\u0259r Bazas\u0131 As\u0131l\u0131l\u0131qlar\u0131n\u0131 Validatorda \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Validator i\u00e7ind\u0259 birba\u015fa veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131 etm\u0259k.</p> <pre><code>RuleFor(user =&gt; user.Email).Must(email =&gt; !dbContext.Users.Any(u =&gt; u.Email == email))\n    .WithMessage(\"Bu e-po\u00e7t art\u0131q istifad\u0259 olunur.\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131 constructor vasit\u0259sil\u0259 inject edin.</p> <pre><code>public class UserValidator : AbstractValidator&lt;User&gt;\n{\n    private readonly MyDbContext _dbContext;\n\n    public UserValidator(MyDbContext dbContext)\n    {\n        _dbContext = dbContext;\n\n        RuleFor(user =&gt; user.Email).Must(IsUniqueEmail)\n            .WithMessage(\"Bu e-po\u00e7t art\u0131q istifad\u0259 olunur.\");\n    }\n\n    private bool IsUniqueEmail(string email)\n    {\n        return !_dbContext.Users.Any(u =&gt; u.Email == email);\n    }\n}\n</code></pre>"},{"location":"dotnet/globalization-localization/","title":"Qloballa\u015fma v\u0259 Lokalla\u015fd\u0131rma","text":"<p>Qloballa\u015fma v\u0259 lokalla\u015fd\u0131rma, t\u0259tbiqinizin m\u00fcxt\u0259lif dill\u0259r v\u0259 m\u0259d\u0259niyy\u0259tl\u0259r(culture) \u00fc\u00e7\u00fcn uy\u011fun hala g\u0259tirilm\u0259si prosesidir. Yanl\u0131\u015f t\u0259tbiql\u0259r istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sin\u0259 m\u0259nfi t\u0259sir ed\u0259 bil\u0259r v\u0259 ya yanl\u0131\u015f dil/format g\u00f6st\u0259rilm\u0259sin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"dotnet/globalization-localization/#1-sabit-kodlanms-hardcoded-mtnlrdn-istifad-etmk","title":"1. Sabit Kodlanm\u0131\u015f (Hardcoded) M\u0259tnl\u0259rd\u0259n \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u0259tnl\u0259ri birba\u015fa sabit kodlamaq.</p> <pre><code>public string GetWelcomeMessage()\n{\n    return \"Welcome to our application!\";\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Resurs fayllar\u0131ndan istifad\u0259 ed\u0259r\u0259k m\u0259tnl\u0259ri lokalla\u015fd\u0131r\u0131n.</p> <p>Resources/Texts.resx: <pre><code>&lt;data name=\"WelcomeMessage\" xml:space=\"preserve\"&gt;\n  &lt;value&gt;Welcome to our application!&lt;/value&gt;\n&lt;/data&gt;\n</code></pre></p> <p>\u0130stifad\u0259: <pre><code>public string GetWelcomeMessage()\n{\n    return Resources.Texts.WelcomeMessage;\n}\n</code></pre></p>"},{"location":"dotnet/globalization-localization/#2-tarix-v-saat-formatlarn-sabit-kodlamaq","title":"2. Tarix v\u0259 Saat Formatlar\u0131n\u0131 Sabit Kodlamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tarix v\u0259 saat formatlar\u0131n\u0131 manual olaraq t\u0259yin etm\u0259k.</p> <pre><code>var date = DateTime.Now.ToString(\"MM/dd/yyyy\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Culture m\u0259lumatlar\u0131ndan istifad\u0259 ed\u0259r\u0259k tarix v\u0259 saat formatlar\u0131n\u0131 avtomatik hala g\u0259tirin.</p> <pre><code>var date = DateTime.Now.ToString(CultureInfo.CurrentCulture);\n</code></pre>"},{"location":"dotnet/globalization-localization/#3-threadcurrentthreadcurrentculture-birbasa-dyisdirmk","title":"3. <code>Thread.CurrentThread.CurrentCulture</code>\u2018\u0131 Birba\u015fa D\u0259yi\u015fdirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>Thread.CurrentThread.CurrentCulture</code>\u2018\u0131 manual olaraq d\u0259yi\u015fdirm\u0259k.</p> <pre><code>Thread.CurrentThread.CurrentCulture = new CultureInfo(\"fr-FR\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Middleware istifad\u0259 ed\u0259r\u0259k culture parametrl\u0259rini idar\u0259 edin.</p> <pre><code>app.UseRequestLocalization(new RequestLocalizationOptions\n{\n    DefaultRequestCulture = new RequestCulture(\"en-US\"),\n    SupportedCultures = new[] { new CultureInfo(\"en-US\"), new CultureInfo(\"fr-FR\") },\n    SupportedUICultures = new[] { new CultureInfo(\"en-US\"), new CultureInfo(\"fr-FR\") }\n});\n</code></pre>"},{"location":"dotnet/globalization-localization/#4-istifadci-secimlrin-gor-dil-ayar-etmmk","title":"4. \u0130stifad\u0259\u00e7i Se\u00e7iml\u0259rin\u0259 G\u00f6r\u0259 Dil Ayar\u0131 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Varsay\u0131lan dil parametrini b\u00fct\u00fcn istifad\u0259\u00e7il\u0259r\u0259 t\u0259tbiq etm\u0259k.</p> <pre><code>var culture = new CultureInfo(\"en-US\");\nCultureInfo.DefaultThreadCurrentCulture = culture;\nCultureInfo.DefaultThreadCurrentUICulture = culture;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u0130stifad\u0259\u00e7inin \u00fcst\u00fcnl\u00fck verdiyi dili n\u0259z\u0259r\u0259 al\u0131n.</p> <pre><code>app.Use(async (context, next) =&gt;\n{\n    var userLanguage = context.Request.Headers[\"Accept-Language\"].ToString();\n    var culture = new CultureInfo(userLanguage);\n    CultureInfo.CurrentCulture = culture;\n    CultureInfo.CurrentUICulture = culture;\n\n    await next();\n});\n</code></pre>"},{"location":"dotnet/globalization-localization/#5-trcumlrin-test-edilmmsi","title":"5. T\u0259rc\u00fcm\u0259l\u0259rin Test Edilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: T\u0259rc\u00fcm\u0259l\u0259rin m\u00fcxt\u0259lif dill\u0259rd\u0259 nec\u0259 g\u00f6r\u00fcn\u0259c\u0259yini test etm\u0259m\u0259k.</p> <pre><code>Test edilm\u0259d\u0259n lokalla\u015fd\u0131rma edilir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcxt\u0259lif dill\u0259rd\u0259 t\u0259rc\u00fcm\u0259l\u0259ri test edin.</p> <ul> <li>T\u0259rc\u00fcm\u0259l\u0259ri test etm\u0259k \u00fc\u00e7\u00fcn Visual Studio-da \u201cSet as Startup Culture\u201d x\u00fcsusiyy\u0259tini istifad\u0259 ed\u0259 bil\u0259rsiniz.</li> <li>H\u0259m\u00e7inin <code>CultureInfo</code>-ni manual olaraq d\u0259yi\u015fdir\u0259 bil\u0259rsiniz:</li> </ul> <pre><code>var culture = new CultureInfo(\"fr-FR\");\nCultureInfo.CurrentCulture = culture;\nCultureInfo.CurrentUICulture = culture;\n</code></pre>"},{"location":"dotnet/globalization-localization/#6-verilnlr-bazasnda-sabit-kodlanms-mlumatlardan-istifad-etmk","title":"6. Veril\u0259nl\u0259r Bazas\u0131nda Sabit Kodlanm\u0131\u015f M\u0259lumatlardan \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Veril\u0259nl\u0259r bazas\u0131nda yaln\u0131z bir dild\u0259 m\u0259zmun saxlamaq.</p> <pre><code>ProductName: \"Laptop\"\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Veril\u0259nl\u0259r bazas\u0131nda \u00e7oxlu dil d\u0259st\u0259yi t\u0259min edin.</p> <pre><code>ProductName_en: \"Laptop\"\nProductName_fr: \"Ordinateur portable\"\n</code></pre>"},{"location":"dotnet/globalization-localization/#7-lokallasdrlms-resurslarn-performansn-izlmmk","title":"7. Lokalla\u015fd\u0131r\u0131lm\u0131\u015f Resurslar\u0131n Performans\u0131n\u0131 \u0130zl\u0259m\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Lokalla\u015fd\u0131r\u0131lm\u0131\u015f resurslar\u0131n y\u00fckl\u0259nm\u0259 performans\u0131n\u0131 n\u0259z\u0259r\u0259 almamaq.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans izl\u0259m\u0259 al\u0259tl\u0259ri istifad\u0259 ed\u0259r\u0259k resurslar\u0131n y\u00fckl\u0259nm\u0259 s\u00fcr\u0259tini analiz edin.</p> <ul> <li>N\u00fcmun\u0259: Application Insights, Prometheus</li> </ul> <pre><code>var startTime = Stopwatch.StartNew();\nvar message = Resources.Texts.WelcomeMessage;\nstartTime.Stop();\nlogger.LogInformation(\"Lokalla\u015fd\u0131r\u0131lm\u0131\u015f resurs {TimeTaken} ms-d\u0259 y\u00fckl\u0259ndi.\", startTime.ElapsedMilliseconds);\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/","title":"Sa\u011flaml\u0131q Yoxlamalar\u0131 v\u0259 T\u0259tbiq \u0130zl\u0259m\u0259si","text":"<p>Sa\u011flaml\u0131q yoxlamalar\u0131, bir t\u0259tbiqin v\u0259 ya servisl\u0259rin v\u0259ziyy\u0259tini yoxlamaq v\u0259 probleml\u0259ri tez bir zamanda a\u015fkar etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunur. Yanl\u0131\u015f t\u0259tbiql\u0259r sa\u011flaml\u0131q yoxlamalar\u0131n\u0131n etibarl\u0131l\u0131\u011f\u0131n\u0131 azalda bil\u0259r v\u0259 probleml\u0259rin gec f\u0259rq edilm\u0259sin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/health-checks-monitoring/#1-saglamlq-yoxlama-endpointlrinin-thluksiz-qurulmamas","title":"1. Sa\u011flaml\u0131q Yoxlama Endpointl\u0259rinin T\u0259hl\u00fck\u0259siz Qurulmamas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlama endpointl\u0259rini ham\u0131ya a\u00e7\u0131q etm\u0259k.</p> <pre><code>app.MapHealthChecks(\"/health\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlama endpointl\u0259rini icaz\u0259l\u0259ndirm\u0259 il\u0259 qoruyun.</p> <pre><code>app.MapHealthChecks(\"/health\").RequireAuthorization();\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/#2-sad-cavablardan-istifad-etmk","title":"2. Sad\u0259 Cavablardan \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlamalar\u0131 \u00fc\u00e7\u00fcn yet\u0259rsiz cavablar.</p> <pre><code>Sa\u011flam\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018ftrafl\u0131 cavablar t\u0259min ed\u0259r\u0259k probleml\u0259ri anlama\u011f\u0131 asanla\u015fd\u0131r\u0131n.</p> <pre><code>app.MapHealthChecks(\"/health\", new HealthCheckOptions\n{\n    ResponseWriter = async (context, report) =&gt;\n    {\n        var result = JsonSerializer.Serialize(new\n        {\n            status = report.Status.ToString(),\n            checks = report.Entries.Select(entry =&gt; new\n            {\n                name = entry.Key,\n                status = entry.Value.Status.ToString(),\n                description = entry.Value.Description\n            })\n        });\n        context.Response.ContentType = \"application/json\";\n        await context.Response.WriteAsync(result);\n    }\n});\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/#3-yetrsiz-testlr","title":"3. Yet\u0259rsiz Testl\u0259r","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Yaln\u0131z \u0259sas yoxlamalar etm\u0259k.</p> <pre><code>services.AddHealthChecks();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131m olan sistem komponentl\u0259rini yoxlay\u0131n.</p> <pre><code>services.AddHealthChecks()\n    .AddSqlServer(\"Server=localhost;Database=MyDb;User=sa;Password=Your_password123;\")\n    .AddRedis(\"localhost:6379\")\n    .AddCheck(\"X\u00fcsusi Yoxlama\", () =&gt;\n        HealthCheckResult.Healthy(\"X\u00fcsusi n\u0259zar\u0259t u\u011furlu!\"));\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/#4-saglamlq-yoxlamalarnn-daimi-izlnilmmsi","title":"4. Sa\u011flaml\u0131q Yoxlamalar\u0131n\u0131n Daimi \u0130zl\u0259nilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlama n\u0259tic\u0259l\u0259rini yaln\u0131z manual olaraq yoxlamaq.</p> <pre><code>// Avtomatik izl\u0259m\u0259 edilmir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlama n\u0259tic\u0259l\u0259rini izl\u0259m\u0259 al\u0259tl\u0259ri il\u0259 inteqrasiya edin.</p> <ul> <li>N\u00fcmun\u0259: Prometheus v\u0259 Grafana, Azure Monitor, Datadog</li> </ul> <pre><code>services.AddHealthChecks()\n    .AddCheck(\"X\u00fcsusi Yoxlama\", () =&gt;\n        HealthCheckResult.Healthy(\"H\u0259r \u015fey qaydas\u0131ndad\u0131r!\"))\n    .ForwardToPrometheus();\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/#5-timeout-muddtlrini-yanls-tyin-etmk","title":"5. Timeout M\u00fcdd\u0259tl\u0259rini Yanl\u0131\u015f T\u0259yin Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7ox q\u0131sa v\u0259 ya uzun timeout m\u00fcdd\u0259tl\u0259ri istifad\u0259 etm\u0259k.</p> <pre><code>services.AddHealthChecks().AddSqlServer(\"Connection String\", timeout: TimeSpan.FromSeconds(1));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Uy\u011fun timeout m\u00fcdd\u0259tl\u0259ri t\u0259yin edin.</p> <pre><code>services.AddHealthChecks().AddSqlServer(\"Connection String\", timeout: TimeSpan.FromSeconds(5));\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/#6-saglamlq-yoxlama-mlumatlarn-loqlamamaq","title":"6. Sa\u011flaml\u0131q Yoxlama M\u0259lumatlar\u0131n\u0131 Loqlamamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlama n\u0259tic\u0259l\u0259rini loqlamamaq.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sa\u011flaml\u0131q yoxlamas\u0131 n\u0259tic\u0259l\u0259rini loqlayaraq izl\u0259nil\u0259 bilm\u0259sini art\u0131r\u0131n.</p> <pre><code>app.MapHealthChecks(\"/health\", new HealthCheckOptions\n{\n    ResponseWriter = async (context, report) =&gt;\n    {\n        foreach (var entry in report.Entries)\n        {\n            logger.LogInformation(\"Sa\u011flaml\u0131q Yoxlamas\u0131: {Name}, Status: {Status}\",\n                entry.Key, entry.Value.Status);\n        }\n        await context.Response.WriteAsync(\"Sa\u011flaml\u0131q yoxlamas\u0131 tamamland\u0131.\");\n    }\n});\n</code></pre>"},{"location":"dotnet/health-checks-monitoring/#7-xususi-saglamlq-yoxlamalarnn-pis-dizayn-edilmsi","title":"7. X\u00fcsusi Sa\u011flaml\u0131q Yoxlamalar\u0131n\u0131n Pis Dizayn Edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u00fcsusi sa\u011flaml\u0131q yoxlamalar\u0131nda m\u0259nal\u0131 olmayan v\u0259ziyy\u0259tl\u0259r qaytarmaq.</p> <pre><code>public class CustomHealthCheck : IHealthCheck\n{\n    public Task&lt;HealthCheckResult&gt; CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default)\n    {\n        return Task.FromResult(HealthCheckResult.Unhealthy());\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: X\u00fcsusi sa\u011flaml\u0131q yoxlamalar\u0131n\u0131 sistem v\u0259ziyy\u0259ti haqq\u0131nda do\u011fru m\u0259lumat ver\u0259c\u0259k \u015f\u0259kild\u0259 dizayn edin.</p> <pre><code>public class CustomHealthCheck : IHealthCheck\n{\n    public Task&lt;HealthCheckResult&gt; CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default)\n    {\n        var isHealthy = CheckSomeCriticalResource();\n        return Task.FromResult(isHealthy\n            ? HealthCheckResult.Healthy(\"Sistem i\u015fl\u0259yir.\")\n            : HealthCheckResult.Unhealthy(\"Sistem kritik bir m\u0259nb\u0259 il\u0259 \u0259laq\u0259 qura bilmir.\"));\n    }\n\n    private bool CheckSomeCriticalResource()\n    {\n        // Kritik m\u0259nb\u0259nin yoxlan\u0131lmas\u0131\n        return true;\n    }\n}\n</code></pre>"},{"location":"dotnet/logging-monitoring/","title":"Loqlama v\u0259 Monitorinq","text":"<p>Loqlama v\u0259 monitorinq, t\u0259tbiqinizin v\u0259ziyy\u0259ti haqq\u0131nda m\u0259lumat toplamaq, probleml\u0259ri a\u015fkar etm\u0259k v\u0259 performans optimizasiyas\u0131 etm\u0259k \u00fc\u00e7\u00fcn kritik \u0259h\u0259miyy\u0259t\u0259 malikdir. Yanl\u0131\u015f t\u0259tbiql\u0259r loq qar\u0131\u015f\u0131ql\u0131\u011f\u0131na v\u0259 ya yet\u0259rsiz izl\u0259m\u0259y\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/logging-monitoring/#1-yetrsiz-loq-sviyylri","title":"1. Yet\u0259rsiz Loq S\u0259viyy\u0259l\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn loq mesajlar\u0131n\u0131 eyni s\u0259viyy\u0259d\u0259 qeyd etm\u0259k.</p> <pre><code>logger.LogError(\"T\u0259tbiq ba\u015flad\u0131l\u0131r.\");\nlogger.LogError(\"Bir s\u0259hv ba\u015f verdi.\");\nlogger.LogError(\"\u018flaq\u0259 quruldu.\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Loq s\u0259viyy\u0259l\u0259rini hadis\u0259nin \u0259h\u0259miyy\u0259t d\u0259r\u0259c\u0259sin\u0259 g\u00f6r\u0259 t\u0259nziml\u0259yin.</p> <pre><code>logger.LogInformation(\"T\u0259tbiq ba\u015flad\u0131l\u0131r.\");\nlogger.LogError(\"Bir s\u0259hv ba\u015f verdi.\");\nlogger.LogDebug(\"\u018flaq\u0259 quruldu.\");\n</code></pre>"},{"location":"dotnet/logging-monitoring/#2-shv-loqlama-formas","title":"2. S\u0259hv Loqlama Formas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Loq mesajlar\u0131n\u0131 oxunmas\u0131 anla\u015f\u0131qs\u0131z formatlarda qeyd etm\u0259k.</p> <pre><code>logger.LogInformation(\"Error123: ModulX StepY-d\u0259 u\u011fursuz oldu.\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Strukturla\u015fd\u0131r\u0131lm\u0131\u015f loqlama istifad\u0259 ed\u0259r\u0259k oxunaql\u0131 v\u0259 analiz edil\u0259 bil\u0259n loq formatlar\u0131 yarad\u0131n.</p> <pre><code>logger.LogInformation(\"Modul {Module} {Step} add\u0131m\u0131nda u\u011fursuz oldu.\", \"X\", \"Y\");\n</code></pre>"},{"location":"dotnet/logging-monitoring/#3-loqlarn-grksiz-detal-ehtiva-etmsi","title":"3. Loqlar\u0131n G\u0259r\u0259ksiz Detal Ehtiva Etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r detal\u0131 loqlamaq.</p> <pre><code>logger.LogInformation(\"\u0130stifad\u0259\u00e7i ID: 123, Ad: Murad Din\u00e7, IP: 192.168.1.1, Brauzer: Chrome...\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Vacib m\u0259lumatlar\u0131 qeyd edin, h\u0259ssas m\u0259lumatlar\u0131 xaric edin.</p> <pre><code>logger.LogInformation(\"\u0130stifad\u0259\u00e7i ID: {UserId} daxil oldu.\", 123);\n</code></pre>"},{"location":"dotnet/logging-monitoring/#4-loq-rotation-istifad-edilmmsi","title":"4. Loq Rotation \u0130stifad\u0259 Edilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Loq fayllar\u0131n\u0131 d\u00f6nd\u0259rm\u0259d\u0259n daimi b\u00f6y\u00fctm\u0259k.</p> <pre><code>app.log // Sonsuza q\u0259d\u0259r b\u00f6y\u00fcy\u0259n loq fayl\u0131\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Loq rotation x\u00fcsusiyy\u0259tini aktivl\u0259\u015fdirin.</p> <ul> <li>N\u00fcmun\u0259: Serilog il\u0259 loq fayllar\u0131n\u0131 d\u00f6nd\u0259rm\u0259k.</li> </ul> <pre><code>Log.Logger = new LoggerConfiguration()\n    .WriteTo.File(\"logs/log-.txt\", rollingInterval: RollingInterval.Day)\n    .CreateLogger();\n</code></pre>"},{"location":"dotnet/logging-monitoring/#5-mrkzi-loq-idaretmsi-skikliyi","title":"5. M\u0259rk\u0259zi Loq \u0130dar\u0259etm\u0259si \u018fskikliyi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Loqlar\u0131n yaln\u0131z lokal olaraq saxlanmas\u0131.</p> <pre><code>local-logs/app.log\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u0259rk\u0259zi bir loq idar\u0259etm\u0259 sistemi istifad\u0259 ed\u0259r\u0259k loqlar\u0131 bir araya g\u0259tirin.</p> <ul> <li>Azure Application Insights</li> <li>Elastic Stack (ELK)</li> <li>Datadog</li> </ul> <pre><code>services.AddApplicationInsightsTelemetry();\n</code></pre>"},{"location":"dotnet/logging-monitoring/#6-monitorinqin-skikliyi","title":"6. Monitorinqin \u018fskikliyi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: T\u0259tbiqin performans\u0131n\u0131 v\u0259 v\u0259ziyy\u0259tini izl\u0259m\u0259m\u0259k.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans v\u0259 s\u0259hv izl\u0259m\u0259 al\u0259tl\u0259rini inteqrasiya edin.</p> <ul> <li>Prometheus v\u0259 Grafana</li> <li>Azure Monitor</li> <li>New Relic</li> </ul>"},{"location":"dotnet/logging-monitoring/#7-shv-loqlama-tezliyi","title":"7. S\u0259hv Loqlama Tezliyi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tez-tez ba\u015f ver\u0259n hadis\u0259l\u0259ri h\u0259ddind\u0259n art\u0131q loqlamaq.</p> <pre><code>for (int i = 0; i &lt; 10000; i++)\n{\n    logger.LogInformation(\"\u018fm\u0259liyyat tamamland\u0131.\");\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Vacib hadis\u0259l\u0259ri loqlay\u0131n v\u0259 loqlama tezliyini yoxlay\u0131n.</p> <pre><code>if (transactionCount % 100 == 0)\n{\n    logger.LogInformation(\"{TransactionCount} \u0259m\u0259liyyat tamamland\u0131.\", transactionCount);\n}\n</code></pre>"},{"location":"dotnet/logging-monitoring/#8-loqlarda-hssas-mlumatlarn-saxlanmas","title":"8. Loqlarda H\u0259ssas M\u0259lumatlar\u0131n Saxlanmas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u015eifr\u0259l\u0259ri v\u0259 ya h\u0259ssas m\u0259lumatlar\u0131 loqlara daxil etm\u0259k.</p> <pre><code>logger.LogInformation(\"\u0130stifad\u0259\u00e7i \u015fifr\u0259si: {Password}\", \"123456\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259ssas m\u0259lumatlar\u0131 xaric edin.</p> <pre><code>logger.LogInformation(\"\u0130stifad\u0259\u00e7i daxil oldu: {UserId}\", userId);\n</code></pre>"},{"location":"dotnet/middleware-design/","title":"Middleware Dizayn\u0131 v\u0259 T\u0259tbiqi","text":"<p>ASP.NET Core-da middleware, bir HTTP sor\u011fusu v\u0259 cavab\u0131 \u00fcz\u0259rind\u0259 \u0259m\u0259liyyat aparmaq \u00fc\u00e7\u00fcn istifad\u0259 edil\u0259n bir proqram t\u0259minat\u0131 qatman\u0131d\u0131r. Middleware-in yanl\u0131\u015f dizayn edilm\u0259si v\u0259 ya t\u0259tbiq edilm\u0259si performans probleml\u0259rin\u0259 v\u0259 m\u00fcr\u0259kk\u0259b kod strukturuna yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/middleware-design/#1-grksiz-middleware-istifadsi","title":"1. G\u0259r\u0259ksiz Middleware \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r ki\u00e7ik \u0259m\u0259liyyat \u00fc\u00e7\u00fcn ayr\u0131 middleware yaratmaq.</p> <pre><code>public class LoggingMiddleware\n{\n    private readonly RequestDelegate _next;\n\n    public LoggingMiddleware(RequestDelegate next)\n    {\n        _next = next;\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        Console.WriteLine(\"Sor\u011fu: \" + context.Request.Path);\n        await _next(context);\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018flaq\u0259dar \u0259m\u0259liyyatlar\u0131 t\u0259k bir middleware i\u00e7ind\u0259 qrupla\u015fd\u0131r\u0131n.</p> <pre><code>public class CombinedMiddleware\n{\n    private readonly RequestDelegate _next;\n\n    public CombinedMiddleware(RequestDelegate next)\n    {\n        _next = next;\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        Console.WriteLine(\"Sor\u011fu: \" + context.Request.Path);\n\n        if (context.Request.Path.StartsWithSegments(\"/secure\"))\n        {\n            // \u018flav\u0259 t\u0259hl\u00fck\u0259sizlik yoxlamas\u0131\n            if (!context.User.Identity.IsAuthenticated)\n            {\n                context.Response.StatusCode = 401;\n                return;\n            }\n        }\n\n        await _next(context);\n    }\n}\n</code></pre>"},{"location":"dotnet/middleware-design/#2-middleware-in-yanls-sralanmas","title":"2. Middleware-in Yanl\u0131\u015f S\u0131ralanmas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Middleware s\u0131ras\u0131n\u0131n \u0259h\u0259miyy\u0259tli oldu\u011fu hallarda yanl\u0131\u015f s\u0131rayla \u0259lav\u0259 etm\u0259k.</p> <pre><code>app.UseAuthentication();\napp.UseAuthorization();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Middleware s\u0131ras\u0131n\u0131 do\u011fru bir \u015f\u0259kild\u0259 qurun.</p> <pre><code>app.UseAuthentication();\napp.UseAuthorization();\napp.MapControllers();\n</code></pre> <p>\ud83d\udca1 Qeyd: Do\u011fru middleware s\u0131ras\u0131, t\u0259tbiqin d\u00fczg\u00fcn i\u015fl\u0259m\u0259si \u00fc\u00e7\u00fcn h\u0259yati \u0259h\u0259miyy\u0259t da\u015f\u0131y\u0131r.</p>"},{"location":"dotnet/middleware-design/#3-response-manual-olaraq-yazmaq","title":"3. Response-\u0131 Manual Olaraq Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Cavab\u0131n ham\u0131s\u0131n\u0131 manual olaraq idar\u0259 etm\u0259k.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    if (context.Request.Path == \"/custom\")\n    {\n        context.Response.StatusCode = 200;\n        await context.Response.WriteAsync(\"X\u00fcsusi Cavab\");\n        return;\n    }\n\n    await _next(context);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>Results</code> sinifini v\u0259 ya uy\u011fun al\u0259tl\u0259rd\u0259n istifad\u0259 ed\u0259r\u0259k cavablar\u0131 idar\u0259 edin.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    if (context.Request.Path == \"/custom\")\n    {\n        context.Response.StatusCode = StatusCodes.Status200OK;\n        await Results.Text(\"X\u00fcsusi Cavab\").ExecuteAsync(context);\n        return;\n    }\n\n    await _next(context);\n}\n</code></pre>"},{"location":"dotnet/middleware-design/#4-exception-idaretmsini-nzr-almamaq","title":"4. Exception \u0130dar\u0259etm\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Middleware i\u00e7ind\u0259 yaxalanmayan istisnalar buraxmaq.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    // S\u0259hvdir, \u00e7\u00fcnki istisna idar\u0259etm\u0259si yoxdur\n    var result = int.Parse(\"NotAnInt\");\n    await _next(context);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Exception idar\u0259etm\u0259sini daxil ed\u0259r\u0259k istisnalar\u0131 yaxalay\u0131n.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    try\n    {\n        var result = int.Parse(\"NotAnInt\");\n    }\n    catch (Exception ex)\n    {\n        context.Response.StatusCode = StatusCodes.Status500InternalServerError;\n        await context.Response.WriteAsync($\"S\u0259hv: {ex.Message}\");\n        return;\n    }\n\n    await _next(context);\n}\n</code></pre>"},{"location":"dotnet/middleware-design/#5-performans-itkilrin-yol-acan-middleware","title":"5. Performans \u0130tkil\u0259rin\u0259 Yol A\u00e7an Middleware","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: G\u0259r\u0259ksiz loqlama etm\u0259k.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    Console.WriteLine($\"Sor\u011fu Yolu: {context.Request.Path}\");\n    Console.WriteLine($\"Ba\u015fl\u0131qlar: {string.Join(\", \", context.Request.Headers.Select(h =&gt; h.Key + \": \" + h.Value))}\");\n    await _next(context);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans bax\u0131m\u0131ndan kritik \u0259m\u0259liyyatlar\u0131 minimuma endirin.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    if (context.Request.Path.StartsWithSegments(\"/debug\"))\n    {\n        Console.WriteLine($\"Sor\u011fu Yolu: {context.Request.Path}\");\n    }\n\n    await _next(context);\n}\n</code></pre>"},{"location":"dotnet/middleware-design/#6-middleware-in-yenidn-istifad-olunmamas","title":"6. Middleware-in Yenid\u0259n \u0130stifad\u0259 Olunmamas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Middleware-i yaln\u0131z t\u0259k bir kontekstd\u0259 i\u015fl\u0259y\u0259c\u0259k \u015f\u0259kild\u0259 dizayn etm\u0259k.</p> <pre><code>app.UseMiddleware&lt;MyCustomMiddleware&gt;();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Middleware-i s\u00fcr\u0259li v\u0259 yenid\u0259n istifad\u0259 oluna bil\u0259n hala g\u0259tirin.</p> <pre><code>public class MyCustomMiddleware\n{\n    private readonly RequestDelegate _next;\n    private readonly string _customMessage;\n\n    public MyCustomMiddleware(RequestDelegate next, string customMessage)\n    {\n        _next = next;\n        _customMessage = customMessage;\n    }\n\n    public async Task InvokeAsync(HttpContext context)\n    {\n        Console.WriteLine(_customMessage);\n        await _next(context);\n    }\n}\n\napp.UseMiddleware&lt;MyCustomMiddleware&gt;(\"Salam D\u00fcnya!\");\n</code></pre>"},{"location":"dotnet/minimal-apis/","title":"Minimal API-l\u0259r","text":"<p>Minimal API-l\u0259r, ASP.NET Core il\u0259 s\u00fcr\u0259tli v\u0259 sad\u0259 bir \u015f\u0259kild\u0259 API yaratmaq \u00fc\u00e7\u00fcn t\u0259qdim olunan bir x\u00fcsusiyy\u0259tdir. Lakin, d\u00fczg\u00fcn \u015f\u0259kild\u0259 istifad\u0259 edilm\u0259dikd\u0259, performans probleml\u0259rin\u0259 v\u0259 kod m\u00fcr\u0259kk\u0259bliyin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/minimal-apis/#1-tk-msuliyyt-prinsipi","title":"1. T\u0259k M\u0259suliyy\u0259t Prinsipi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn i\u015f m\u0259ntiqini bir endpoint\u0259 daxil etm\u0259k.</p> <pre><code>app.MapGet(\"/users\", async (HttpContext context) =&gt;\n{\n    var users = await GetUsersFromDatabaseAsync();\n    if (users == null)\n    {\n        context.Response.StatusCode = 404;\n        await context.Response.WriteAsync(\"\u0130stifad\u0259\u00e7i tap\u0131lmad\u0131.\");\n        return;\n    }\n    await context.Response.WriteAsJsonAsync(users);\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u0130\u015f m\u0259ntiqini ayr\u0131 bir servis\u0259 da\u015f\u0131yaraq kodun oxunaql\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131n.</p> <pre><code>app.MapGet(\"/users\", async (IUserService userService) =&gt;\n{\n    var users = await userService.GetAllUsersAsync();\n    return users != null ? Results.Ok(users) : Results.NotFound(\"\u0130stifad\u0259\u00e7i tap\u0131lmad\u0131.\");\n});\n</code></pre>"},{"location":"dotnet/minimal-apis/#2-asllqlarn-birbasa-idar-edilmsi","title":"2. As\u0131l\u0131l\u0131qlar\u0131n Birba\u015fa \u0130dar\u0259 Edilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: As\u0131l\u0131l\u0131qlar\u0131n birba\u015fa n\u00fcmun\u0259l\u0259rini yaratmaq.</p> <pre><code>app.MapGet(\"/products\", async () =&gt;\n{\n    using var dbContext = new ProductDbContext();\n    var products = await dbContext.Products.ToListAsync();\n    return products;\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: As\u0131l\u0131l\u0131q injection istifad\u0259 ed\u0259r\u0259k kodu test edil\u0259 bil\u0259n hala g\u0259tirin.</p> <pre><code>app.MapGet(\"/products\", async (IProductService productService) =&gt;\n{\n    var products = await productService.GetAllProductsAsync();\n    return Results.Ok(products);\n});\n</code></pre>"},{"location":"dotnet/minimal-apis/#3-yanls-http-status-kodlar","title":"3. Yanl\u0131\u015f HTTP Status Kodlar\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn statuslar \u00fc\u00e7\u00fcn yaln\u0131z 200 (OK) qaytarmaq.</p> <pre><code>app.MapGet(\"/orders/{id}\", async (int id, IOrderService orderService) =&gt;\n{\n    var order = await orderService.GetOrderByIdAsync(id);\n    return order; // S\u0259hvdir, \u00e7\u00fcnki status kodlar\u0131 g\u00f6st\u0259rilm\u0259yib.\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: HTTP status kodlar\u0131n\u0131 a\u00e7\u0131q \u015f\u0259kild\u0259 g\u00f6st\u0259rm\u0259k.</p> <pre><code>app.MapGet(\"/orders/{id}\", async (int id, IOrderService orderService) =&gt;\n{\n    var order = await orderService.GetOrderByIdAsync(id);\n    return order != null ? Results.Ok(order) : Results.NotFound(\"Sifari\u015f tap\u0131lmad\u0131.\");\n});\n</code></pre>"},{"location":"dotnet/minimal-apis/#4-middleware-in-yanls-istifadsi","title":"4. Middleware-in Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\ud83d\udd34 Yanl\u0131\u015f \u0130stifad\u0259: Middleware-i endpoint i\u00e7ind\u0259 manual olaraq \u00e7a\u011f\u0131rmaq.</p> <pre><code>app.MapGet(\"/middleware-test\", async (HttpContext context) =&gt;\n{\n    // S\u0259hvdir, \u00e7\u00fcnki middleware burada \u0259ll\u0259 idar\u0259 olunur.\n    if (!context.Request.Headers.ContainsKey(\"Authorization\"))\n    {\n        context.Response.StatusCode = 401;\n        return;\n    }\n    await context.Response.WriteAsync(\"\u0130caz\u0259 verildi.\");\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Middleware-i qlobal bir qurulu\u015f kimi t\u0259yin etm\u0259k.</p> <pre><code>app.Use(async (context, next) =&gt;\n{\n    if (!context.Request.Headers.ContainsKey(\"Authorization\"))\n    {\n        context.Response.StatusCode = 401;\n        return;\n    }\n    await next();\n});\n\napp.MapGet(\"/middleware-test\", () =&gt; \"\u0130caz\u0259 verildi.\");\n</code></pre>"},{"location":"dotnet/minimal-apis/#5-resurs-idaretmsi","title":"5. Resurs \u0130dar\u0259etm\u0259si","text":"<p>\ud83d\udd34 Yanl\u0131\u015f \u0130stifad\u0259: Resurslar\u0131n d\u00fczg\u00fcn \u015f\u0259kild\u0259 s\u0259rb\u0259st burax\u0131lmamas\u0131.</p> <pre><code>app.MapGet(\"/files\", async () =&gt;\n{\n    var fileStream = new FileStream(\"data.txt\", FileMode.Open);\n    var content = await new StreamReader(fileStream).ReadToEndAsync();\n    return content; // S\u0259hvdir, \u00e7\u00fcnki fayl ba\u011flanm\u0131r.\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Resurs idar\u0259etm\u0259sini <code>using</code> il\u0259 n\u0259zar\u0259t edin.</p> <pre><code>app.MapGet(\"/files\", async () =&gt;\n{\n    using var fileStream = new FileStream(\"data.txt\", FileMode.Open);\n    using var reader = new StreamReader(fileStream);\n    var content = await reader.ReadToEndAsync();\n    return Results.Ok(content);\n});\n</code></pre>"},{"location":"dotnet/minimal-apis/#6-cox-sayda-endpoint-tyini","title":"6. \u00c7ox Sayda Endpoint T\u0259yini","text":"<p>\ud83d\udd34 Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r endpoint \u00fc\u00e7\u00fcn ox\u015far m\u0259ntiqin t\u0259krarlanmas\u0131.</p> <pre><code>app.MapGet(\"/get-users\", async (IUserService userService) =&gt; await userService.GetAllUsersAsync());\napp.MapGet(\"/get-orders\", async (IOrderService orderService) =&gt; await orderService.GetAllOrdersAsync());\napp.MapGet(\"/get-products\", async (IProductService productService) =&gt; await productService.GetAllProductsAsync());\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u00dcmumi davran\u0131\u015flar\u0131 bir konfiqurasiya metodunda qrupla\u015fd\u0131r\u0131n.</p> <pre><code>void MapEndpoints(WebApplication app)\n{\n    app.MapGet(\"/users\", async (IUserService userService) =&gt; await userService.GetAllUsersAsync());\n    app.MapGet(\"/orders\", async (IOrderService orderService) =&gt; await orderService.GetAllOrdersAsync());\n    app.MapGet(\"/products\", async (IProductService productService) =&gt; await productService.GetAllProductsAsync());\n}\n\nMapEndpoints(app);\n</code></pre>"},{"location":"dotnet/response-compression/","title":"Response Compression-i v\u0259 M\u0259zmun Optimizasiyas\u0131","text":"<p>Response Compression-i, veb t\u0259tbiql\u0259rind\u0259 \u015f\u0259b\u0259k\u0259 \u00fcz\u0259rind\u0259n \u00f6t\u00fcr\u00fcl\u0259n m\u0259lumatlar\u0131n h\u0259cmini azaldaraq performans\u0131 art\u0131r\u0131r. Yanl\u0131\u015f qurulmu\u015f Compression (s\u0131x\u0131lma) \u00fcsullar\u0131 istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sin\u0259 t\u0259sir ed\u0259 bil\u0259r v\u0259 g\u0259r\u0259ksiz \u015f\u0259b\u0259k\u0259 trafikin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/response-compression/#1-response-compression-i-middleware-istifadsini-nzr-almamaq","title":"1. Response Compression-i Middleware \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Response Compression-ini manual olaraq h\u0259yata ke\u00e7irm\u0259k.</p> <pre><code>public async Task InvokeAsync(HttpContext context)\n{\n    var response = context.Response;\n    var originalBody = response.Body;\n\n    using var compressedStream = new GZipStream(originalBody, CompressionMode.Compress);\n    response.Body = compressedStream;\n\n    await _next(context);\n    response.Body = originalBody;\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>ResponseCompression</code> middleware-ini istifad\u0259 ed\u0259r\u0259k Compression-i aktivl\u0259\u015fdirin.</p> <pre><code>builder.Services.AddResponseCompression(options =&gt;\n{\n    options.Providers.Add&lt;GzipCompressionProvider&gt;();\n    options.Providers.Add&lt;BrotliCompressionProvider&gt;();\n    options.EnableForHttps = true;\n});\n\napp.UseResponseCompression();\n</code></pre>"},{"location":"dotnet/response-compression/#2-shv-mime-novu-konfiqurasiyas","title":"2. S\u0259hv MIME N\u00f6v\u00fc Konfiqurasiyas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Compression edil\u0259 bil\u0259n MIME n\u00f6vl\u0259rini g\u00f6st\u0259rm\u0259m\u0259k.</p> <pre><code>builder.Services.AddResponseCompression();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Compression edil\u0259 bil\u0259n MIME n\u00f6vl\u0259rini a\u00e7\u0131q \u015f\u0259kild\u0259 t\u0259yin edin.</p> <pre><code>builder.Services.AddResponseCompression(options =&gt;\n{\n    options.MimeTypes = new[]\n    {\n        \"text/plain\",\n        \"text/css\",\n        \"application/javascript\",\n        \"text/html\",\n        \"application/json\",\n        \"image/svg+xml\"\n    };\n});\n</code></pre>"},{"location":"dotnet/response-compression/#3-https-uzrindn-compression-i-deaktiv-etmk","title":"3. HTTPS \u00dcz\u0259rind\u0259n Compression-i Deaktiv Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: HTTPS \u00fcz\u0259rind\u0259 Compression-i deaktiv etm\u0259k.</p> <pre><code>builder.Services.AddResponseCompression(options =&gt;\n{\n    options.EnableForHttps = false;\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: HTTPS \u00fcz\u0259rind\u0259 Compression-i aktivl\u0259\u015fdirin.</p> <pre><code>builder.Services.AddResponseCompression(options =&gt;\n{\n    options.EnableForHttps = true;\n});\n</code></pre>"},{"location":"dotnet/response-compression/#4-uygun-compression-tminatclarn-istifad-ed-bilmmk","title":"4. Uy\u011fun Compression T\u0259minat\u00e7\u0131lar\u0131n\u0131 \u0130stifad\u0259 Ed\u0259 Bilm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Yaln\u0131z bir Compression t\u0259minat\u00e7\u0131s\u0131 istifad\u0259 etm\u0259k.</p> <pre><code>options.Providers.Add&lt;GzipCompressionProvider&gt;();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Bird\u0259n \u00e7ox Compression t\u0259minat\u00e7\u0131s\u0131 \u0259lav\u0259 ed\u0259r\u0259k istifad\u0259\u00e7i cihazlar\u0131na uy\u011fun se\u00e7iml\u0259r t\u0259klif edin.</p> <pre><code>builder.Services.Configure&lt;GzipCompressionProviderOptions&gt;(options =&gt;\n{\n    options.Level = CompressionLevel.Fastest;\n});\n\nbuilder.Services.AddResponseCompression(options =&gt;\n{\n    options.Providers.Add&lt;GzipCompressionProvider&gt;();\n    options.Providers.Add&lt;BrotliCompressionProvider&gt;();\n});\n</code></pre>"},{"location":"dotnet/response-compression/#5-compression-performansn-izlmmk","title":"5. Compression Performans\u0131n\u0131 \u0130zl\u0259m\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Compression t\u0259sirini v\u0259 performans\u0131n\u0131 analiz etm\u0259m\u0259k.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Compression t\u0259sirini v\u0259 performans\u0131n\u0131 \u00f6l\u00e7m\u0259k \u00fc\u00e7\u00fcn izl\u0259m\u0259 al\u0259tl\u0259ri istifad\u0259 edin.</p> <pre><code>app.Use(async (context, next) =&gt;\n{\n    var originalSize = context.Response.Body.Length;\n    await next();\n    var compressedSize = context.Response.Body.Length;\n    Console.WriteLine($\"Orijinal H\u0259cm: {originalSize}, Compression edilmi\u015f H\u0259cm: {compressedSize}\");\n});\n</code></pre>"},{"location":"dotnet/response-compression/#6-boyuk-fayllar-ucun-compression-i-aktivlsdirmk","title":"6. B\u00f6y\u00fck Fayllar \u00dc\u00e7\u00fcn Compression-i Aktivl\u0259\u015fdirm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Compression edilmi\u015f fayllar \u00fc\u00e7\u00fcn yenid\u0259n Compression t\u0259tbiq etm\u0259k.</p> <pre><code>options.MimeTypes = new[] { \"application/zip\", \"image/png\" };\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Compression edilmi\u015f fayllar\u0131 Compression prosesind\u0259n xaric edin.</p> <pre><code>builder.Services.AddResponseCompression(options =&gt;\n{\n    options.MimeTypes = ResponseCompressionDefaults.MimeTypes.Concat(new[]\n    {\n        \"text/plain\",\n        \"text/css\",\n        \"application/javascript\",\n        \"application/json\",\n        \"image/svg+xml\"\n    });\n});\n</code></pre>"},{"location":"dotnet/routing-url-management/","title":"Routing v\u0259 URL \u0130dar\u0259etm\u0259si","text":"<p>Routing v\u0259 URL idar\u0259etm\u0259si, veb t\u0259tbiql\u0259rinin d\u00fczg\u00fcn i\u015fl\u0259m\u0259si v\u0259 istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sinin art\u0131r\u0131lmas\u0131 \u00fc\u00e7\u00fcn kritik \u0259h\u0259miyy\u0259t\u0259 malikdir. Yanl\u0131\u015f qurulmu\u015f y\u00f6nl\u0259ndirm\u0259, performans probleml\u0259rin\u0259 v\u0259 s\u0259hv n\u0259tic\u0259l\u0259r\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/routing-url-management/#1-yanls-route-tyinlri","title":"1. Yanl\u0131\u015f Route T\u0259yinl\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ziddiyy\u0259tli v\u0259 ya qar\u0131\u015f\u0131ql\u0131q yaradan routelar.</p> <pre><code>app.MapGet(\"/products\", () =&gt; \"B\u00fct\u00fcn m\u0259hsullar\");\napp.MapGet(\"/products/{id}\", (int id) =&gt; $\"M\u0259hsul ID: {id}\");\napp.MapGet(\"/products/{category}\", (string category) =&gt; $\"Kateqoriya: {category}\"); // Ziddiyy\u0259t\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Routelar\u0131 a\u00e7\u0131q \u015f\u0259kild\u0259 t\u0259yin edin v\u0259 Ziddiyy\u0259tl\u0259ri \u00f6nl\u0259yin.</p> <pre><code>app.MapGet(\"/products\", () =&gt; \"B\u00fct\u00fcn m\u0259hsullar\");\napp.MapGet(\"/products/{id:int}\", (int id) =&gt; $\"M\u0259hsul ID: {id}\");\napp.MapGet(\"/products/category/{category}\", (string category) =&gt; $\"Kateqoriya: {category}\");\n</code></pre>"},{"location":"dotnet/routing-url-management/#2-grksiz-route-parametrlri","title":"2. G\u0259r\u0259ksiz Route Parametrl\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Route parametrl\u0259rini g\u0259r\u0259ksiz yer\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>app.MapGet(\"/user/{id}/details\", (int id) =&gt; $\"\u0130stifad\u0259\u00e7i ID: {id}\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Route parametrl\u0259rini m\u0259nal\u0131 v\u0259 minimum s\u0259viyy\u0259d\u0259 saxlay\u0131n.</p> <pre><code>app.MapGet(\"/users/{id}\", (int id) =&gt; $\"\u0130stifad\u0259\u00e7i ID: {id}\");\n</code></pre>"},{"location":"dotnet/routing-url-management/#3-catch-all-route-istifadsi","title":"3. Catch-All Route \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Catch-all routelar\u0131 diqq\u0259tsizlikl\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>app.MapGet(\"/{*path}\", (string path) =&gt; $\"Path: {path}\"); // Dig\u0259r routelar\u0131 \u0259ng\u0259ll\u0259y\u0259 bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Catch-all routelar\u0131 diqq\u0259tl\u0259 v\u0259 m\u00fc\u0259yy\u0259n bir m\u0259qs\u0259d\u0259 y\u00f6n\u0259lik istifad\u0259 edin.</p> <pre><code>app.MapGet(\"/files/{*filepath}\", (string filepath) =&gt; $\"Fayl yolu: {filepath}\");\n</code></pre>"},{"location":"dotnet/routing-url-management/#4-route-adlarnn-istifad-edilmmsi","title":"4. Route Adlar\u0131n\u0131n \u0130stifad\u0259 Edilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Route adlar\u0131n\u0131 g\u00f6st\u0259rm\u0259d\u0259n URL-l\u0259rl\u0259 i\u015fl\u0259m\u0259k.</p> <pre><code>app.MapGet(\"/home\", () =&gt; \"Ana S\u0259hif\u0259\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Route adlar\u0131n\u0131 g\u00f6st\u0259r\u0259r\u0259k y\u00f6nl\u0259ndirm\u0259 \u0259m\u0259liyyatlar\u0131n\u0131 daha oxunaql\u0131 hala g\u0259tirin.</p> <pre><code>app.MapGet(\"/home\", () =&gt; \"Ana S\u0259hif\u0259\").WithName(\"Home\");\n</code></pre>"},{"location":"dotnet/routing-url-management/#5-query-parametrlrinin-yanls-istifadsi","title":"5. Query Parametrl\u0259rinin Yanl\u0131\u015f \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Query parametrl\u0259rini manual olaraq i\u015fl\u0259m\u0259k.</p> <pre><code>app.MapGet(\"/search\", (HttpContext context) =&gt;\n{\n    var query = context.Request.Query[\"q\"];\n    return $\"Axtar\u0131\u015f: {query}\";\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Query parametrl\u0259rini birba\u015fa metod parametri olaraq ba\u011flay\u0131n.</p> <pre><code>app.MapGet(\"/search\", (string q) =&gt; $\"Axtar\u0131\u015f: {q}\");\n</code></pre>"},{"location":"dotnet/routing-url-management/#6-route-constraint-skikliyi","title":"6. Route Constraint \u018fskikliyi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Route parametrl\u0259rini yoxlama etm\u0259d\u0259n istifad\u0259 etm\u0259k.</p> <pre><code>app.MapGet(\"/users/{id}\", (string id) =&gt; $\"\u0130stifad\u0259\u00e7i ID: {id}\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Route constraintl\u0259ri istifad\u0259 ed\u0259r\u0259k do\u011fru veril\u0259n tipl\u0259rini t\u0259yin edin.</p> <pre><code>app.MapGet(\"/users/{id:int}\", (int id) =&gt; $\"\u0130stifad\u0259\u00e7i ID: {id}\");\n</code></pre>"},{"location":"dotnet/routing-url-management/#7-route-prioritization-problemlri","title":"7. Route Prioritization Probleml\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u00fcsusi routelar\u0131 \u00fcmumi routelar\u0131n alt\u0131na yerl\u0259\u015fdirm\u0259k.</p> <pre><code>app.MapGet(\"/{category}\", (string category) =&gt; $\"Kateqoriya: {category}\");\napp.MapGet(\"/products\", () =&gt; \"M\u0259hsul siyah\u0131s\u0131\"); // \u0130\u015fl\u0259m\u0259z\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Daha x\u00fcsusi routelar\u0131 \u0259vv\u0259l t\u0259yin edin.</p> <pre><code>app.MapGet(\"/products\", () =&gt; \"M\u0259hsul siyah\u0131s\u0131\");\napp.MapGet(\"/{category}\", (string category) =&gt; $\"Kateqoriya: {category}\");\n</code></pre>"},{"location":"dotnet/static-files-optimization/","title":"Statik Fayllar\u0131n Optimizasiyas\u0131","text":"<p>Statik fayllar (CSS, JavaScript, \u015f\u0259kill\u0259r) bir veb t\u0259tbiqinin \u0259sas tikinti bloklar\u0131d\u0131r. Yanl\u0131\u015f qurulmu\u015f statik fayl idar\u0259etm\u0259si, t\u0259tbiq performans\u0131n\u0131 a\u015fa\u011f\u0131 sala v\u0259 pis bir istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"dotnet/static-files-optimization/#1-statik-fayllar-birbasa-serve-etmk","title":"1. Statik Fayllar\u0131 Birba\u015fa Serve Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Statik fayllar\u0131 manual olaraq i\u015fl\u0259m\u0259k.</p> <pre><code>app.MapGet(\"/static/{filename}\", async (HttpContext context, string filename) =&gt;\n{\n    var filePath = Path.Combine(\"wwwroot\", filename);\n    if (File.Exists(filePath))\n    {\n        await context.Response.SendFileAsync(filePath);\n    }\n    else\n    {\n        context.Response.StatusCode = 404;\n    }\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>UseStaticFiles</code> middleware-ini istifad\u0259 ed\u0259r\u0259k statik fayllar\u0131 serve edin.</p> <pre><code>app.UseStaticFiles();\n</code></pre>"},{"location":"dotnet/static-files-optimization/#2-gzip-v-ya-brotli-sxstrman-nzr-almamaq","title":"2. Gzip v\u0259 ya Brotli S\u0131x\u0131\u015ft\u0131rman\u0131 N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: S\u0131x\u0131\u015ft\u0131rma olmadan b\u00f6y\u00fck fayllar\u0131 serve etm\u0259k.</p> <pre><code>B\u00fct\u00fcn fayllar s\u0131x\u0131\u015ft\u0131r\u0131lmadan g\u00f6nd\u0259rilir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>ResponseCompression</code> middleware-ini aktivl\u0259\u015fdirin.</p> <pre><code>app.UseResponseCompression();\n\nbuilder.Services.AddResponseCompression(options =&gt;\n{\n    options.EnableForHttps = true;\n    options.Providers.Add&lt;GzipCompressionProvider&gt;();\n    options.Providers.Add&lt;BrotliCompressionProvider&gt;();\n});\n</code></pre>"},{"location":"dotnet/static-files-optimization/#3-cache-control-v-etag-baslqlarnn-skikliyi","title":"3. Cache-Control v\u0259 ETag Ba\u015fl\u0131qlar\u0131n\u0131n \u018fskikliyi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Statik fayllar \u00fc\u00e7\u00fcn ke\u015fl\u0259m\u0259 ba\u015fl\u0131qlar\u0131n\u0131 g\u00f6st\u0259rm\u0259m\u0259k.</p> <pre><code>Cache-Control ba\u015fl\u0131\u011f\u0131 olmadan fayllar g\u00f6nd\u0259rilir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Ke\u015fl\u0259m\u0259 ba\u015fl\u0131qlar\u0131n\u0131 qurun.</p> <pre><code>app.UseStaticFiles(new StaticFileOptions\n{\n    OnPrepareResponse = context =&gt;\n    {\n        context.Context.Response.Headers[\"Cache-Control\"] = \"public,max-age=31536000\";\n        context.Context.Response.Headers[\"ETag\"] = \"\"unique-id\"\";\n    }\n});\n</code></pre>"},{"location":"dotnet/static-files-optimization/#4-yuksk-keyfiyytli-skillrin-optimiz-edilmmsi","title":"4. Y\u00fcks\u0259k Keyfiyy\u0259tli \u015e\u0259kill\u0259rin Optimiz\u0259 Edilm\u0259m\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck v\u0259 optimiz\u0259 edilm\u0259mi\u015f \u015f\u0259kill\u0259ri serve etm\u0259k.</p> <pre><code>images/background.png (5MB)\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u015e\u0259kill\u0259ri s\u0131x\u0131\u015fd\u0131raraq v\u0259 CDN istifad\u0259 ed\u0259r\u0259k optimiz\u0259 edin.</p> <ul> <li>Al\u0259tl\u0259r: ImageMagick, TinyPNG</li> <li>N\u00fcmun\u0259: \u015e\u0259kill\u0259ri bir CDN \u00fcz\u0259rind\u0259n paylamaq.</li> </ul> <pre><code>https://cdn.example.com/images/background.png\n</code></pre>"},{"location":"dotnet/static-files-optimization/#5-thluksizlik-baslqlarnn-skikliyi","title":"5. T\u0259hl\u00fck\u0259sizlik Ba\u015fl\u0131qlar\u0131n\u0131n \u018fskikliyi","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Statik fayllar \u00fc\u00e7\u00fcn t\u0259hl\u00fck\u0259sizlik ba\u015fl\u0131qlar\u0131n\u0131 n\u0259z\u0259r\u0259 almamaq.</p> <pre><code>Statik fayllar X-Content-Type-Options ba\u015fl\u0131\u011f\u0131 olmadan g\u00f6nd\u0259rilir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: T\u0259hl\u00fck\u0259sizlik ba\u015fl\u0131qlar\u0131n\u0131 qurun.</p> <pre><code>app.UseStaticFiles(new StaticFileOptions\n{\n    OnPrepareResponse = context =&gt;\n    {\n        context.Context.Response.Headers[\"X-Content-Type-Options\"] = \"nosniff\";\n        context.Context.Response.Headers[\"Content-Security-Policy\"] = \"default-src 'self'\";\n    }\n});\n</code></pre>"},{"location":"dotnet/static-files-optimization/#6-cdn-istifadsinin-nzr-alnmamas","title":"6. CDN \u0130stifad\u0259sinin N\u0259z\u0259r\u0259 Al\u0131nmamas\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn statik fayllar\u0131 birba\u015fa serverd\u0259n serve etm\u0259k.</p> <pre><code>B\u00fct\u00fcn fayllar serverd\u0259n y\u00fckl\u0259nir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Statik fayllar\u0131 bir CDN il\u0259 paylay\u0131n.</p> <pre><code>https://cdn.example.com/styles/main.css\nhttps://cdn.example.com/scripts/app.js\n</code></pre>"},{"location":"dotnet/static-files-optimization/#7-hddindn-artq-sayda-http-sorgusu","title":"7. H\u0259ddind\u0259n Art\u0131q Sayda HTTP Sor\u011fusu","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259ddind\u0259n art\u0131q sayda ki\u00e7ik fayl\u0131 ayr\u0131-ayr\u0131l\u0131qda serve etm\u0259k.</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"/css/reset.css\"&gt;\n&lt;link rel=\"stylesheet\" href=\"/css/grid.css\"&gt;\n&lt;link rel=\"stylesheet\" href=\"/css/theme.css\"&gt;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Fayllar\u0131 birl\u0259\u015fdir\u0259r\u0259k HTTP sor\u011fular\u0131n\u0131 azald\u0131n.</p> <pre><code>&lt;link rel=\"stylesheet\" href=\"/css/styles.bundle.css\"&gt;\n</code></pre>"},{"location":"dotnet/unit-testing-mocking/","title":"Unit Testinq v\u0259 Mockinq","text":"<p>Unit testinq v\u0259 mockinq, d\u00fczg\u00fcn t\u0259tbiq edildikd\u0259 proqram layih\u0259l\u0259rinin etibarl\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131r. Lakin bu al\u0259tl\u0259rin yanl\u0131\u015f istifad\u0259si h\u0259m test prosesl\u0259rini m\u00fcr\u0259kk\u0259bl\u0259\u015fdirir, h\u0259m d\u0259 kodun keyfiyy\u0259tin\u0259 m\u0259nfi t\u0259sir g\u00f6st\u0259rir. Burada tez-tez edil\u0259n s\u0259hvl\u0259r v\u0259 d\u00fczg\u00fcn istifad\u0259 n\u00fcmun\u0259l\u0259ri g\u00f6st\u0259rilib.</p>"},{"location":"dotnet/unit-testing-mocking/#1-tk-davrans-test-etmk","title":"1. T\u0259k Davran\u0131\u015f\u0131 Test Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Bir testin bird\u0259n \u00e7ox davran\u0131\u015f\u0131 yoxlama\u011fa \u00e7al\u0131\u015fmas\u0131, testl\u0259rin m\u0259qs\u0259dini m\u00fcr\u0259kk\u0259bl\u0259\u015fdirir.</p> <pre><code>[Fact]\npublic void AddAndSubtract_ShouldReturnCorrectResults()\n{\n    var calculator = new Calculator();\n    var addResult = calculator.Add(2, 3);\n    var subtractResult = calculator.Subtract(5, 3);\n\n    Assert.Equal(5, addResult);\n    Assert.Equal(2, subtractResult);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: H\u0259r davran\u0131\u015f\u0131 ayr\u0131 bir testd\u0259 yoxlay\u0131n.</p> <pre><code>[Fact]\npublic void Add_ShouldReturnSum()\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(2, 3);\n    Assert.Equal(5, result);\n}\n\n[Fact]\npublic void Subtract_ShouldReturnDifference()\n{\n    var calculator = new Calculator();\n    var result = calculator.Subtract(5, 3);\n    Assert.Equal(2, result);\n}\n</code></pre>"},{"location":"dotnet/unit-testing-mocking/#2-mocklama-il-hddindn-artq-murkkblik","title":"2. Mocklama il\u0259 H\u0259ddind\u0259n Art\u0131q M\u00fcr\u0259kk\u0259blik","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Mocklama, yaln\u0131z g\u0259r\u0259ksiz bir abstraksiya qat\u0131 \u0259lav\u0259 edirs\u0259 faydas\u0131zd\u0131r.</p> <pre><code>var mockCalculator = new Mock&lt;ICalculator&gt;();\nmockCalculator.Setup(calc =&gt; calc.Add(2, 3)).Returns(5);\n\nvar result = mockCalculator.Object.Add(2, 3);\n\nAssert.Equal(5, result); // Mock burada g\u0259r\u0259ksizdir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Mocklama, yaln\u0131z as\u0131l\u0131l\u0131qlar\u0131 t\u0259crid etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunmal\u0131d\u0131r.</p> <pre><code>var mockWeatherService = new Mock&lt;IWeatherService&gt;();\nmockWeatherService.Setup(service =&gt; service.GetWeather()).Returns(\"G\u00fcn\u0259\u015fli\");\n\nvar reporter = new WeatherReporter(mockWeatherService.Object);\nvar result = reporter.Report();\n\nAssert.Equal(\"G\u00fcn\u0259\u015fli\", result);\n</code></pre>"},{"location":"dotnet/unit-testing-mocking/#3-testlr-arasnda-asllq-yaratmaq","title":"3. Testl\u0259r Aras\u0131nda As\u0131l\u0131l\u0131q Yaratmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Bir test, ba\u015fqa bir testin n\u0259tic\u0259l\u0259rind\u0259n as\u0131l\u0131 olmamal\u0131d\u0131r.</p> <pre><code>[Fact]\npublic void Test_AddAndSubtract()\n{\n    var calculator = new Calculator();\n    var sum = calculator.Add(2, 3);\n    var difference = calculator.Subtract(sum, 2); // Bu test, Add metoduna as\u0131l\u0131d\u0131r.\n\n    Assert.Equal(3, difference);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Testl\u0259r m\u00fcst\u0259qil olmal\u0131 v\u0259 bir-birind\u0259n t\u0259sirl\u0259nm\u0259m\u0259lidir.</p> <pre><code>[Fact]\npublic void Add_ShouldReturnSum()\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(2, 3);\n    Assert.Equal(5, result);\n}\n\n[Fact]\npublic void Subtract_ShouldReturnDifference()\n{\n    var calculator = new Calculator();\n    var result = calculator.Subtract(5, 2);\n    Assert.Equal(3, result);\n}\n</code></pre>"},{"location":"dotnet/unit-testing-mocking/#4-assert-istifadsini-nzr-almamaq","title":"4. Assert \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Test n\u0259tic\u0259l\u0259rini sad\u0259c\u0259 konsola yazd\u0131rmaq yet\u0259rsizdir.</p> <pre><code>[Fact]\npublic void Add_ShouldPrintResult()\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(2, 3);\n    Console.WriteLine(result); // Konsol \u00e7\u0131x\u0131\u015f\u0131 kifay\u0259t deyil.\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>Assert</code> ifad\u0259l\u0259ri il\u0259 n\u0259tic\u0259l\u0259ri yoxlay\u0131n.</p> <pre><code>[Fact]\npublic void Add_ShouldReturnSum()\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(2, 3);\n    Assert.Equal(5, result);\n}\n</code></pre>"},{"location":"dotnet/unit-testing-mocking/#5-parametrli-testlr-istifad-etmmk","title":"5. Parametrli Testl\u0259r \u0130stifad\u0259 Etm\u0259m\u0259k","text":"<p>\ud83d\udd34 Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r veril\u0259n d\u0259sti \u00fc\u00e7\u00fcn ayr\u0131 test yazmaq g\u0259r\u0259ksiz t\u0259krara s\u0259b\u0259b olur.</p> <pre><code>[Fact]\npublic void Add_ShouldReturn5()\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(2, 3);\n    Assert.Equal(5, result);\n}\n\n[Fact]\npublic void Add_ShouldReturnNegative2()\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(-1, -1);\n    Assert.Equal(-2, result);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Parametrli testl\u0259rl\u0259 t\u0259krar\u0131 azald\u0131n.</p> <pre><code>[Theory]\n[InlineData(2, 3, 5)]\n[InlineData(-1, -1, -2)]\n[InlineData(0, 0, 0)]\npublic void Add_ShouldReturnSum(int a, int b, int expected)\n{\n    var calculator = new Calculator();\n    var result = calculator.Add(a, b);\n    Assert.Equal(expected, result);\n}\n</code></pre>"},{"location":"dotnet/unit-testing-mocking/#6-mock-obyektlri-yanls-konumlandrmaq","title":"6. Mock Obyektl\u0259ri Yanl\u0131\u015f Konumland\u0131rmaq","text":"<p>\ud83d\udd34 Yanl\u0131\u015f \u0130stifad\u0259: Mock obyektl\u0259rini metod s\u0259viyy\u0259sind\u0259 yaratmaq kod m\u00fcr\u0259kk\u0259bliyini art\u0131r\u0131r.</p> <pre><code>[Fact]\npublic void Report_ShouldReturnWeather()\n{\n    var mockWeatherService = new Mock&lt;IWeatherService&gt;(); // Mock burada yarad\u0131l\u0131b\n    mockWeatherService.Setup(service =&gt; service.GetWeather()).Returns(\"G\u00fcn\u0259\u015fli\");\n\n    var reporter = new WeatherReporter(mockWeatherService.Object);\n    var result = reporter.Report();\n\n    Assert.Equal(\"G\u00fcn\u0259\u015fli\", result);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Mock obyektl\u0259rini sinif s\u0259viyy\u0259sind\u0259 qurun.</p> <pre><code>public class WeatherReporterTests\n{\n    private readonly Mock&lt;IWeatherService&gt; _mockWeatherService;\n    private readonly WeatherReporter _reporter;\n\n    public WeatherReporterTests()\n    {\n        _mockWeatherService = new Mock&lt;IWeatherService&gt;();\n        _reporter = new WeatherReporter(_mockWeatherService.Object);\n    }\n\n    [Fact]\n    public void Report_ShouldReturnWeather()\n    {\n        _mockWeatherService.Setup(service =&gt; service.GetWeather()).Returns(\"G\u00fcn\u0259\u015fli\");\n        var result = _reporter.Report();\n        Assert.Equal(\"G\u00fcn\u0259\u015fli\", result);\n    }\n}\n</code></pre>"},{"location":"entity-framework/bulk-operations/","title":"Toplu \u018fm\u0259liyyatlar","text":"<p>Entity Framework Core, veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131 \u00fc\u00e7\u00fcn g\u00fccl\u00fc bir vasit\u0259dir, lakin b\u00f6y\u00fck veril\u0259n toplular\u0131nda t\u0259k-t\u0259k \u0259m\u0259liyyat etm\u0259k yava\u015f v\u0259 baha ba\u015fa g\u0259l\u0259 bil\u0259r. Toplu \u0259m\u0259liyyatlar (Bulk Operations) performans\u0131 art\u0131rmaq v\u0259 \u0259m\u0259liyyat m\u00fcdd\u0259tl\u0259rini azaltmaq \u00fc\u00e7\u00fcn t\u0259sirli bir \u00fcsuldur. Lakin, yanl\u0131\u015f istifad\u0259si veril\u0259nl\u0259r uy\u011funsuzlu\u011funa v\u0259 performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"entity-framework/bulk-operations/#1-tk-tk-mliyyat-edrk-performans-asag-salmaq","title":"1. T\u0259k-T\u0259k \u018fm\u0259liyyat Ed\u0259r\u0259k Performans\u0131 A\u015fa\u011f\u0131 Salmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck veril\u0259n k\u00fcm\u0259l\u0259rind\u0259 t\u0259k-t\u0259k \u0259m\u0259liyyat etm\u0259k.</p> <pre><code>foreach (var user in users)\n{\n    user.IsActive = true;\n    context.Users.Update(user);\n    context.SaveChanges();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Toplu update il\u0259 b\u00fct\u00fcn veril\u0259nl\u0259ri t\u0259k bir \u0259m\u0259liyyatda g\u00fcnc\u0259ll\u0259yin.</p> <pre><code>context.Users\n    .Where(u =&gt; !u.IsActive)\n    .ExecuteUpdate(u =&gt; u.SetProperty(x =&gt; x.IsActive, true));\n</code></pre>"},{"location":"entity-framework/bulk-operations/#2-grksiz-verilnlr-bazas-triggerlrl-calsdrmaq","title":"2. G\u0259r\u0259ksiz Veril\u0259nl\u0259r Bazas\u0131 Triggerl\u0259rl\u0259 \u00c7al\u0131\u015fd\u0131rmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Toplu \u0259m\u0259liyyatlar\u0131 triggerl\u0259rl\u0259 birl\u0259\u015fdirm\u0259k.</p> <pre><code>foreach (var product in products)\n{\n    product.StockCount += 10;\n    context.Products.Update(product);\n    context.SaveChanges(); // H\u0259r \u0259m\u0259liyyatda trigger \u00e7al\u0131\u015f\u0131r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Toplu \u0259m\u0259liyyatlar triggerl\u0259rl\u0259rd\u0259n as\u0131l\u0131 olmayaraq yerin\u0259 yetirilm\u0259lidir.</p> <pre><code>context.Products\n    .Where(p =&gt; p.StockCount &gt; 0)\n    .ExecuteUpdate(p =&gt; p.SetProperty(x =&gt; x.StockCount, x =&gt; x.StockCount + 10));\n</code></pre>"},{"location":"entity-framework/bulk-operations/#3-grksiz-boyuk-veriln-dstlrini-yaddasa-yuklmk","title":"3. G\u0259r\u0259ksiz B\u00f6y\u00fck Veril\u0259n D\u0259stl\u0259rini Yadda\u015fa Y\u00fckl\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Veril\u0259nl\u0259ri \u0259vv\u0259lc\u0259 yadda\u015fa y\u00fckl\u0259yib sonra g\u00fcnc\u0259ll\u0259m\u0259k.</p> <pre><code>var products = context.Products.ToList();\nforeach (var product in products)\n{\n    product.Price += 5;\n}\ncontext.SaveChanges();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yadda\u015f\u0131 s\u0259m\u0259r\u0259li istifad\u0259 ed\u0259r\u0259k birba\u015fa veril\u0259nl\u0259r bazas\u0131 \u00fcz\u0259rind\u0259 \u0259m\u0259liyyat apar\u0131n.</p> <pre><code>context.Products\n    .Where(p =&gt; p.Price &lt; 100)\n    .ExecuteUpdate(p =&gt; p.SetProperty(x =&gt; x.Price, x =&gt; x.Price + 5));\n</code></pre>"},{"location":"entity-framework/bulk-operations/#4-toplu-delete-mliyyatlarnda-yanls-filtrlm","title":"4. Toplu Delete \u018fm\u0259liyyatlar\u0131nda Yanl\u0131\u015f Filtrl\u0259m\u0259","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Yanl\u0131\u015f filtrl\u0259rl\u0259 g\u0259r\u0259ksiz veril\u0259nl\u0259ri silm\u0259k.</p> <pre><code>context.Products.RemoveRange(context.Products.Where(p =&gt; p.IsDiscontinued));\ncontext.SaveChanges();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Toplu delete il\u0259 birba\u015fa h\u0259d\u0259fl\u0259n\u0259n verini silin.</p> <pre><code>context.Products\n    .Where(p =&gt; p.IsDiscontinued)\n    .ExecuteDelete();\n</code></pre>"},{"location":"entity-framework/bulk-operations/#5-transaction-istifadsini-nzr-almamaq","title":"5. Transaction \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck \u0259m\u0259liyyatlar\u0131 transaction olmadan h\u0259yata ke\u00e7irm\u0259k.</p> <pre><code>context.Products\n    .Where(p =&gt; p.CategoryId == 1)\n    .ExecuteDelete();\ncontext.Users\n    .Where(u =&gt; u.IsInactive)\n    .ExecuteUpdate(u =&gt; u.SetProperty(x =&gt; x.IsInactive, false));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00fct\u00fcn \u0259m\u0259liyyatlar\u0131 bir transaction i\u00e7ind\u0259 yerin\u0259 yetirin.</p> <pre><code>using var transaction = context.Database.BeginTransaction();\ncontext.Products\n    .Where(p =&gt; p.CategoryId == 1)\n    .ExecuteDelete();\ncontext.Users\n    .Where(u =&gt; u.IsInactive)\n    .ExecuteUpdate(u =&gt; u.SetProperty(x =&gt; x.IsInactive, false));\ntransaction.Commit();\n</code></pre>"},{"location":"entity-framework/bulk-operations/#6-performans-optimizasiyas-ucun-xarici-kitabxanalar-goz-ard-etmk","title":"6. Performans Optimizasiyas\u0131 \u00dc\u00e7\u00fcn Xarici Kitabxanalar\u0131 G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Performans \u00fc\u00e7\u00fcn yaln\u0131z Entity Framework metodlar\u0131na g\u00fcv\u0259nm\u0259k.</p> <pre><code>context.BulkInsert(data); // EF-in daxili metodlar\u0131\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans\u0131 art\u0131rmaq \u00fc\u00e7\u00fcn \u0259lav\u0259 kitabxanalardan yararlan\u0131n.</p> <pre><code>context.BulkInsert(data, options =&gt;\n{\n    options.BatchSize = 1000;\n    options.EnableStreaming = true;\n});\n</code></pre>"},{"location":"entity-framework/keyless-entities/","title":"Keyless Entitetl\u0259r","text":"<p>Entity Framework Core-da \u201cKeyless Entitetl\u0259r\u201d, ilkin a\u00e7ara (primary key) ehtiyac duymayan v\u0259 \u00fcmumiyy\u0259tl\u0259 yaln\u0131z oxumaq m\u0259qs\u0259dli istifad\u0259 olunan varl\u0131qlar\u0131 t\u0259msil edir. Bu x\u00fcsusiyy\u0259t, g\u00f6r\u00fcn\u00fc\u015fl\u0259r, ilkin a\u00e7ars\u0131z c\u0259dv\u0259ll\u0259r v\u0259 ya x\u00fcsusi SQL sor\u011fular\u0131n\u0131 x\u0259rit\u0259l\u0259m\u0259k kimi hallarda olduqca faydal\u0131d\u0131r. Lakin, yanl\u0131\u015f istifad\u0259si performans v\u0259 veril\u0259nl\u0259r uy\u011funsuzlu\u011fu probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"entity-framework/keyless-entities/#1-keyless-entitetlr-istifadsini-yanls-anlamaq","title":"1. Keyless Entitetl\u0259r \u0130stifad\u0259sini Yanl\u0131\u015f Anlamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Keyless entitetl\u0259ri d\u0259yi\u015fiklik izl\u0259m\u0259 (change tracking) \u00fc\u00e7\u00fcn istifad\u0259 etm\u0259k.</p> <pre><code>[Keyless]\npublic class Report\n{\n    public int Id { get; set; } // Yanl\u0131\u015f: Keyless entitetd\u0259 ilkin a\u00e7ar olmamal\u0131d\u0131r.\n    public string ReportName { get; set; }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Keyless entitetl\u0259r yaln\u0131z oxumaq m\u0259qs\u0259dli istifad\u0259 olunmal\u0131d\u0131r.</p> <pre><code>[Keyless]\npublic class Report\n{\n    public string ReportName { get; set; }\n    public DateTime GeneratedOn { get; set; }\n}\n</code></pre>"},{"location":"entity-framework/keyless-entities/#2-grksiz-dyisiklik-izlmsi-etmk","title":"2. G\u0259r\u0259ksiz D\u0259yi\u015fiklik \u0130zl\u0259m\u0259si Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Keyless entitetl\u0259rl\u0259 m\u0259lumat g\u00fcnc\u0259ll\u0259m\u0259y\u0259 \u00e7al\u0131\u015fmaq.</p> <pre><code>var report = new Report { ReportName = \"\u0130llik Hesabat\" };\ncontext.Reports.Add(report); // S\u0259hv: Keyless entitetl\u0259r \u0259lav\u0259 edil\u0259 bilm\u0259z\ncontext.SaveChanges();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Keyless entitetl\u0259r yaln\u0131z sor\u011fulama m\u0259qs\u0259di il\u0259 istifad\u0259 olunmal\u0131d\u0131r.</p> <pre><code>var reports = context.Reports\n    .Where(r =&gt; r.GeneratedOn &gt; DateTime.UtcNow.AddDays(-30))\n    .ToList();\n</code></pre>"},{"location":"entity-framework/keyless-entities/#3-keyless-entitetlri-defolt-skild-istifad-etmk","title":"3. Keyless Entitetl\u0259ri Defolt \u015e\u0259kild\u0259 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Keyless entitetl\u0259ri t\u0259yin ed\u0259rk\u0259n laz\u0131m olan konfiqurasiyalar\u0131 etm\u0259m\u0259k.</p> <pre><code>public class Report\n{\n    public string ReportName { get; set; }\n    public DateTime GeneratedOn { get; set; }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>[Keyless]</code> v\u0259 ya <code>.HasNoKey()</code> il\u0259 a\u00e7\u0131q \u015f\u0259kild\u0259 konfiqurasiya edilm\u0259lidir.</p> <pre><code>[Keyless]\npublic class Report\n{\n    public string ReportName { get; set; }\n    public DateTime GeneratedOn { get; set; }\n}\n</code></pre> <p>V\u0259 ya Fluent API istifad\u0259 ed\u0259r\u0259k:</p> <pre><code>modelBuilder.Entity&lt;Report&gt;().HasNoKey();\n</code></pre>"},{"location":"entity-framework/keyless-entities/#4-performans-optimizasiyasn-goz-ard-etmk","title":"4. Performans Optimizasiyas\u0131n\u0131 G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck veril\u0259n d\u0259stl\u0259rini sor\u011fulayark\u0259n Keyless entitetl\u0259r \u00fc\u00e7\u00fcn optimalla\u015fd\u0131r\u0131lmam\u0131\u015f sor\u011fular yazmaq.</p> <pre><code>var reports = context.Reports.ToList(); // B\u00fct\u00fcn veril\u0259n d\u0259stini y\u00fckl\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011fular\u0131 filtrl\u0259y\u0259r\u0259k optimalla\u015fd\u0131r\u0131n.</p> <pre><code>var recentReports = context.Reports\n    .Where(r =&gt; r.GeneratedOn &gt; DateTime.UtcNow.AddMonths(-1))\n    .ToList();\n</code></pre>"},{"location":"entity-framework/keyless-entities/#5-verilnlr-uygunlugunu-goz-ard-etmk","title":"5. Veril\u0259nl\u0259r Uy\u011funlu\u011funu G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Keyless entitetl\u0259ri \u0259laq\u0259li veril\u0259nl\u0259rl\u0259 s\u0259hv bir \u015f\u0259kild\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>public class OrderSummary\n{\n    public int OrderId { get; set; }\n    public decimal Total { get; set; }\n    public string CustomerName { get; set; }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Keyless entitetl\u0259rd\u0259ki veril\u0259nl\u0259r yaln\u0131z oxunaql\u0131 olmal\u0131d\u0131r.</p> <pre><code>[Keyless]\npublic class OrderSummary\n{\n    public decimal Total { get; set; }\n    public string CustomerName { get; set; }\n}\n</code></pre>"},{"location":"entity-framework/raw-sql-queries/","title":"Raw SQL Sor\u011fular\u0131","text":"<p>Entity Framework Core, veril\u0259nl\u0259r bazas\u0131 il\u0259 \u0259laq\u0259 qurmaq \u00fc\u00e7\u00fcn LINQ \u0259sasl\u0131 sor\u011fular t\u0259klif edir. Lakin, b\u0259zi hallarda Raw SQL sor\u011fular\u0131n\u0131 istifad\u0259 etm\u0259k laz\u0131m ola bil\u0259r. Raw SQL sor\u011fular\u0131, y\u00fcks\u0259k performans v\u0259 elastiklik t\u0259min ets\u0259 d\u0259, yanl\u0131\u015f istifad\u0259l\u0259ri t\u0259hl\u00fck\u0259sizlik bo\u015fluqlar\u0131na v\u0259 performans probleml\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"entity-framework/raw-sql-queries/#1-sql-injection-riski","title":"1. SQL Injection Riski","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Dinamik olaraq yarad\u0131lan SQL ifad\u0259l\u0259ri.</p> <pre><code>var username = \"admin\";\nvar password = \"password123\";\nvar query = $\"SELECT * FROM Users WHERE Username = '{username}' AND Password = '{password}'\";\nvar users = context.Users.FromSqlRaw(query).ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Parametrli sor\u011fular istifad\u0259 ed\u0259r\u0259k SQL Injection riskini \u00f6nl\u0259yin.</p> <pre><code>var username = \"admin\";\nvar password = \"password123\";\nvar users = context.Users\n    .FromSqlInterpolated($\"SELECT * FROM Users WHERE Username = {username} AND Password = {password}\")\n    .ToList();\n</code></pre>"},{"location":"entity-framework/raw-sql-queries/#2-performans-goz-ard-etmk","title":"2. Performans\u0131 G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: G\u0259r\u0259ksiz b\u00f6y\u00fck veril\u0259n d\u0259stl\u0259rini y\u00fckl\u0259m\u0259k.</p> <pre><code>var products = context.Products.FromSqlRaw(\"SELECT * FROM Products\").ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011funu filtrl\u0259y\u0259r\u0259k yaln\u0131z laz\u0131m olan veril\u0259nl\u0259ri y\u00fckl\u0259yin.</p> <pre><code>var products = context.Products\n    .FromSqlRaw(\"SELECT * FROM Products WHERE IsActive = 1\")\n    .ToList();\n</code></pre>"},{"location":"entity-framework/raw-sql-queries/#3-raw-sql-sorgularn-test-edil-biln-hala-gtirmmk","title":"3. Raw SQL Sor\u011fular\u0131n\u0131 Test Edil\u0259 Bil\u0259n Hala G\u0259tirm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Raw SQL sor\u011fular\u0131n\u0131 test edil\u0259 bil\u0259rliyini g\u00f6z ard\u0131 etm\u0259k.</p> <pre><code>var orders = context.Orders.FromSqlRaw(\"SELECT * FROM Orders WHERE OrderDate &gt; GETDATE()\").ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: SQL sor\u011fular\u0131n\u0131 metodlara da\u015f\u0131yaraq test edil\u0259 bil\u0259n hala g\u0259tirin.</p> <pre><code>public IEnumerable&lt;Order&gt; GetRecentOrders(DateTime sinceDate)\n{\n    return context.Orders\n        .FromSqlInterpolated($\"SELECT * FROM Orders WHERE OrderDate &gt; {sinceDate}\")\n        .ToList();\n}\n</code></pre>"},{"location":"entity-framework/raw-sql-queries/#4-guvnilir-mnblrdn-gln-sql-istifadsi","title":"4. G\u00fcv\u0259nilir M\u0259nb\u0259l\u0259rd\u0259n G\u0259l\u0259n SQL \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: SQL ifad\u0259l\u0259rini birba\u015fa kod i\u00e7in\u0259 g\u00f6mm\u0259k.</p> <pre><code>var results = context.Database.ExecuteSqlRaw(\"DELETE FROM Logs WHERE LogDate &lt; '2023-01-01'\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: SQL ifad\u0259l\u0259rini m\u0259rk\u0259zi bir yer\u0259 da\u015f\u0131y\u0131n v\u0259 ya stored procedure istifad\u0259 edin.</p> <pre><code>var results = context.Database.ExecuteSqlRaw(\"EXEC ClearOldLogs @Date = {0}\", new[] { \"2023-01-01\" });\n</code></pre>"},{"location":"entity-framework/raw-sql-queries/#5-sql-shvlrini-goz-ard-etmk","title":"5. SQL S\u0259hvl\u0259rini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: S\u0259hv yoxlamas\u0131 etm\u0259m\u0259k.</p> <pre><code>var data = context.Users.FromSqlRaw(\"SELECT * FROM NonExistentTable\").ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: SQL sor\u011fular\u0131n\u0131 s\u0259hv yaxalama mexanizml\u0259ri il\u0259 birlikd\u0259 istifad\u0259 edin.</p> <pre><code>try\n{\n    var data = context.Users.FromSqlRaw(\"SELECT * FROM NonExistentTable\").ToList();\n}\ncatch (Exception ex)\n{\n    Console.WriteLine($\"SQL S\u0259hvi: {ex.Message}\");\n}\n</code></pre>"},{"location":"entity-framework/raw-sql-queries/#6-raw-sql-v-entity-framework-xususiyytlrini-birlikd-istifad-ed-bilmmk","title":"6. Raw SQL v\u0259 Entity Framework X\u00fcsusiyy\u0259tl\u0259rini Birlikd\u0259 \u0130stifad\u0259 Ed\u0259 Bilm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Raw SQL sor\u011fular\u0131 il\u0259 Entity Framework x\u00fcsusiyy\u0259tl\u0259rini inteqrasiya etm\u0259m\u0259k.</p> <pre><code>var orders = context.Orders.FromSqlRaw(\"SELECT * FROM Orders\").ToList();\nforeach (var order in orders)\n{\n    context.Entry(order).Collection(o =&gt; o.OrderItems).Load();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Raw SQL sor\u011fular\u0131 il\u0259 Entity Framework \u0259laq\u0259l\u0259rini birl\u0259\u015fdirin.</p> <pre><code>var orders = context.Orders\n    .FromSqlRaw(\"SELECT * FROM Orders\")\n    .Include(o =&gt; o.OrderItems)\n    .ToList();\n</code></pre>"},{"location":"entity-framework/shadow-properties/","title":"Shadow Properties","text":"<p>Entity Framework Core-da \u201cShadow Properties\u201d, bir entity \u00fcz\u0259rind\u0259 t\u0259yin olunmayan, lakin veril\u0259nl\u0259r bazas\u0131nda saxlan\u0131lan x\u00fcsusiyy\u0259tl\u0259rdir. Bu x\u00fcsusiyy\u0259tl\u0259r, x\u00fcsusil\u0259 geni\u015fl\u0259ndiril\u0259 bilm\u0259 qabiliyy\u0259ti v\u0259 elastiklik t\u0259min ets\u0259 d\u0259, yanl\u0131\u015f istifad\u0259l\u0259ri veril\u0259nl\u0259r uy\u011funsuzlu\u011funa v\u0259 kod m\u00fcr\u0259kk\u0259bliyin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"entity-framework/shadow-properties/#1-shadow-propertiesni-grksiz-istifad-etmk","title":"1. Shadow Propertiesni G\u0259r\u0259ksiz \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: entity sinifind\u0259 t\u0259yin oluna bil\u0259c\u0259k bir x\u00fcsusiyy\u0259ti k\u00f6lg\u0259 x\u00fcsusiyy\u0259ti olaraq istifad\u0259 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Product&gt;()\n    .Property&lt;DateTime&gt;(\"LastUpdated\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: G\u0259r\u0259ksiz shadow properties istifad\u0259sind\u0259n qa\u00e7\u0131n\u0131n v\u0259 entity sinifin\u0259 \u0259lav\u0259 edin.</p> <pre><code>public class Product\n{\n    public int Id { get; set; }\n    public DateTime LastUpdated { get; set; }\n}\n</code></pre>"},{"location":"entity-framework/shadow-properties/#2-shadow-propertiesnin-dyrlrini-yanls-idar-etmk","title":"2. Shadow Propertiesnin D\u0259y\u0259rl\u0259rini Yanl\u0131\u015f \u0130dar\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Shadow properties d\u0259y\u0259rini yoxlamadan istifad\u0259 etm\u0259k.</p> <pre><code>var lastUpdated = context.Entry(product).Property(\"LastUpdated\").CurrentValue;\nConsole.WriteLine(lastUpdated);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Shadow properties d\u0259y\u0259rl\u0259rini t\u0259hl\u00fck\u0259siz bir \u015f\u0259kild\u0259 idar\u0259 edin.</p> <pre><code>var lastUpdatedProperty = context.Entry(product).Property(\"LastUpdated\");\nif (lastUpdatedProperty != null)\n{\n    Console.WriteLine(lastUpdatedProperty.CurrentValue);\n}\nelse\n{\n    Console.WriteLine(\"LastUpdated x\u00fcsusiyy\u0259ti m\u00f6vcud deyil.\");\n}\n</code></pre>"},{"location":"entity-framework/shadow-properties/#3-verilnlr-uygunlugunu-goz-ard-etmk","title":"3. Veril\u0259nl\u0259r Uy\u011funlu\u011funu G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Shadow properties d\u0259y\u0259rl\u0259rini g\u00fcnc\u0259ll\u0259m\u0259d\u0259n buraxmaq.</p> <pre><code>var product = context.Products.Find(1);\ncontext.Entry(product).Property(\"LastUpdated\").CurrentValue = null; // D\u0259y\u0259r tutars\u0131zl\u0131\u011f\u0131 yarad\u0131r\ncontext.SaveChanges();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Shadow properties d\u0259y\u0259rl\u0259rini h\u0259r \u0259m\u0259liyyatda uy\u011fun \u015f\u0259kild\u0259 g\u00fcnc\u0259ll\u0259yin.</p> <pre><code>var product = context.Products.Find(1);\ncontext.Entry(product).Property(\"LastUpdated\").CurrentValue = DateTime.UtcNow;\ncontext.SaveChanges();\n</code></pre>"},{"location":"entity-framework/shadow-properties/#4-shadow-propertiesni-shv-ayrd-etm-debug-prosesind-goz-ard-etmk","title":"4. Shadow Propertiesni S\u0259hv Ay\u0131rd Etm\u0259 (Debug) Prosesind\u0259 G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Shadow Propertiesnin s\u0259hv ay\u0131rd etm\u0259 zaman\u0131 g\u00f6r\u00fcn\u00fcrl\u00fcy\u00fcn\u00fc t\u0259min etm\u0259m\u0259k.</p> <pre><code>var product = context.Products.Find(1);\n// K\u00f6lg\u0259 x\u00fcsusiyy\u0259ti d\u0259y\u0259rl\u0259rini inc\u0259l\u0259m\u0259d\u0259n ke\u00e7m\u0259k\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: S\u0259hv ay\u0131rd etm\u0259 zaman\u0131 Shadow Propertiesnin d\u0259y\u0259rl\u0259rini yoxlay\u0131n.</p> <pre><code>var product = context.Products.Find(1);\nvar lastUpdated = context.Entry(product).Property(\"LastUpdated\").CurrentValue;\nConsole.WriteLine($\"LastUpdated: {lastUpdated}\");\n</code></pre>"},{"location":"entity-framework/shadow-properties/#5-shadow-properties-il-yanls-laqlr-qurmaq","title":"5. Shadow Properties il\u0259 Yanl\u0131\u015f \u018flaq\u0259l\u0259r Qurmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Shadow Propertiesni \u0259laq\u0259l\u0259rd\u0259 birba\u015fa istifad\u0259 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Order&gt;()\n    .HasOne&lt;Product&gt;()\n    .WithMany()\n    .HasForeignKey(\"ProductId\");\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: K\u00f6lg\u0259 x\u00fcsusiyy\u0259ti yerin\u0259 a\u00e7\u0131q \u015f\u0259kild\u0259 t\u0259yin olunmu\u015f \u0259laq\u0259l\u0259r istifad\u0259 edin.</p> <pre><code>public class Order\n{\n    public int Id { get; set; }\n    public int ProductId { get; set; }\n    public Product Product { get; set; }\n}\n</code></pre>"},{"location":"entity-framework/splited-query/","title":"B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu (Split Query)","text":"<p>Entity Framework Core-da B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu, m\u00fcr\u0259kk\u0259b sor\u011fular\u0131 bird\u0259n \u00e7ox SQL sor\u011fusuna b\u00f6l\u0259r\u0259k performans yax\u015f\u0131la\u015fd\u0131rmas\u0131 edir. Bu x\u00fcsusiyy\u0259t, x\u00fcsusil\u0259 b\u00f6y\u00fck veril\u0259n toplularinda veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131n\u0131 optimalla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn istifad\u0259 olunur. Lakin, yanl\u0131\u015f istifad\u0259si h\u0259m performans, h\u0259m d\u0259 veril\u0259nl\u0259r uy\u011funlu\u011fu probleml\u0259rin\u0259 yol a\u00e7a bil\u0259r.</p>"},{"location":"entity-framework/splited-query/#1-bolunmus-sorgunu-grksiz-istifad-etmk","title":"1. B\u00f6l\u00fcnm\u00fc\u015f Sor\u011funu G\u0259r\u0259ksiz \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011funu ki\u00e7ik veril\u0259n d\u0259stl\u0259rind\u0259 istifad\u0259 etm\u0259k.</p> <pre><code>var users = context.Users\n    .Include(u =&gt; u.Orders)\n    .AsSplitQuery()\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011funu yaln\u0131z b\u00f6y\u00fck veril\u0259n toplusu \u00fc\u00e7\u00fcn istifad\u0259 edin.</p> <pre><code>var users = context.Users\n    .Include(u =&gt; u.Orders)\n    .AsSplitQuery()\n    .Where(u =&gt; u.IsActive)\n    .ToList();\n</code></pre>"},{"location":"entity-framework/splited-query/#2-performans-ustunluklrini-goz-ard-etmk","title":"2. Performans \u00dcst\u00fcnl\u00fckl\u0259rini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu istifad\u0259 etm\u0259d\u0259n b\u00f6y\u00fck veril\u0259n d\u0259stl\u0259rini t\u0259k bir sor\u011fuda y\u00fckl\u0259m\u0259k.</p> <pre><code>var orders = context.Orders\n    .Include(o =&gt; o.Customer)\n    .Include(o =&gt; o.Products)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6y\u00fck veril\u0259n d\u0259stl\u0259rini B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu il\u0259 b\u00f6l\u0259r\u0259k i\u015fl\u0259yin.</p> <pre><code>var orders = context.Orders\n    .Include(o =&gt; o.Customer)\n    .Include(o =&gt; o.Products)\n    .AsSplitQuery()\n    .ToList();\n</code></pre>"},{"location":"entity-framework/splited-query/#3-bolunmus-sorgu-v-izlm-dyisikliklrini-yanls-idar-etmk","title":"3. B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu v\u0259 \u0130zl\u0259m\u0259 D\u0259yi\u015fiklikl\u0259rini Yanl\u0131\u015f \u0130dar\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu istifad\u0259 ed\u0259rk\u0259n veril\u0259nl\u0259r bazas\u0131 d\u0259yi\u015fiklikl\u0259rini yanl\u0131\u015f anlamaq.</p> <pre><code>var customers = context.Customers\n    .Include(c =&gt; c.Orders)\n    .AsSplitQuery()\n    .ToList();\n\ncustomers[0].Name = \"G\u00fcnc\u0259ll\u0259nmi\u015f Ad\";\ncontext.SaveChanges(); // G\u00f6zl\u0259nilm\u0259y\u0259n n\u0259tic\u0259l\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011funun yaln\u0131z oxumaq \u0259m\u0259liyyatlar\u0131 \u00fc\u00e7\u00fcn daha uy\u011fun oldu\u011funu unutmay\u0131n.</p> <pre><code>var customers = context.Customers\n    .Include(c =&gt; c.Orders)\n    .AsSplitQuery()\n    .ToList();\n\n// D\u0259yi\u015fiklik etm\u0259k yerin\u0259 yeni bir \u0259m\u0259liyyat ba\u015flad\u0131n.\nvar customerToUpdate = customers.First();\ncustomerToUpdate.Name = \"G\u00fcnc\u0259ll\u0259nmi\u015f Ad\";\ncontext.Update(customerToUpdate);\ncontext.SaveChanges();\n</code></pre>"},{"location":"entity-framework/splited-query/#4-bolunmus-sorgunu-butun-sorgular-ucun-defolt-etmk","title":"4. B\u00f6l\u00fcnm\u00fc\u015f Sor\u011funu B\u00fct\u00fcn Sor\u011fular \u00dc\u00e7\u00fcn Defolt Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn sor\u011fularda B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu istifad\u0259 ed\u0259r\u0259k g\u0259r\u0259ksiz sor\u011fular yaratmaq.</p> <pre><code>optionsBuilder.UseSqlServer(connectionString, b =&gt; b.UseQuerySplittingBehavior(QuerySplittingBehavior.SplitQuery));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011funu yaln\u0131z m\u00fc\u0259yy\u0259n sor\u011fular \u00fc\u00e7\u00fcn istifad\u0259 edin.</p> <pre><code>var data = context.Data\n    .Include(d =&gt; d.RelatedData)\n    .AsSplitQuery()\n    .ToList();\n</code></pre>"},{"location":"entity-framework/splited-query/#5-verilnlr-uygunlugunu-goz-ard-etmk","title":"5. Veril\u0259nl\u0259r Uy\u011funlu\u011funu G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu il\u0259 veril\u0259nl\u0259r uy\u011funlu\u011fu probleml\u0259rin\u0259 s\u0259b\u0259b olmaq.</p> <pre><code>var orders = context.Orders\n    .Include(o =&gt; o.Products)\n    .AsSplitQuery()\n    .ToList();\n\n// Dig\u0259r \u0259m\u0259liyyatlar zaman\u0131 veril\u0259n d\u0259yi\u015f\u0259 bil\u0259r.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Veril\u0259nl\u0259r uy\u011funlu\u011fu kritikdirs\u0259, B\u00f6l\u00fcnm\u00fc\u015f Sor\u011fu yerin\u0259 t\u0259k sor\u011fu istifad\u0259 edin.</p> <pre><code>var orders = context.Orders\n    .Include(o =&gt; o.Products)\n    .ToList();\n</code></pre>"},{"location":"entity-framework/tag-with/","title":"TagWith","text":"<p>Entity Framework Core-da <code>TagWith</code>, SQL sor\u011fular\u0131na \u015f\u0259rhl\u0259r \u0259lav\u0259 etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunan bir x\u00fcsusiyy\u0259tdir. Bu \u015f\u0259rhl\u0259r, sor\u011fu performans\u0131 v\u0259 s\u0259hv ay\u0131rd etm\u0259 prosesl\u0259rind\u0259 \u0259h\u0259miyy\u0259tli bir k\u00f6m\u0259k\u00e7idir. Lakin, yanl\u0131\u015f istifad\u0259si sor\u011fu m\u00fcr\u0259kk\u0259bliyini art\u0131ra v\u0259 g\u0259r\u0259ksiz resurs istehlak\u0131na s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"entity-framework/tag-with/#1-tagwithi-grksiz-istifad-etmk","title":"1. TagWith\u2019i G\u0259r\u0259ksiz \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: H\u0259r sor\u011fuya g\u0259r\u0259ksiz izahatlar \u0259lav\u0259 etm\u0259k.</p> <pre><code>var users = context.Users\n    .TagWith(\"B\u00fct\u00fcn istifad\u0259\u00e7il\u0259ri \u00e7\u0259kir\")\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z performans analizi v\u0259 s\u0259hv ay\u0131rd etm\u0259 \u00fc\u00e7\u00fcn kritik sor\u011fulara izahat \u0259lav\u0259 edin.</p> <pre><code>var activeUsers = context.Users\n    .Where(u =&gt; u.IsActive)\n    .TagWith(\"Ayl\u0131q hesabat \u00fc\u00e7\u00fcn aktiv istifad\u0259\u00e7il\u0259ri \u00e7\u0259kir\")\n    .ToList();\n</code></pre>"},{"location":"entity-framework/tag-with/#2-izahatlar-yetrsiz-v-ya-mnasz-etmk","title":"2. \u0130zahatlar\u0131 Yet\u0259rsiz v\u0259 ya M\u0259nas\u0131z Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u0130zahatlar\u0131 q\u0131sa v\u0259 yet\u0259rsiz buraxmaq.</p> <pre><code>var orders = context.Orders\n    .TagWith(\"Sifari\u015f sor\u011fusu\")\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u0130zahatlara sor\u011funun m\u0259qs\u0259di v\u0259 ba\u011flam\u0131 haqq\u0131nda m\u0259lumat \u0259lav\u0259 edin.</p> <pre><code>var recentOrders = context.Orders\n    .Where(o =&gt; o.OrderDate &gt; DateTime.UtcNow.AddDays(-30))\n    .TagWith(\"Sat\u0131\u015f hesabat\u0131 \u00fc\u00e7\u00fcn son 30 g\u00fcnd\u0259 yerl\u0259\u015fdiril\u0259n sifari\u015fl\u0259ri \u00e7\u0259kir\")\n    .ToList();\n</code></pre>"},{"location":"entity-framework/tag-with/#3-birdn-cox-tagwith-istifad-etmk","title":"3. Bird\u0259n \u00c7ox TagWith \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Eyni sor\u011fuda bird\u0259n \u00e7ox <code>TagWith</code> \u00e7a\u011f\u0131r\u0131\u015f\u0131 etm\u0259k.</p> <pre><code>var data = context.Products\n    .TagWith(\"M\u0259hsullar\u0131 \u00e7\u0259kir\")\n    .TagWith(\"\u0130nventar hesabat\u0131 \u00fc\u00e7\u00fcn\")\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: T\u0259k bir <code>TagWith</code> \u00e7a\u011f\u0131r\u0131\u015f\u0131nda izahatlar\u0131 birl\u0259\u015fdirin.</p> <pre><code>var data = context.Products\n    .TagWith(\"\u0130nventar hesabat\u0131 \u00fc\u00e7\u00fcn m\u0259hsullar\u0131 \u00e7\u0259kir\")\n    .ToList();\n</code></pre>"},{"location":"entity-framework/tag-with/#4-shv-ayrd-etm-prosesini-goz-ard-etmk","title":"4. S\u0259hv Ay\u0131rd Etm\u0259 Prosesini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: S\u0259hv ay\u0131rd etm\u0259 zaman\u0131 <code>TagWith</code> x\u00fcsusiyy\u0259tini istifad\u0259 etm\u0259m\u0259k.</p> <pre><code>var query = context.Customers\n    .Where(c =&gt; c.IsActive)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: S\u0259hv ay\u0131rd etm\u0259 zaman\u0131 sor\u011fulara izahat \u0259lav\u0259 ed\u0259r\u0259k loglar\u0131 daha m\u0259nal\u0131 hala g\u0259tirin.</p> <pre><code>var query = context.Customers\n    .Where(c =&gt; c.IsActive)\n    .TagWith(\"S\u0259hv ay\u0131rd etm\u0259 \u00fc\u00e7\u00fcn aktiv m\u00fc\u015ft\u0259ril\u0259ri \u00e7\u0259kir\")\n    .ToList();\n</code></pre>"},{"location":"entity-framework/tag-with/#5-izahatlarda-dinamik-yaz-istifad-etmk","title":"5. \u0130zahatlarda Dinamik Yaz\u0131 \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u0130zahatlarda dinamik yaz\u0131 istifad\u0259 ed\u0259r\u0259k sor\u011fu performans\u0131n\u0131 m\u0259nfi t\u0259sir etm\u0259k.</p> <pre><code>var productId = 123;\nvar product = context.Products\n    .Where(p =&gt; p.Id == productId)\n    .TagWith($\"ID: {productId} olan m\u0259hsulu \u00e7\u0259kir\")\n    .FirstOrDefault();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Dinamik veril\u0259nl\u0259ri izahatlarda istifad\u0259 etm\u0259kd\u0259n qa\u00e7\u0131n\u0131n.</p> <pre><code>var product = context.Products\n    .Where(p =&gt; p.Id == 123)\n    .TagWith(\"ID il\u0259 x\u00fcsusi m\u0259hsulu \u00e7\u0259kir\")\n    .FirstOrDefault();\n</code></pre>"},{"location":"entity-framework/temporal-tables/","title":"M\u00fcv\u0259qq\u0259ti C\u0259dv\u0259ll\u0259r (Temporal Tables)","text":"<p>M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r, veril\u0259nl\u0259r bazas\u0131 c\u0259dv\u0259ll\u0259rind\u0259ki d\u0259yi\u015fiklikl\u0259rin tarixini tutaraq veril\u0259n versiyalama\u011f\u0131 m\u00fcmk\u00fcn edir. Bu x\u00fcsusiyy\u0259t, s\u0259hv ay\u0131rd etm\u0259, veril\u0259nl\u0259r analitikas\u0131 v\u0259 qanuni t\u0259l\u0259bl\u0259r \u00fc\u00e7\u00fcn olduqca faydal\u0131d\u0131r. Lakin, yanl\u0131\u015f istifad\u0259l\u0259ri saxlama v\u0259 performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"entity-framework/temporal-tables/#1-muvqqti-cdvllri-grksiz-istifad-etmk","title":"1. M\u00fcv\u0259qq\u0259ti C\u0259dv\u0259ll\u0259ri G\u0259r\u0259ksiz \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Ke\u00e7mi\u015f veril\u0259nl\u0259r\u0259 ehtiyac duymayan c\u0259dv\u0259ll\u0259r \u00fc\u00e7\u00fcn m\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r istifad\u0259 etm\u0259k.</p> <pre><code>CREATE TABLE Products\n(\n    ProductId INT PRIMARY KEY,\n    Name NVARCHAR(100),\n    Price DECIMAL(10, 2),\n    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START,\n    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END,\n    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)\n) WITH (SYSTEM_VERSIONING = ON);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sad\u0259c\u0259 ke\u00e7mi\u015f veril\u0259nl\u0259rin kritik oldu\u011fu c\u0259dv\u0259ll\u0259r \u00fc\u00e7\u00fcn m\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259ri aktivl\u0259\u015fdirin.</p> <pre><code>CREATE TABLE Orders\n(\n    OrderId INT PRIMARY KEY,\n    CustomerId INT,\n    OrderDate DATETIME2,\n    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START,\n    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END,\n    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)\n) WITH (SYSTEM_VERSIONING = ON);\n</code></pre>"},{"location":"entity-framework/temporal-tables/#2-muvqqti-cdvlin-mlumat-idaretmsini-goz-ard-etmk","title":"2. M\u00fcv\u0259qq\u0259ti C\u0259dv\u0259lin M\u0259lumat \u0130dar\u0259etm\u0259sini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r m\u0259lumatlar\u0131n\u0131 avtomatik olaraq t\u0259mizl\u0259m\u0259m\u0259k.</p> <pre><code>-- B\u00fct\u00fcn ke\u00e7mi\u015f veril\u0259nl\u0259r sonsuza q\u0259d\u0259r saxlan\u0131l\u0131r\nSELECT * FROM Orders FOR SYSTEM_TIME ALL;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Veril\u0259nl\u0259r bazas\u0131 h\u0259cmini idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn ke\u00e7mi\u015f veril\u0259nl\u0259ri t\u0259mizl\u0259yin.</p> <pre><code>ALTER DATABASE [YourDatabase] SET TEMPORAL_HISTORY_RETENTION_PERIOD = 6 MONTHS;\n</code></pre>"},{"location":"entity-framework/temporal-tables/#3-yanls-sorgu-yazm","title":"3. Yanl\u0131\u015f Sor\u011fu Yaz\u0131m\u0131","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r \u00fc\u00e7\u00fcn standart sor\u011fular\u0131 istifad\u0259 etm\u0259k.</p> <pre><code>SELECT * FROM Orders WHERE OrderDate = '2023-01-01';\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r sor\u011fular\u0131nda ke\u00e7mi\u015f veril\u0259nl\u0259ri a\u00e7\u0131q \u015f\u0259kild\u0259 g\u00f6st\u0259rin.</p> <pre><code>SELECT * FROM Orders\nFOR SYSTEM_TIME AS OF '2023-01-01T00:00:00';\n</code></pre>"},{"location":"entity-framework/temporal-tables/#4-muvqqti-cdvllrl-yanls-laqlr-qurmaq","title":"4. M\u00fcv\u0259qq\u0259ti C\u0259dv\u0259ll\u0259rl\u0259 Yanl\u0131\u015f \u018flaq\u0259l\u0259r Qurmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259l ehtiva ed\u0259n c\u0259dv\u0259ll\u0259ri yanl\u0131\u015f \u0259laq\u0259l\u0259rl\u0259 ba\u011flamaq.</p> <pre><code>CREATE TABLE OrderDetails\n(\n    OrderDetailId INT PRIMARY KEY,\n    OrderId INT,\n    ProductId INT\n);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018flaq\u0259l\u0259ri m\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r\u0259 uy\u011fun \u015f\u0259kild\u0259 dizayn edin.</p> <pre><code>CREATE TABLE OrderDetails\n(\n    OrderDetailId INT PRIMARY KEY,\n    OrderId INT,\n    ProductId INT,\n    SysStartTime DATETIME2 GENERATED ALWAYS AS ROW START,\n    SysEndTime DATETIME2 GENERATED ALWAYS AS ROW END,\n    PERIOD FOR SYSTEM_TIME (SysStartTime, SysEndTime)\n) WITH (SYSTEM_VERSIONING = ON);\n</code></pre>"},{"location":"entity-framework/temporal-tables/#5-shv-ayrd-etm-v-analiz-ucun-muvqqti-cdvllri-istifad-etmmk","title":"5. S\u0259hv Ay\u0131rd Etm\u0259 v\u0259 Analiz \u00dc\u00e7\u00fcn M\u00fcv\u0259qq\u0259ti C\u0259dv\u0259ll\u0259ri \u0130stifad\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259ri s\u0259hv ay\u0131rd etm\u0259 v\u0259 ya veril\u0259nl\u0259r analitikas\u0131 \u00fc\u00e7\u00fcn istifad\u0259 etm\u0259m\u0259k.</p> <pre><code>-- Ke\u00e7mi\u015f veril\u0259nl\u0259r sor\u011fulanm\u0131r\nSELECT * FROM Orders WHERE OrderId = 101;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259ri ke\u00e7mi\u015f veril\u0259nl\u0259ri analiz etm\u0259k \u00fc\u00e7\u00fcn aktiv istifad\u0259 edin.</p> <pre><code>SELECT * FROM Orders\nFOR SYSTEM_TIME BETWEEN '2023-01-01T00:00:00' AND '2023-01-31T23:59:59';\n</code></pre>"},{"location":"entity-framework/temporal-tables/#6-performans-v-saxlama-xrclrini-goz-ard-etmk","title":"6. Performans v\u0259 Saxlama X\u0259rcl\u0259rini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcv\u0259qq\u0259ti c\u0259dv\u0259ll\u0259r veril\u0259nl\u0259r bazas\u0131 h\u0259cmini idar\u0259 etm\u0259m\u0259k.</p> <pre><code>-- B\u00fct\u00fcn ke\u00e7mi\u015f veril\u0259nl\u0259r davaml\u0131 saxlan\u0131l\u0131r\nSELECT * FROM Orders FOR SYSTEM_TIME ALL;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans\u0131 optimalla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn indeksl\u0259r v\u0259 arxivl\u0259m\u0259 istifad\u0259 edin.</p> <pre><code>CREATE INDEX IX_Orders_SysStartTime ON Orders (SysStartTime);\n</code></pre>"},{"location":"entity-framework/value-conversions/","title":"D\u0259y\u0259r \u00c7evirm\u0259l\u0259ri (Value Conversions)","text":"<p>Entity Framework Core-da D\u0259y\u0259r \u00c7evirm\u0259l\u0259ri, bir entitet x\u00fcsusiyy\u0259tinin M\u0259lumatl\u0259nl\u0259r bazas\u0131nda f\u0259rqli bir formatda saxlanmas\u0131n\u0131 t\u0259min edir. Bu x\u00fcsusiyy\u0259t, x\u00fcsusi tipl\u0259ri d\u0259st\u0259kl\u0259m\u0259k v\u0259 elastiklik t\u0259min etm\u0259k \u00fc\u00e7\u00fcn olduqca faydal\u0131d\u0131r. Lakin, yanl\u0131\u015f istifad\u0259si m\u0259lumat itkil\u0259rin\u0259 v\u0259 performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"entity-framework/value-conversions/#1-grksiz-dyr-cevirici-istifadsi","title":"1. G\u0259r\u0259ksiz D\u0259y\u0259r \u00c7evirici \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sad\u0259 tipl\u0259r \u00fc\u00e7\u00fcn g\u0259r\u0259ksiz D\u0259y\u0259r \u00c7evirici t\u0259yin etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Product&gt;()\n    .Property(p =&gt; p.Price)\n    .HasConversion(\n        v =&gt; v.ToString(),\n        v =&gt; decimal.Parse(v));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: D\u0259y\u0259r \u00c7eviricini yaln\u0131z laz\u0131m olduqda t\u0259yin edin.</p> <pre><code>public class Product\n{\n    public decimal Price { get; set; }\n}\n</code></pre>"},{"location":"entity-framework/value-conversions/#2-mlumat-itkilrini-goz-ard-etmk","title":"2. M\u0259lumat \u0130tkil\u0259rini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7evirm\u0259 zaman\u0131 m\u0259lumat itkisini g\u00f6z ard\u0131 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Product&gt;()\n    .Property(p =&gt; p.Rating)\n    .HasConversion(\n        v =&gt; (int)v,  // M\u0259lumat itkisi riski\n        v =&gt; (double)v);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u00c7evirm\u0259nin m\u0259lumat b\u00fct\u00f6vl\u00fcy\u00fcn\u00fc qoruyacaq \u015f\u0259kild\u0259 edilm\u0259si.</p> <pre><code>modelBuilder.Entity&lt;Product&gt;()\n    .Property(p =&gt; p.Rating)\n    .HasConversion(\n        v =&gt; Math.Round(v, 2),  // Hassasl\u0131q qorunur\n        v =&gt; v);\n</code></pre>"},{"location":"entity-framework/value-conversions/#3-murkkb-cevirmlri-property-sviyysind-etmk","title":"3. M\u00fcr\u0259kk\u0259b \u00c7evirm\u0259l\u0259ri Property S\u0259viyy\u0259sind\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b \u00e7evirm\u0259l\u0259ri D\u0259y\u0259r \u00c7evirici i\u00e7ind\u0259 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;User&gt;()\n    .Property(u =&gt; u.Roles)\n    .HasConversion(\n        v =&gt; string.Join(\",\", v),  // M\u00fcr\u0259kk\u0259b \u00e7evirm\u0259\n        v =&gt; v.Split(','));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: M\u00fcr\u0259kk\u0259b \u00e7evirm\u0259l\u0259ri ayr\u0131 bir sinif v\u0259 ya metodla idar\u0259 etm\u0259k.</p> <pre><code>public class RoleConverter : ValueConverter&lt;List&lt;string&gt;, string&gt;\n{\n    public RoleConverter()\n        : base(\n            v =&gt; string.Join(\",\", v),\n            v =&gt; v.Split(',').ToList())\n    {\n    }\n}\n\nmodelBuilder.Entity&lt;User&gt;()\n    .Property(u =&gt; u.Roles)\n    .HasConversion(new RoleConverter());\n</code></pre>"},{"location":"entity-framework/value-conversions/#4-tarix-v-saat-cevirmlrind-yanls-format-istifadsi","title":"4. Tarix v\u0259 Saat \u00c7evirm\u0259l\u0259rind\u0259 Yanl\u0131\u015f Format \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Tarix v\u0259 saat \u00e7evirm\u0259l\u0259rind\u0259 standart format\u0131 istifad\u0259 etm\u0259m\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Order&gt;()\n    .Property(o =&gt; o.OrderDate)\n    .HasConversion(\n        v =&gt; v.ToString(),\n        v =&gt; DateTime.Parse(v)); // Format f\u0259rql\u0259ri problem yarada bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tarix v\u0259 saat \u00e7evirm\u0259l\u0259rind\u0259 <code>DateTimeOffset</code> istifad\u0259 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Order&gt;()\n    .Property(o =&gt; o.OrderDate)\n    .HasConversion(\n        v =&gt; v.ToString(\"o\"),\n        v =&gt; DateTimeOffset.Parse(v));\n</code></pre>"},{"location":"entity-framework/value-conversions/#5-performans-problemlrini-goz-ard-etmk","title":"5. Performans Probleml\u0259rini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck m\u0259lumat toplular\u0131nda performans probleml\u0259rini g\u00f6z ard\u0131 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Log&gt;()\n    .Property(l =&gt; l.Details)\n    .HasConversion(\n        v =&gt; JsonConvert.SerializeObject(v),\n        v =&gt; JsonConvert.DeserializeObject&lt;Dictionary&lt;string, string&gt;&gt;(v)); \n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Performans\u0131 optimalla\u015fd\u0131ran daha s\u00fcr\u0259tli \u00e7evirm\u0259l\u0259r istifad\u0259 etm\u0259k.</p> <pre><code>modelBuilder.Entity&lt;Log&gt;()\n    .Property(l =&gt; l.Details)\n    .HasConversion(\n        v =&gt; System.Text.Json.JsonSerializer.Serialize(v),\n        v =&gt; System.Text.Json.JsonSerializer.Deserialize&lt;Dictionary&lt;string, string&gt;&gt;(v));\n</code></pre>"},{"location":"entity-framework/value-conversions/#6-test-edil-bilm-qabiliyytini-goz-ard-etmk","title":"6. Test Edil\u0259 Bilm\u0259 Qabiliyy\u0259tini G\u00f6z Ard\u0131 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7evirm\u0259 m\u0259ntiqini test edil\u0259 bil\u0259n hala g\u0259tirm\u0259m\u0259k.</p> <pre><code>modelBuilder.Entity&lt;User&gt;()\n    .Property(u =&gt; u.Preferences)\n    .HasConversion(\n        v =&gt; string.Join(\";\", v),\n        v =&gt; v.Split(';').ToList());\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u00c7evirm\u0259 m\u0259ntiqini test edil\u0259 bil\u0259n hala g\u0259tirm\u0259k \u00fc\u00e7\u00fcn ayr\u0131 bir sinif istifad\u0259 etm\u0259k.</p> <pre><code>public class PreferencesConverter : ValueConverter&lt;List&lt;string&gt;, string&gt;\n{\n    public PreferencesConverter()\n        : base(\n            v =&gt; string.Join(\";\", v),\n            v =&gt; v.Split(';').ToList())\n    {\n    }\n}\n\nmodelBuilder.Entity&lt;User&gt;()\n    .Property(u =&gt; u.Preferences)\n    .HasConversion(new PreferencesConverter());\n</code></pre>"},{"location":"garbage-collector/memory-leak-detection/","title":"Garbage Collector: Yadda\u015f S\u0131zmas\u0131 A\u015fkarlanmas\u0131","text":"<p>Yadda\u015f s\u0131zmalar\u0131, bir t\u0259tbiqin g\u0259r\u0259yind\u0259n \u00e7ox yadda\u015f istehlak etm\u0259sin\u0259 v\u0259 zamanla performans d\u00fc\u015f\u00fc\u015f\u00fcn\u0259 s\u0259b\u0259b ola bil\u0259r. .NET-in Garbage Collector (GC) mexanizmi \u00fcmumiyy\u0259tl\u0259 yadda\u015f idar\u0259sini avtomatik olaraq edir, lakin yanl\u0131\u015f referans idar\u0259etm\u0259si v\u0259 ya m\u00fcr\u0259kk\u0259b obyekt \u0259laq\u0259l\u0259ri yadda\u015f s\u0131zmalar\u0131na yol a\u00e7a bil\u0259r.</p>"},{"location":"garbage-collector/memory-leak-detection/#1-yaddas-szmas-ndir","title":"1. Yadda\u015f S\u0131zmas\u0131 N\u0259dir?","text":"<p>Yadda\u015f s\u0131zmas\u0131, art\u0131q istifad\u0259 olunmayan, lakin Garbage Collector t\u0259r\u0259find\u0259n s\u0259rb\u0259st burax\u0131lmayan obyektl\u0259rin yadda\u015f istehlak etm\u0259y\u0259 davam etm\u0259si v\u0259ziyy\u0259tidir. Bu, \u00fcmumiyy\u0259tl\u0259 a\u015fa\u011f\u0131dak\u0131 s\u0259b\u0259bl\u0259rd\u0259n qaynaqlan\u0131r:</p> <ul> <li>Yanl\u0131\u015f Referans \u0130dar\u0259etm\u0259si: G\u0259r\u0259ksiz referanslar\u0131n tutulmas\u0131.</li> <li>Hadis\u0259 (Event) Abun\u0259likl\u0259ri: <code>event</code> abun\u0259likl\u0259rinin l\u0259\u011fv edilm\u0259m\u0259si.</li> <li>Statik Obyektl\u0259r: Statik sah\u0259l\u0259rd\u0259 g\u0259r\u0259ksiz veril\u0259n tutulmas\u0131.</li> </ul>"},{"location":"garbage-collector/memory-leak-detection/#2-yaddas-szmas-nec-askarlanr","title":"2. Yadda\u015f S\u0131zmas\u0131 Nec\u0259 A\u015fkarlan\u0131r?","text":"<p>.NET t\u0259tbiql\u0259rind\u0259 yadda\u015f s\u0131zmalar\u0131n\u0131 a\u015fkar etm\u0259k \u00fc\u00e7\u00fcn bu vasit\u0259l\u0259ri istifad\u0259 ed\u0259 bil\u0259rsiniz:</p>"},{"location":"garbage-collector/memory-leak-detection/#visual-studio-diagnostic-tools","title":"Visual Studio Diagnostic Tools","text":"<ul> <li>Memory Usage: T\u0259tbiqin yadda\u015f istifad\u0259sini izl\u0259yir.</li> <li>Heap Snapshots: Ani yadda\u015f v\u0259ziyy\u0259tl\u0259rini qar\u015f\u0131la\u015fd\u0131r\u0131r.</li> </ul>"},{"location":"garbage-collector/memory-leak-detection/#net-cli-tools","title":".NET CLI Tools","text":"<ul> <li>dotnet-dump: Yadda\u015f d\u00f6k\u00fcml\u0259ri yarad\u0131r v\u0259 analiz edir.</li> <li>dotnet-counters: Ger\u00e7\u0259k zamanl\u0131 yadda\u015f \u00f6l\u00e7\u00fcml\u0259ri t\u0259min edir.</li> </ul> <pre><code>dotnet-dump collect --process-id &lt;pid&gt;\ndotnet-counters monitor --counters Microsoft-Windows-DotNETRuntime:GC/Heap\n</code></pre>"},{"location":"garbage-collector/memory-leak-detection/#3-yaddas-szmas-sbblri-v-hllri","title":"3. Yadda\u015f S\u0131zmas\u0131 S\u0259b\u0259bl\u0259ri v\u0259 H\u0259ll\u0259ri","text":""},{"location":"garbage-collector/memory-leak-detection/#yanls-referans-idaretmsi","title":"Yanl\u0131\u015f Referans \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: G\u0259r\u0259ksiz referanslar\u0131 t\u0259mizl\u0259m\u0259m\u0259k.</p> <pre><code>static List&lt;byte[]&gt; cache = new();\n\nvoid AddToCache()\n{\n    var data = new byte[1024 * 1024];\n    cache.Add(data); // Referans burax\u0131lm\u0131r\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Referanslar\u0131 zaman\u0131nda s\u0259rb\u0259st buraxmaq.</p> <pre><code>static List&lt;byte[]&gt; cache = new();\n\nvoid ClearCache()\n{\n    cache.Clear(); // Referanslar s\u0259rb\u0259st burax\u0131l\u0131r\n}\n</code></pre>"},{"location":"garbage-collector/memory-leak-detection/#event-abunliklrini-idar-etmmk","title":"Event Abun\u0259likl\u0259rini \u0130dar\u0259 Etm\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Event\u2019l\u0259r\u0259 abun\u0259 olduqdan sonra l\u0259\u011fv etm\u0259m\u0259k.</p> <pre><code>button.Click += OnButtonClick; // Abun\u0259lik l\u0259\u011fv edilm\u0259z\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Event abun\u0259likl\u0259rini l\u0259\u011fv edin.</p> <pre><code>button.Click -= OnButtonClick; // Abun\u0259lik l\u0259\u011fv edilir\n</code></pre>"},{"location":"garbage-collector/memory-leak-detection/#statik-sahlrd-veri-tutmaq","title":"Statik Sah\u0259l\u0259rd\u0259 Veri Tutmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Statik sah\u0259l\u0259rd\u0259 b\u00f6y\u00fck obyektl\u0259ri g\u0259r\u0259ksiz tutmaq.</p> <pre><code>static List&lt;int&gt; staticData = new() { 1, 2, 3 };\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Statik sah\u0259l\u0259ri diqq\u0259tli idar\u0259 edin.</p> <pre><code>static WeakReference&lt;List&lt;int&gt;&gt; staticData = new(new List&lt;int&gt; { 1, 2, 3 });\n</code></pre>"},{"location":"garbage-collector/memory-leak-detection/#4-garbage-collector-diaqnostik-modu","title":"4. Garbage Collector Diaqnostik Modu","text":"<p>.NET 9 il\u0259 g\u0259l\u0259n diaqnostik vasit\u0259l\u0259r, Garbage Collector-nin yadda\u015f idar\u0259sini analiz etm\u0259yi asanla\u015fd\u0131r\u0131r.</p> <pre><code>&lt;configuration&gt;\n  &lt;runtime&gt;\n    &lt;GCHeapHardLimitPercent value=\"80\" /&gt;\n  &lt;/runtime&gt;\n&lt;/configuration&gt;\n</code></pre>"},{"location":"garbage-collector/memory-leak-detection/#5-profiling-v-izlm","title":"5. Profiling v\u0259 \u0130zl\u0259m\u0259","text":"<ul> <li>JetBrains dotMemory: D\u0259rin yadda\u015f analizi.</li> <li>Redgate ANTS Memory Profiler: Yadda\u015f s\u0131z\u0131nt\u0131lar\u0131n\u0131 a\u015fkar etmek i\u00e7in istifad\u0259 olunur.</li> </ul>"},{"location":"garbage-collector/new-features-v9/","title":"Garbage Collector: .NET 9-dak\u0131 Yeni X\u00fcsusiyy\u0259tl\u0259r","text":"<p>.NET 9, Garbage Collector (GC) \u00fcz\u0259rind\u0259 m\u00fcxt\u0259lif t\u0259kmill\u0259\u015fdirm\u0259l\u0259r v\u0259 yeni x\u00fcsusiyy\u0259tl\u0259r t\u0259qdim ed\u0259r\u0259k yadda\u015f idar\u0259etm\u0259 performans\u0131n\u0131 daha da inki\u015faf etdirmi\u015fdir. Bu x\u00fcsusiyy\u0259tl\u0259r, b\u00f6y\u00fck miqyasl\u0131 t\u0259tbiql\u0259rd\u0259 daha yax\u015f\u0131 s\u0259m\u0259r\u0259lilik v\u0259 daha a\u015fa\u011f\u0131 gecikm\u0259 m\u00fcdd\u0259tl\u0259ri t\u0259min etm\u0259yi h\u0259d\u0259fl\u0259yir.</p>"},{"location":"garbage-collector/new-features-v9/#1-dynamic-pgo-il-yaddas-idaretmsi","title":"1. Dynamic PGO il\u0259 Yadda\u015f \u0130dar\u0259etm\u0259si","text":"<p>Dynamic Profile-Guided Optimization (Dynamic PGO), GC-nin icra zaman\u0131 t\u0259tbiqinizin davran\u0131\u015f\u0131na uy\u011fun optimalla\u015fmas\u0131na imkan verir.</p> <p>\u2705 \u00dcst\u00fcnl\u00fckl\u0259ri: - Real vaxtda optimalla\u015fd\u0131rma. - Daha yax\u015f\u0131 yadda\u015f ay\u0131rmas\u0131. - Performans\u0131n artmas\u0131.</p> <pre><code>// Dynamic PGO-nun avtomatik aktiv oldu\u011fu bir t\u0259tbiq n\u00fcmun\u0259si\nvoid PerformTask()\n{\n    var data = new List&lt;int&gt;();\n    for (int i = 0; i &lt; 1000; i++)\n    {\n        data.Add(i);\n    }\n    // GC daha s\u0259m\u0259r\u0259li ay\u0131rma v\u0259 toplanma h\u0259yata ke\u00e7irir.\n}\n</code></pre>"},{"location":"garbage-collector/new-features-v9/#2-loh-large-object-heap-sxlasdrma","title":"2. LOH (Large Object Heap) S\u0131xla\u015fd\u0131rma","text":"<p>.NET 9, Large Object Heap (LOH) \u00fc\u00e7\u00fcn s\u0131xla\u015fd\u0131rma funksionall\u0131\u011f\u0131n\u0131 \u0259lav\u0259 ed\u0259r\u0259k b\u00f6y\u00fck obyektl\u0259rin daha effektiv idar\u0259 olunmas\u0131n\u0131 t\u0259min edir.</p> <p>\u274c \u018fvv\u0259lki Davran\u0131\u015f: LOH \u00fcz\u0259rind\u0259 b\u00f6y\u00fck obyektl\u0259r s\u0131xla\u015fd\u0131r\u0131lmadan saxlan\u0131l\u0131rd\u0131, bu is\u0259 yadda\u015f\u0131n par\u00e7alanmas\u0131na s\u0259b\u0259b olurdu.</p> <p>\u2705 Yeni X\u00fcsusiyy\u0259t: LOH s\u0131xla\u015fd\u0131rmas\u0131, yadda\u015f\u0131n par\u00e7alanmas\u0131n\u0131 azald\u0131r.</p> <pre><code>&lt;configuration&gt;\n  &lt;runtime&gt;\n    &lt;GCLOHCompact enabled=\"true\" /&gt;\n  &lt;/runtime&gt;\n&lt;/configuration&gt;\n</code></pre>"},{"location":"garbage-collector/new-features-v9/#3-gc-nin-daha-yaxs-thread-idaretmsi","title":"3. GC-nin Daha Yax\u015f\u0131 Thread \u0130dar\u0259etm\u0259si","text":"<p>.NET 9, Garbage Collector-\u0131n thread idar\u0259etm\u0259 alqoritml\u0259rind\u0259 t\u0259kmill\u0259\u015fdirm\u0259l\u0259r etmi\u015fdir. Bu yenilikl\u0259r, x\u00fcsusil\u0259 \u00e7ox i\u015f par\u00e7ac\u0131\u011f\u0131 istifad\u0259 ed\u0259n server t\u0259tbiql\u0259rind\u0259 daha a\u015fa\u011f\u0131 gecikm\u0259 t\u0259min edir.</p> <pre><code>&lt;configuration&gt;\n  &lt;runtime&gt;\n    &lt;gcServer enabled=\"true\" /&gt;\n  &lt;/runtime&gt;\n&lt;/configuration&gt;\n</code></pre>"},{"location":"garbage-collector/new-features-v9/#4-regional-yaddas-idaretmsi-regional-gc","title":"4. Regional Yadda\u015f \u0130dar\u0259etm\u0259si (Regional GC)","text":"<p>.NET 9, GC-nin yadda\u015f idar\u0259etm\u0259sini daha regional hala g\u0259tir\u0259r\u0259k yadda\u015f ay\u0131rma prosesini s\u00fcr\u0259tl\u0259ndirir v\u0259 gecikm\u0259 m\u00fcdd\u0259tini azald\u0131r.</p> <p>\u2705 \u00dcst\u00fcnl\u00fckl\u0259ri: - Daha ki\u00e7ik yadda\u015f bloklar\u0131 \u00fcz\u0259rind\u0259 i\u015fl\u0259m\u0259. - Yadda\u015f ay\u0131rma vaxt\u0131n\u0131n azald\u0131lmas\u0131.</p>"},{"location":"garbage-collector/new-features-v9/#5-daha-yaxs-diaqnostika-v-izlm-altlri","title":"5. Daha Yax\u015f\u0131 Diaqnostika v\u0259 \u0130zl\u0259m\u0259 Al\u0259tl\u0259ri","text":"<p>.NET 9, Garbage Collector performans\u0131n\u0131 izl\u0259m\u0259k \u00fc\u00e7\u00fcn t\u0259kmill\u0259\u015fdirilmi\u015f diaqnostika al\u0259tl\u0259ri t\u0259qdim edir. Bu al\u0259tl\u0259r vasit\u0259sil\u0259 GC-nin nec\u0259 i\u015fl\u0259diyini daha detall\u0131 \u015f\u0259kild\u0259 anlaya bil\u0259rsiniz.</p> <pre><code>dotnet-counters monitor --process-id &lt;pid&gt; --counters Microsoft-Windows-DotNETRuntime:GC/Heap\n</code></pre>"},{"location":"garbage-collector/new-features-v9/#6-gc-performans-modu-secimlri","title":"6. GC Performans Modu Se\u00e7iml\u0259ri","text":"<p>.NET 9, t\u0259tbiqin ehtiyaclar\u0131na uy\u011fun f\u0259rqli GC modlar\u0131 t\u0259klif edir:</p> <ul> <li>Interactive Mode: \u0130stifad\u0259\u00e7i y\u00f6n\u00fcml\u00fc t\u0259tbiql\u0259r \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131 gecikm\u0259 t\u0259min edir.</li> <li>Batch Mode: Server y\u00f6n\u00fcml\u00fc t\u0259tbiql\u0259rd\u0259 daha y\u00fcks\u0259k throughput \u00fc\u00e7\u00fcn optimalla\u015fd\u0131r\u0131lm\u0131\u015fd\u0131r.</li> </ul> <pre><code>&lt;configuration&gt;\n  &lt;runtime&gt;\n    &lt;GCLatencyMode value=\"Interactive\" /&gt;\n  &lt;/runtime&gt;\n&lt;/configuration&gt;\n</code></pre>"},{"location":"garbage-collector/new-features-v9/#7-tkmillsdirilmis-is-parcacg-optimizasiyas","title":"7. T\u0259kmill\u0259\u015fdirilmi\u015f \u0130\u015f Par\u00e7ac\u0131\u011f\u0131 Optimizasiyas\u0131","text":"<p>.NET 9, GC-nin i\u015f par\u00e7ac\u0131q idar\u0259etm\u0259sini daha effektiv hala g\u0259tirm\u0259k \u00fc\u00e7\u00fcn inki\u015faf etmi\u015f alqoritml\u0259r t\u0259qdim edir. Bu, x\u00fcsusil\u0259 \u00e7oxn\u00fcv\u0259li prosessorlarda performans\u0131n artmas\u0131n\u0131 t\u0259min edir.</p> <pre><code>ThreadPool.SetMinThreads(10, 10);\n</code></pre>"},{"location":"garbage-collector/working-mechanism/","title":"Garbage Collector: \u0130\u015fl\u0259m\u0259 Mexanizmi","text":"<p>Garbage Collector (GC), .NET t\u0259tbiql\u0259rind\u0259 yadda\u015f idar\u0259\u00e7iliyini avtomatla\u015fd\u0131ran vacib bir komponentdir. GC, istifad\u0259siz obyektl\u0259ri a\u015fkar ed\u0259r\u0259k yadda\u015f\u0131 t\u0259mizl\u0259yir v\u0259 yadda\u015f s\u0131zmalar\u0131n\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131r. Bu, t\u0259rtibat\u00e7\u0131lar\u0131n \u0259l il\u0259 yadda\u015f idar\u0259 etm\u0259 ehtiyac\u0131n\u0131 aradan qald\u0131r\u0131r. Lakin, GC-nin i\u015fl\u0259m\u0259 prinsipl\u0259rini anlamadan yaz\u0131lan kod performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"garbage-collector/working-mechanism/#1-gc-nin-islm-prinsipi","title":"1. GC-nin \u0130\u015fl\u0259m\u0259 Prinsipi","text":"<p>Garbage Collector \u00fc\u00e7 \u0259sas m\u0259rh\u0259l\u0259d\u0259 i\u015fl\u0259yir:</p> <ol> <li>Marking (\u0130\u015far\u0259l\u0259m\u0259): \u0130stifad\u0259 olunan v\u0259 istifad\u0259 olunmayan obyektl\u0259r m\u00fc\u0259yy\u0259n edilir.</li> <li>Relocating (Yerl\u0259\u015fdirm\u0259): \u0130stifad\u0259 olunan obyektl\u0259r bir yer\u0259 toplan\u0131r.</li> <li>Compacting (S\u0131xla\u015fd\u0131rma): Yadda\u015f sah\u0259si yenid\u0259n t\u0259\u015fkil edilir.</li> </ol> <p>GC bu prosesl\u0259ri obyektl\u0259ri n\u0259sill\u0259r\u0259 (generation) \u0259saslanan bir sisteml\u0259 idar\u0259 ed\u0259r\u0259k h\u0259yata ke\u00e7irir.</p>"},{"location":"garbage-collector/working-mechanism/#2-nsillr-generations","title":"2. N\u0259sill\u0259r (Generations)","text":"<p>Garbage Collector, yadda\u015f idar\u0259\u00e7iliyini optimalla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn obyektl\u0259ri \u00fc\u00e7 f\u0259rqli n\u0259sild\u0259 saxlay\u0131r:</p> <ul> <li>Generation 0: Q\u0131sa \u00f6m\u00fcrl\u00fc obyektl\u0259r (m\u0259s\u0259l\u0259n, lokal d\u0259yi\u015f\u0259nl\u0259r) \u00fc\u00e7\u00fcn istifad\u0259 olunur.</li> <li>Generation 1: Generation 0-dan ke\u00e7\u0259n obyektl\u0259r.</li> <li>Generation 2: Uzun \u00f6m\u00fcrl\u00fc obyektl\u0259r (m\u0259s\u0259l\u0259n, statik obyektl\u0259r).</li> </ul> <p>Niy\u0259 N\u0259sill\u0259r? GC, q\u0131sa \u00f6m\u00fcrl\u00fc obyektl\u0259ri daha tez t\u0259mizl\u0259y\u0259n, uzun \u00f6m\u00fcrl\u00fc obyektl\u0259ri is\u0259 daha nadir hallarda sil\u0259n bir strategiya istifad\u0259 ed\u0259r\u0259k performans\u0131 art\u0131r\u0131r.</p>"},{"location":"garbage-collector/working-mechanism/#3-gc-nin-islm-modlar","title":"3. GC-nin \u0130\u015fl\u0259m\u0259 Modlar\u0131","text":"<p>GC iki \u0259sas rejimd\u0259 i\u015fl\u0259y\u0259 bil\u0259r:</p> <ol> <li>Workstation Mode: T\u0259k istifad\u0259\u00e7i \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulmu\u015f t\u0259tbiql\u0259r \u00fc\u00e7\u00fcn optimalla\u015fd\u0131r\u0131l\u0131b.</li> <li>Server Mode: \u00c7ox i\u015f par\u00e7ac\u0131\u011f\u0131 (multi-threading) v\u0259 y\u00fcks\u0259k performans t\u0259l\u0259b ed\u0259n t\u0259tbiql\u0259r \u00fc\u00e7\u00fcn optimalla\u015fd\u0131r\u0131l\u0131b.</li> </ol>"},{"location":"garbage-collector/working-mechanism/#4-gc-nin-performansa-tsiri","title":"4. GC-nin Performansa T\u0259siri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z b\u00f6y\u00fck obyekt ayr\u0131lmas\u0131.</p> <pre><code>var largeArray = new byte[1024 * 1024 * 100]; // B\u00f6y\u00fck obyektl\u0259r LOH-ni t\u0259sir edir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00f6y\u00fck obyektl\u0259rd\u0259n \u00e7\u0259kinin v\u0259 ya yenid\u0259n istifad\u0259 edin.</p> <pre><code>byte[] buffer = ArrayPool&lt;byte&gt;.Shared.Rent(1024 * 1024);\ntry\n{\n    // \u0130stifad\u0259\n}\nfinally\n{\n    ArrayPool&lt;byte&gt;.Shared.Return(buffer);\n}\n</code></pre>"},{"location":"garbage-collector/working-mechanism/#5-finalizer-v-idisposable-istifadsi","title":"5. Finalizer v\u0259 IDisposable \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Finalizer il\u0259 yadda\u015f idar\u0259 etm\u0259y\u0259 \u00e7al\u0131\u015fmaq.</p> <pre><code>~MyClass()\n{\n    // T\u0259mizl\u0259m\u0259 \u0259m\u0259liyyatlar\u0131\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: IDisposable interfeysind\u0259n istifad\u0259 edin v\u0259 <code>using</code> strukturundan faydalan\u0131n.</p> <pre><code>public class MyClass : IDisposable\n{\n    public void Dispose()\n    {\n        // Resurslar\u0131 t\u0259mizl\u0259m\u0259\n    }\n}\n\nusing var myObject = new MyClass();\n</code></pre>"},{"location":"garbage-collector/working-mechanism/#6-gccollect-istifadsi","title":"6. <code>GC.Collect</code> \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u018fl il\u0259 <code>GC.Collect</code> \u00e7a\u011f\u0131rmaq.</p> <pre><code>GC.Collect(); // Performans probleml\u0259rin\u0259 s\u0259b\u0259b ola bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: GC-nin avtomatik i\u015fl\u0259m\u0259sin\u0259 icaz\u0259 verin.</p> <pre><code>// GC-nin \u00f6z mexanizmin\u0259 g\u00fcv\u0259nin.\n</code></pre>"},{"location":"garbage-collector/working-mechanism/#7-boyuk-obyekt-ygn-loh-idarciliyi","title":"7. B\u00f6y\u00fck Obyekt Y\u0131\u011f\u0131n\u0131 (LOH) \u0130dar\u0259\u00e7iliyi","text":"<p>B\u00f6y\u00fck obyektl\u0259r (85 KB-d\u0259n b\u00f6y\u00fck olanlar) Large Object Heap (LOH) \u00fcz\u0259rind\u0259 saxlan\u0131l\u0131r v\u0259 GC t\u0259r\u0259find\u0259n s\u0131xla\u015fd\u0131r\u0131lm\u0131r.</p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z b\u00f6y\u00fck obyektl\u0259r yaratmaq.</p> <pre><code>var data = new byte[1024 * 1024 * 10]; // LOH \u00fcz\u0259rind\u0259 b\u00f6y\u00fck ayr\u0131lma\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Daha ki\u00e7ik hiss\u0259l\u0259rl\u0259 i\u015fl\u0259yin.</p> <pre><code>var chunks = new List&lt;byte[]&gt;();\nfor (int i = 0; i &lt; 10; i++)\n{\n    chunks.Add(new byte[1024 * 1024]); // Daha ki\u00e7ik hiss\u0259l\u0259r\u0259 b\u00f6l\u00fcnm\u00fc\u015f obyektl\u0259r\n}\n</code></pre>"},{"location":"linq/any-all-usage/","title":"LINQ il\u0259 Any v\u0259 All \u0130stifad\u0259si","text":"<p><code>Any</code> v\u0259 <code>All</code>, LINQ sor\u011fular\u0131nda kolleksiyalar \u00fcz\u0259rind\u0259 m\u00fc\u0259yy\u0259n bir \u015f\u0259rtin \u00f6d\u0259nilib-\u00f6d\u0259nilm\u0259diyini yoxlamaq \u00fc\u00e7\u00fcn istifad\u0259 olunan iki g\u00fccl\u00fc metoddur. D\u00fczg\u00fcn istifad\u0259 edildikd\u0259 performans\u0131 v\u0259 oxunaql\u0131l\u0131\u011f\u0131 art\u0131r\u0131rlar, lakin s\u0259hv istifad\u0259l\u0259ri laz\u0131ms\u0131z \u0259m\u0259liyyatlara s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"linq/any-all-usage/#1-any-v-all-ndir","title":"1. Any v\u0259 All N\u0259dir?","text":"<ul> <li>Any: Kolleksiyadak\u0131 h\u0259r hans\u0131 bir elementin m\u00fc\u0259yy\u0259n bir \u015f\u0259rti \u00f6d\u0259yib-\u00f6d\u0259m\u0259diyini yoxlay\u0131r.</li> <li>All: Kolleksiyadak\u0131 b\u00fct\u00fcn elementl\u0259rin m\u00fc\u0259yy\u0259n bir \u015f\u0259rti \u00f6d\u0259yib-\u00f6d\u0259m\u0259diyini yoxlay\u0131r.</li> </ul> <p>\u0130stifad\u0259 n\u00fcmun\u0259si:</p> <pre><code>var hasAdults = people.Any(p =&gt; p.Age &gt;= 18); // H\u0259r hans\u0131 bir \u015f\u0259xs yetkindirmi?\nvar allAdults = people.All(p =&gt; p.Age &gt;= 18); // B\u00fct\u00fcn \u015f\u0259xsl\u0259r yetkindirmi?\n</code></pre>"},{"location":"linq/any-all-usage/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/any-all-usage/#shv-istifad-dongu-il-yoxlama","title":"S\u0259hv \u0130stifad\u0259: D\u00f6ng\u00fc il\u0259 yoxlama","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>bool hasAdults = false;\nforeach (var person in people)\n{\n    if (person.Age &gt;= 18)\n    {\n        hasAdults = true;\n        break;\n    }\n}\n</code></pre> <p>Bu \u00fcsul <code>Any</code> metodu \u0259v\u0259zin\u0259 laz\u0131ms\u0131z bir d\u00f6ng\u00fc istifad\u0259 edir v\u0259 kodun oxunaql\u0131\u011f\u0131n\u0131 azald\u0131r.</p>"},{"location":"linq/any-all-usage/#duzgun-istifad-any-metodu-il-yoxlama","title":"D\u00fczg\u00fcn \u0130stifad\u0259: <code>Any</code> metodu il\u0259 yoxlama","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>var hasAdults = people.Any(p =&gt; p.Age &gt;= 18);\n</code></pre> <p>Bu \u00fcsul, kolleksiyan\u0131n ilk uy\u011fun elementini tapd\u0131qda prosesi dayand\u0131r\u0131r v\u0259 daha s\u0259m\u0259r\u0259lidir.</p>"},{"location":"linq/any-all-usage/#3-any-v-all-istifad-sahlri","title":"3. Any v\u0259 All \u0130stifad\u0259 Sah\u0259l\u0259ri","text":""},{"location":"linq/any-all-usage/#1-bos-kolleksiya-yoxlamaq","title":"1. Bo\u015f Kolleksiya Yoxlamaq","text":"<p><code>Any</code> metodu kolleksiyan\u0131n bo\u015f olub-olmad\u0131\u011f\u0131n\u0131 yoxlamaq \u00fc\u00e7\u00fcn istifad\u0259 edil\u0259 bil\u0259r.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>if (!people.Any())\n{\n    Console.WriteLine(\"Kolleksiya bo\u015fdur.\");\n}\n</code></pre>"},{"location":"linq/any-all-usage/#2-butun-elementlri-yoxlamaq","title":"2. B\u00fct\u00fcn Elementl\u0259ri Yoxlamaq","text":"<p><code>All</code> metodu kolleksiyadak\u0131 b\u00fct\u00fcn elementl\u0259rin bir \u015f\u0259rti \u00f6d\u0259yib-\u00f6d\u0259m\u0259diyini yoxlay\u0131r.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>var allActive = users.All(u =&gt; u.IsActive);\n</code></pre>"},{"location":"linq/any-all-usage/#4-performans-mslhtlri","title":"4. Performans M\u0259sl\u0259h\u0259tl\u0259ri","text":"<ul> <li>Any: \u0130lk uy\u011fun elementi tapd\u0131qdan sonra prosesi dayand\u0131r\u0131r, buna g\u00f6r\u0259 d\u0259 b\u00f6y\u00fck kolleksiyalarda s\u00fcr\u0259tlidir.</li> <li>All: B\u00fct\u00fcn elementl\u0259ri yoxlad\u0131\u011f\u0131 \u00fc\u00e7\u00fcn b\u00f6y\u00fck kolleksiyalarda daha yava\u015f ola bil\u0259r.</li> </ul> <p>\u2705 Performans M\u00fcqayis\u0259si N\u00fcmun\u0259si:</p> <pre><code>var stopwatch = Stopwatch.StartNew();\n\n// Any il\u0259 yoxlama\nvar hasAdults = people.Any(p =&gt; p.Age &gt;= 18);\nstopwatch.Stop();\nConsole.WriteLine($\"Any M\u00fcdd\u0259ti: {stopwatch.ElapsedMilliseconds} ms\");\n\nstopwatch.Restart();\n\n// All il\u0259 yoxlama\nvar allAdults = people.All(p =&gt; p.Age &gt;= 18);\nstopwatch.Stop();\nConsole.WriteLine($\"All M\u00fcdd\u0259ti: {stopwatch.ElapsedMilliseconds} ms\");\n</code></pre>"},{"location":"linq/any-all-usage/#5-dinamik-srtlrl-any-v-all","title":"5. Dinamik \u015e\u0259rtl\u0259rl\u0259 Any v\u0259 All","text":"<p>\u015e\u0259rtl\u0259ri i\u015fl\u0259m\u0259 zaman\u0131 (<code>runtime</code>) dinamik \u015f\u0259kild\u0259 t\u0259yin ed\u0259 bil\u0259rsiniz.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>Func&lt;Person, bool&gt; isAdult = p =&gt; p.Age &gt;= 18;\n\nvar hasAdults = people.Any(isAdult);\nvar allAdults = people.All(isAdult);\n</code></pre> <p>Bu \u00fcsul kodunuzu daha \u00e7evik v\u0259 oxunaql\u0131 edir.</p>"},{"location":"linq/asnotracking-performance/","title":"AsNoTracking \u0130stifad\u0259si il\u0259 Performans Art\u0131r\u0131m\u0131","text":"<p>Entity Framework, veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131n\u0131 izl\u0259m\u0259k v\u0259 d\u0259yi\u015fiklikl\u0259ri n\u0259zar\u0259td\u0259 saxlamaq \u00fc\u00e7\u00fcn standart olaraq bir tracking mexanizmi istifad\u0259 edir. Lakin, yaln\u0131z oxuma \u0259m\u0259liyyatlar\u0131 \u00fc\u00e7\u00fcn bu izl\u0259m\u0259 mexanizmi laz\u0131ms\u0131zd\u0131r v\u0259 performans itkisin\u0259 s\u0259b\u0259b ola bil\u0259r. <code>AsNoTracking</code> metodu bu problemi h\u0259ll ed\u0259r\u0259k izl\u0259m\u0259 mexanizmini deaktiv edir v\u0259 performans\u0131 art\u0131r\u0131r.</p>"},{"location":"linq/asnotracking-performance/#1-asnotracking-ndir","title":"1. AsNoTracking N\u0259dir?","text":"<p><code>AsNoTracking</code>, sor\u011fudan g\u0259l\u0259n obyektl\u0259rin d\u0259yi\u015fiklikl\u0259rinin izl\u0259nilm\u0259sini deaktiv ed\u0259n bir Entity Framework x\u00fcsusiyy\u0259tidir. X\u00fcsusil\u0259 yaln\u0131z oxuma m\u0259qs\u0259dli sor\u011fularda yadda\u015f v\u0259 prosessor istifad\u0259sini azaldaraq daha s\u0259m\u0259r\u0259li i\u015fl\u0259m\u0259 imkan\u0131 yarad\u0131r.</p>"},{"location":"linq/asnotracking-performance/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/asnotracking-performance/#shv-istifad-tracking-aktiv-olduqda-lazmsz-yaddas-istifadsi","title":"S\u0259hv \u0130stifad\u0259: Tracking aktiv olduqda laz\u0131ms\u0131z yadda\u015f istifad\u0259si.","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>using var context = new AppDbContext();\n\nvar customers = await context.Customers\n    .Where(c =&gt; c.IsActive)\n    .ToListAsync();\n\nforeach (var customer in customers)\n{\n    Console.WriteLine(customer.Name);\n}\n</code></pre> <p>Bu sor\u011fu, <code>customers</code> siyah\u0131s\u0131ndak\u0131 h\u0259r bir obyekt \u00fc\u00e7\u00fcn izl\u0259m\u0259 m\u0259lumat\u0131 saxlay\u0131r. Ancaq yaln\u0131z oxuma m\u0259qs\u0259dil\u0259 i\u015fl\u0259dikd\u0259, bu izl\u0259m\u0259 laz\u0131ms\u0131zd\u0131r v\u0259 \u0259lav\u0259 resurs istifad\u0259sin\u0259 s\u0259b\u0259b olur.</p>"},{"location":"linq/asnotracking-performance/#duzgun-istifad-asnotracking-il-lazmsz-izlmni-deaktiv-etmk","title":"D\u00fczg\u00fcn \u0130stifad\u0259: <code>AsNoTracking</code> il\u0259 laz\u0131ms\u0131z izl\u0259m\u0259ni deaktiv etm\u0259k.","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>using var context = new AppDbContext();\n\nvar customers = await context.Customers\n    .AsNoTracking()\n    .Where(c =&gt; c.IsActive)\n    .ToListAsync();\n\nforeach (var customer in customers)\n{\n    Console.WriteLine(customer.Name);\n}\n</code></pre> <p>Bu \u00fcsul yaln\u0131z oxuma \u0259m\u0259liyyatlar\u0131nda istifad\u0259 olundu\u011fundan izl\u0259m\u0259 mexanizmi deaktiv edilir v\u0259 performans art\u0131r.</p>"},{"location":"linq/asnotracking-performance/#3-performans-qazanclar","title":"3. Performans Qazanclar\u0131","text":"<p><code>AsNoTracking</code>, x\u00fcsusil\u0259 a\u015fa\u011f\u0131dak\u0131 hallarda performans\u0131 art\u0131r\u0131r: - B\u00f6y\u00fck veril\u0259nl\u0259r bazas\u0131 c\u0259dv\u0259ll\u0259rind\u0259 sor\u011fular icra edil\u0259rk\u0259n. - Sor\u011fular yaln\u0131z m\u0259lumat oxumaq \u00fc\u00e7\u00fcn istifad\u0259 edil\u0259rk\u0259n. - Bird\u0259n \u00e7ox sor\u011fu eyni anda icra edil\u0259rk\u0259n.</p> <p>B\u00f6y\u00fck miqyasl\u0131 sisteml\u0259rd\u0259 bu f\u0259rq \u0259h\u0259miyy\u0259tli d\u0259r\u0259c\u0259d\u0259 hiss olunur.</p>"},{"location":"linq/asnotracking-performance/#4-asnotrackingwithidentityresolution-istifadsi","title":"4. <code>AsNoTrackingWithIdentityResolution</code> \u0130stifad\u0259si","text":"<p><code>AsNoTracking</code> metodu il\u0259 eyni identifikatora sahib obyektl\u0259rin d\u00fczg\u00fcn idar\u0259 olunmas\u0131 \u00fc\u00e7\u00fcn <code>AsNoTrackingWithIdentityResolution</code> istifad\u0259 edil\u0259 bil\u0259r.</p> <p>\u2705 N\u00fcmun\u0259:</p> <pre><code>using var context = new AppDbContext();\n\nvar orders = await context.Orders\n    .AsNoTrackingWithIdentityResolution()\n    .Include(o =&gt; o.Customer)\n    .ToListAsync();\n\nforeach (var order in orders)\n{\n    Console.WriteLine($\"Order ID: {order.Id}, Customer: {order.Customer.Name}\");\n}\n</code></pre> <p>Bu \u00fcsul, \u0259laq\u0259li m\u0259lumatlarla i\u015fl\u0259y\u0259rk\u0259n izl\u0259m\u0259 mexanizmi olmadan eyni ID-y\u0259 sahib obyektl\u0259ri birl\u0259\u015fdirir.</p>"},{"location":"linq/asnotracking-performance/#5-performans-testi","title":"5. Performans Testi","text":"<p>A\u015fa\u011f\u0131dak\u0131 n\u00fcmun\u0259 <code>AsNoTracking</code> il\u0259 adi sor\u011fular aras\u0131ndak\u0131 performans f\u0259rqini g\u00f6st\u0259rir:</p> <pre><code>var stopwatch = Stopwatch.StartNew();\n\nusing var context = new AppDbContext();\n\n// AsNoTracking olmadan\nvar trackedCustomers = await context.Customers\n    .Where(c =&gt; c.IsActive)\n    .ToListAsync();\n\nstopwatch.Stop();\nConsole.WriteLine($\"Tracked Query Time: {stopwatch.ElapsedMilliseconds} ms\");\n\nstopwatch.Restart();\n\n// AsNoTracking il\u0259\nvar untrackedCustomers = await context.Customers\n    .AsNoTracking()\n    .Where(c =&gt; c.IsActive)\n    .ToListAsync();\n\nstopwatch.Stop();\nConsole.WriteLine($\"Untracked Query Time: {stopwatch.ElapsedMilliseconds} ms\");\n</code></pre> <p>Bu test n\u0259tic\u0259l\u0259rind\u0259 <code>AsNoTracking</code> istifad\u0259si il\u0259 daha s\u00fcr\u0259tli sor\u011fular v\u0259 daha az yadda\u015f istifad\u0259si m\u00fc\u015fahid\u0259 olunacaq.</p>"},{"location":"linq/async-linq/","title":"Async LINQ","text":"<p>Async LINQ \u0259m\u0259liyyatlar\u0131, x\u00fcsusil\u0259 veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131nda IO il\u0259 ba\u011fl\u0131 prosesl\u0259ri optimalla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn istifad\u0259 olunur. D\u00fczg\u00fcn t\u0259tbiq edildikd\u0259, performans\u0131 art\u0131raraq istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sini yax\u015f\u0131la\u015fd\u0131ra bil\u0259r. Lakin, s\u0259hv istifad\u0259 performans itkisin\u0259 v\u0259 resurslar\u0131n s\u0259m\u0259r\u0259siz idar\u0259 olunmas\u0131na s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"linq/async-linq/#1-sinxron-linq-il-gecikm-problemi","title":"1. Sinxron LINQ il\u0259 Gecikm\u0259 Problemi","text":"<p>\u274c S\u0259hv \u0130stifad\u0259: Sinxron LINQ metodlar\u0131ndan istifad\u0259 ed\u0259r\u0259k IO \u0259m\u0259liyyatlar\u0131n\u0131 bloklamaq.</p> <pre><code>var users = context.Users\n    .Where(u =&gt; u.IsActive)\n    .ToList(); // Sinxron \u00e7a\u011f\u0131r\u0131\u015f, bloklama yarad\u0131r.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Asinxron LINQ metodlar\u0131ndan istifad\u0259 ed\u0259r\u0259k bloklaman\u0131 qar\u015f\u0131s\u0131n\u0131 al\u0131n.</p> <pre><code>var users = await context.Users\n    .Where(u =&gt; u.IsActive)\n    .ToListAsync();\n</code></pre>"},{"location":"linq/async-linq/#2-tolistasync-metodunu-lazmsz-istifad-etmk","title":"2. <code>ToListAsync</code> Metodunu Laz\u0131ms\u0131z \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c S\u0259hv \u0130stifad\u0259: <code>ToListAsync</code> \u00e7a\u011f\u0131r\u0131\u015f\u0131n\u0131 laz\u0131ms\u0131z \u015f\u0259kild\u0259 ba\u015fqa \u0259m\u0259liyyatlarla istifad\u0259 etm\u0259k.</p> <pre><code>var users = (await context.Users.ToListAsync())\n    .Where(u =&gt; u.IsActive);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Filtrl\u0259ri birba\u015fa asinxron sor\u011fuya daxil edin.</p> <pre><code>var users = await context.Users\n    .Where(u =&gt; u.IsActive)\n    .ToListAsync();\n</code></pre>"},{"location":"linq/async-linq/#3-hr-stird-await-istifad-edrk-performans-azaltmaq","title":"3. H\u0259r S\u0259tird\u0259 <code>Await</code> \u0130stifad\u0259 Ed\u0259r\u0259k Performans\u0131 Azaltmaq","text":"<p>\u274c S\u0259hv \u0130stifad\u0259: H\u0259r \u0259m\u0259liyyatda ayr\u0131 <code>await</code> \u00e7a\u011f\u0131r\u0131\u015f\u0131 etm\u0259k.</p> <pre><code>var userList = new List&lt;User&gt;();\nforeach (var userId in userIds)\n{\n    var user = await context.Users.FindAsync(userId);\n    userList.Add(user);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Paralel i\u015fl\u0259m\u0259l\u0259ri effektiv idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn <code>Task.WhenAll</code> istifad\u0259 edin.</p> <pre><code>var tasks = userIds.Select(id =&gt; context.Users.FindAsync(id).AsTask());\nvar userList = await Task.WhenAll(tasks);\n</code></pre>"},{"location":"linq/async-linq/#4-asinxron-olmayan-verilr-ucun-tolistasync-istifad-etmk","title":"4. Asinxron Olmayan Veril\u0259r \u00dc\u00e7\u00fcn <code>ToListAsync</code> \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c S\u0259hv \u0130stifad\u0259: Yadda\u015fda olan veril\u0259r \u00fc\u00e7\u00fcn asinxron metodlardan istifad\u0259 etm\u0259k.</p> <pre><code>var inMemoryList = new List&lt;int&gt; { 1, 2, 3 };\nvar result = await inMemoryList.ToListAsync(); // Yanl\u0131\u015f istifad\u0259\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yadda\u015fda saxlan\u0131lan veril\u0259r \u00fc\u00e7\u00fcn standart LINQ metodlar\u0131ndan istifad\u0259 edin.</p> <pre><code>var inMemoryList = new List&lt;int&gt; { 1, 2, 3 };\nvar result = inMemoryList.ToList();\n</code></pre>"},{"location":"linq/async-linq/#5-firstasync-v-singleasync-metodlarn-yanls-istifad-etmk","title":"5. <code>FirstAsync</code> v\u0259 <code>SingleAsync</code> Metodlar\u0131n\u0131 Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c S\u0259hv \u0130stifad\u0259: Bir ne\u00e7\u0259 n\u0259tic\u0259 qaytara bil\u0259c\u0259k bir sor\u011fu \u00fc\u00e7\u00fcn <code>SingleAsync</code> istifad\u0259 etm\u0259k.</p> <pre><code>var user = await context.Users.SingleAsync(u =&gt; u.IsActive); // Bir ne\u00e7\u0259 n\u0259tic\u0259 d\u00f6nd\u0259r\u0259rs\u0259, x\u0259ta ba\u015f ver\u0259c\u0259k\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Bir ne\u00e7\u0259 n\u0259tic\u0259nin qaytar\u0131la bil\u0259c\u0259yi hallarda <code>FirstOrDefaultAsync</code> istifad\u0259 edin.</p> <pre><code>var user = await context.Users.FirstOrDefaultAsync(u =&gt; u.IsActive);\nif (user == null)\n{\n    Console.WriteLine(\"\u0130stifad\u0259\u00e7i tap\u0131lmad\u0131.\");\n}\n</code></pre>"},{"location":"linq/async-linq/#6-asnotracking-istifadsini-nzr-almamaq","title":"6. <code>AsNoTracking</code> \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c S\u0259hv \u0130stifad\u0259: Sor\u011fu n\u0259tic\u0259l\u0259rini yaln\u0131z oxuma m\u0259qs\u0259dil\u0259 istifad\u0259 ed\u0259rk\u0259n izl\u0259m\u0259 (tracking) mexanizmini deaktiv etm\u0259m\u0259k.</p> <pre><code>var products = await context.Products.ToListAsync(); // Tracking a\u00e7\u0131q qal\u0131r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z oxuma \u0259m\u0259liyyatlar\u0131 \u00fc\u00e7\u00fcn <code>AsNoTracking</code> istifad\u0259 edin.</p> <pre><code>var products = await context.Products.AsNoTracking().ToListAsync();\n</code></pre> <p>Bu metodun istifad\u0259si yadda\u015f istifad\u0259sini v\u0259 performans\u0131 yax\u015f\u0131la\u015fd\u0131r\u0131r, x\u00fcsusil\u0259 d\u0259 b\u00f6y\u00fck veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131nda.</p>"},{"location":"linq/expression-trees/","title":"Expression Trees il\u0259 Dinamik LINQ Sor\u011fular\u0131","text":"<p>Expression Trees, C# dilind\u0259 dinamik v\u0259 m\u00fcr\u0259kk\u0259b sor\u011fular yaratmaq \u00fc\u00e7\u00fcn g\u00fccl\u00fc bir vasit\u0259dir. X\u00fcsusil\u0259 LINQ il\u0259 i\u015fl\u0259y\u0259rk\u0259n, runtime zaman\u0131 sor\u011fular\u0131n yarad\u0131lmas\u0131 v\u0259 optimalla\u015fd\u0131r\u0131lmas\u0131 \u00fc\u00e7\u00fcn istifad\u0259 olunur.</p>"},{"location":"linq/expression-trees/#1-expression-trees-ndir","title":"1. Expression Trees N\u0259dir?","text":"<p>Expression Trees, kodunuzu bir ifad\u0259 a\u011fac\u0131 formas\u0131nda t\u0259msil etm\u0259y\u0259 imkan verir. Bu metodla lambda ifad\u0259l\u0259rini analiz etm\u0259k v\u0259 runtime zaman\u0131 d\u0259yi\u015fiklikl\u0259r etm\u0259k m\u00fcmk\u00fcnd\u00fcr.</p> <p>\u018fsas istifad\u0259l\u0259ri: - Dinamik Filtrl\u0259m\u0259: \u0130stifad\u0259\u00e7i sor\u011fular\u0131na uy\u011fun olaraq \u015f\u0259rtl\u0259rin yarad\u0131lmas\u0131. - Veril\u0259nl\u0259r Bazas\u0131 Sor\u011fular\u0131: LINQ to SQL v\u0259 ya Entity Framework il\u0259 dinamik sor\u011fular\u0131n yarad\u0131lmas\u0131. - D\u0259rin Analiz: Lambda ifad\u0259l\u0259rini ara\u015fd\u0131raraq optimalla\u015fd\u0131rmaq.</p>"},{"location":"linq/expression-trees/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/expression-trees/#shv-istifad-statik-srtlr","title":"S\u0259hv \u0130stifad\u0259: Statik \u015e\u0259rtl\u0259r","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>var filteredData = data.Where(x =&gt; x.Age &gt; 32 &amp;&amp; x.Name == \"Murad\").ToList();\n</code></pre> <p>Bu sor\u011fu yaln\u0131z m\u00fc\u0259yy\u0259n bir \u015f\u0259rt \u00fc\u00e7\u00fcn sabitl\u0259\u015fib v\u0259 t\u0259krar istifad\u0259si \u00e7\u0259tindir.</p>"},{"location":"linq/expression-trees/#duzgun-istifad-dinamik-srtlr","title":"D\u00fczg\u00fcn \u0130stifad\u0259: Dinamik \u015e\u0259rtl\u0259r","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>using System.Linq.Expressions;\n\nExpression&lt;Func&lt;Person, bool&gt;&gt; filter = x =&gt; x.Age &gt; 32 &amp;&amp; x.Name == \"Murad\";\nvar filteredData = data.Where(filter.Compile()).ToList();\n</code></pre> <p>Bu metod, \u015f\u0259rtl\u0259ri runtime zaman\u0131 dinamik \u015f\u0259kild\u0259 yaratma\u011fa imkan verir.</p>"},{"location":"linq/expression-trees/#3-dinamik-srtlrin-yaradlmas","title":"3. Dinamik \u015e\u0259rtl\u0259rin Yarad\u0131lmas\u0131","text":"<p>Expression Trees il\u0259 runtime zaman\u0131 \u015f\u0259rtl\u0259r dinamik olaraq qurula bil\u0259r.</p> <p>\u2705 Misal: \u0130stifad\u0259\u00e7i M\u0259lumatlar\u0131na G\u00f6r\u0259 Dinamik Sor\u011fu</p> <pre><code>var parameter = Expression.Parameter(typeof(Person), \"x\");\nvar property = Expression.Property(parameter, \"Age\");\nvar constant = Expression.Constant(32);\nvar comparison = Expression.GreaterThan(property, constant);\n\nvar lambda = Expression.Lambda&lt;Func&lt;Person, bool&gt;&gt;(comparison, parameter);\n\nvar filteredData = data.Where(lambda.Compile()).ToList();\n</code></pre> <p>Bu kod runtime zaman\u0131 <code>x =&gt; x.Age &gt; 32</code> sor\u011fusunu yarad\u0131r.</p>"},{"location":"linq/expression-trees/#4-coxsayl-srtlrl-dinamik-sorgu","title":"4. \u00c7oxsayl\u0131 \u015e\u0259rtl\u0259rl\u0259 Dinamik Sor\u011fu","text":"<p>Expression Trees il\u0259 bir ne\u00e7\u0259 \u015f\u0259rt eyni anda dinamik \u015f\u0259kild\u0259 birl\u0259\u015fdiril\u0259 bil\u0259r.</p> <p>\u2705 Misal: \u00c7oxsayl\u0131 \u015e\u0259rtl\u0259rin Birl\u0259\u015fdirilm\u0259si</p> <pre><code>var parameter = Expression.Parameter(typeof(Person), \"x\");\n\nvar ageProperty = Expression.Property(parameter, \"Age\");\nvar ageCondition = Expression.GreaterThan(ageProperty, Expression.Constant(32));\n\nvar nameProperty = Expression.Property(parameter, \"Name\");\nvar nameCondition = Expression.Equal(nameProperty, Expression.Constant(\"Murad\"));\n\nvar combinedCondition = Expression.AndAlso(ageCondition, nameCondition);\n\nvar lambda = Expression.Lambda&lt;Func&lt;Person, bool&gt;&gt;(combinedCondition, parameter);\n\nvar filteredData = data.Where(lambda.Compile()).ToList();\n</code></pre> <p>Bu kod runtime zaman\u0131 <code>x =&gt; x.Age &gt; 32 &amp;&amp; x.Name == \"Murad\"</code> sor\u011fusunu qurur.</p>"},{"location":"linq/expression-trees/#5-dinamik-sralama-dynamic-ordering","title":"5. Dinamik S\u0131ralama (Dynamic Ordering)","text":"<p>Expression Trees istifad\u0259 ed\u0259r\u0259k s\u0131ralama \u0259m\u0259liyyatlar\u0131n\u0131 dinamik hala g\u0259tirm\u0259k m\u00fcmk\u00fcnd\u00fcr.</p> <p>\u2705 Misal: Dinamik S\u0131ralama</p> <pre><code>var parameter = Expression.Parameter(typeof(Person), \"x\");\nvar property = Expression.Property(parameter, \"Name\");\n\nvar lambda = Expression.Lambda&lt;Func&lt;Person, string&gt;&gt;(property, parameter);\n\nvar sortedData = data.OrderBy(lambda.Compile()).ToList();\n</code></pre> <p>Bu kod \u015f\u0259xsl\u0259ri adlar\u0131na g\u00f6r\u0259 s\u0131ralay\u0131r.</p>"},{"location":"linq/expression-trees/#6-performans-v-optimizasiya","title":"6. Performans v\u0259 Optimizasiya","text":"<p>Expression Trees d\u00fczg\u00fcn istifad\u0259 edildikd\u0259 performans\u0131 art\u0131r\u0131r, lakin laz\u0131ms\u0131z m\u00fcr\u0259kk\u0259blik yaratmaqdan qa\u00e7maq laz\u0131md\u0131r.</p> <p>T\u00f6vsiy\u0259l\u0259r: - Tez-tez istifad\u0259 olunan sor\u011fular\u0131 compile ed\u0259r\u0259k yenid\u0259n istifad\u0259 edin. - \u00c7ox m\u00fcr\u0259kk\u0259b dinamik sor\u011fular\u0131n performans\u0131n\u0131 test edin v\u0259 analiz edin.</p> <p>\u2705 Performans T\u0259kmill\u0259\u015fdirm\u0259 N\u00fcmun\u0259si:</p> <pre><code>var compiledLambda = lambda.Compile();\n// Compile edilmi\u015f sor\u011funu t\u0259krar istifad\u0259 ed\u0259 bil\u0259rsiniz\nvar filteredData = data.Where(compiledLambda).ToList();\n</code></pre>"},{"location":"linq/extension-methods/","title":"Extension Methods","text":"<p>Here is your translated text from Turkish to Azerbaijani while maintaining technical accuracy and logical flow:</p>"},{"location":"linq/extension-methods/#linq-genislnm-extension-metodlar","title":"LINQ Geni\u015fl\u0259nm\u0259 (Extension) Metodlar\u0131","text":"<p>LINQ (Language Integrated Query), C#-da m\u0259lumat emal\u0131n\u0131 asanla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn g\u00fccl\u00fc bir al\u0259tdir. LINQ, geni\u015fl\u0259nm\u0259 metodlar\u0131 (<code>extension methods</code>) vasit\u0259sil\u0259 sor\u011fu yaz\u0131m\u0131n\u0131 daha \u00e7evik v\u0259 oxunaql\u0131 edir. Lakin, bu metodlar\u0131n s\u0259hv istifad\u0259si performans itkisin\u0259 v\u0259 m\u00fcr\u0259kk\u0259b kod strukturlar\u0131na s\u0259b\u0259b ola bil\u0259r.  </p>"},{"location":"linq/extension-methods/#1-lazmsz-tolist-istifadsi","title":"1. Laz\u0131ms\u0131z <code>ToList</code> \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sor\u011funun h\u0259r add\u0131m\u0131nda <code>ToList</code> istifad\u0259 etm\u0259k.  </p> <pre><code>var filteredData = context.Data\n    .Where(d =&gt; d.IsActive)\n    .ToList()\n    .Select(d =&gt; d.Name)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011funu t\u0259k \u0259m\u0259liyyatda icra edin.  </p> <pre><code>var filteredData = context.Data\n    .Where(d =&gt; d.IsActive)\n    .Select(d =&gt; d.Name)\n    .ToList();\n</code></pre>"},{"location":"linq/extension-methods/#2-boyuk-mlumat-dstlrind-orderby-il-performans-problemlri","title":"2. B\u00f6y\u00fck M\u0259lumat D\u0259stl\u0259rind\u0259 <code>OrderBy</code> il\u0259 Performans Probleml\u0259ri","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: S\u0131ralaman\u0131 yadda\u015fda (<code>memory</code>) aparmaq.  </p> <pre><code>var data = context.Data.ToList().OrderBy(d =&gt; d.Name).ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: S\u0131ralama \u0259m\u0259liyyat\u0131n\u0131 veril\u0259nl\u0259r bazas\u0131nda icra edin.  </p> <pre><code>var data = context.Data\n    .OrderBy(d =&gt; d.Name)\n    .ToList();\n</code></pre>"},{"location":"linq/extension-methods/#3-lazmsz-select-istifadsi","title":"3. Laz\u0131ms\u0131z <code>Select</code> \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z projeksiyalar (<code>projection</code>) etm\u0259k.  </p> <pre><code>var data = context.Data\n    .Select(d =&gt; new { d.Id, d.Name })\n    .Select(d =&gt; d.Name)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Birba\u015fa ehtiyac duyulan m\u0259lumat\u0131 se\u00e7in.  </p> <pre><code>var data = context.Data\n    .Select(d =&gt; d.Name)\n    .ToList();\n</code></pre>"},{"location":"linq/extension-methods/#4-first-v-single-metodlarn-yanls-istifad-etmk","title":"4. <code>First</code> v\u0259 <code>Single</code> Metodlar\u0131n\u0131 Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u0259lumat tap\u0131lmad\u0131qda x\u0259ta yaradan <code>First</code> v\u0259 ya <code>Single</code> metodlar\u0131n\u0131 istifad\u0259 etm\u0259k.  </p> <pre><code>var item = context.Data.First(d =&gt; d.Id == 1); // M\u0259lumat yoxdursa x\u0259ta at\u0131r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: T\u0259hl\u00fck\u0259siz sor\u011fular \u00fc\u00e7\u00fcn <code>FirstOrDefault</code> v\u0259 ya <code>SingleOrDefault</code> istifad\u0259 edin.  </p> <pre><code>var item = context.Data.FirstOrDefault(d =&gt; d.Id == 1);\nif (item == null)\n{\n    Console.WriteLine(\"M\u0259lumat tap\u0131lmad\u0131.\");\n}\n</code></pre>"},{"location":"linq/extension-methods/#5-count-istifadsi-il-performansa-mnfi-tsir-etmk","title":"5. <code>Count</code> \u0130stifad\u0259si il\u0259 Performansa M\u0259nfi T\u0259sir Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>Count</code> metodunu yadda\u015fdak\u0131 bir kolleksiyaya t\u0259tbiq etm\u0259k.  </p> <pre><code>var count = context.Data.ToList().Count;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>Count</code> \u0259m\u0259liyyat\u0131n\u0131 birba\u015fa veril\u0259nl\u0259r bazas\u0131nda icra edin.  </p> <pre><code>var count = context.Data.Count();\n</code></pre>"},{"location":"linq/extension-methods/#6-genislnm-metodlar-il-murkkb-strukturlar-yazmaq","title":"6. Geni\u015fl\u0259nm\u0259 Metodlar\u0131 il\u0259 M\u00fcr\u0259kk\u0259b Strukturlar Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: T\u0259k s\u0259tird\u0259 m\u00fcr\u0259kk\u0259b \u0259m\u0259liyyatlar\u0131 z\u0259ncirl\u0259m\u0259k.  </p> <pre><code>var data = context.Data\n    .Where(d =&gt; d.IsActive)\n    .OrderBy(d =&gt; d.Name)\n    .Select(d =&gt; new { d.Id, d.Name, d.Date })\n    .ToList()\n    .GroupBy(d =&gt; d.Date.Year);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018fm\u0259liyyatlar\u0131 m\u0259rh\u0259l\u0259l\u0259r\u0259 b\u00f6l\u0259r\u0259k kodun oxunaql\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131n.  </p> <pre><code>var activeData = context.Data\n    .Where(d =&gt; d.IsActive)\n    .OrderBy(d =&gt; d.Name)\n    .Select(d =&gt; new { d.Id, d.Name, d.Date })\n    .ToList();\n\nvar groupedData = activeData.GroupBy(d =&gt; d.Date.Year);\n</code></pre>"},{"location":"linq/extension-methods/#7-any-v-exists-metodlarnn-istifadsini-nzr-almamaq","title":"7. <code>Any</code> v\u0259 <code>Exists</code> Metodlar\u0131n\u0131n \u0130stifad\u0259sini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00f6vcudlu\u011fu yoxlamaq \u00fc\u00e7\u00fcn <code>Count</code> metodundan istifad\u0259 etm\u0259k.  </p> <pre><code>var exists = context.Data.Count(d =&gt; d.IsActive) &gt; 0;\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Daha performansl\u0131 <code>Any</code> metodunu istifad\u0259 edin.  </p> <pre><code>var exists = context.Data.Any(d =&gt; d.IsActive);\n</code></pre>"},{"location":"linq/first-single-differences/","title":"LINQ: First v\u0259 Single F\u0259rql\u0259ri","text":"<p>LINQ-d\u0259 <code>First</code>, <code>FirstOrDefault</code>, <code>Single</code> v\u0259 <code>SingleOrDefault</code> metodlar\u0131, kolleksiyalardan m\u00fc\u0259yy\u0259n bir elementi se\u00e7m\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunur. Lakin bu metodlar\u0131n s\u0259hv istifad\u0259si performans probleml\u0259rin\u0259 v\u0259 g\u00f6zl\u0259nilm\u0259z x\u0259talara s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"linq/first-single-differences/#1-first-v-single-ndir","title":"1. First v\u0259 Single N\u0259dir?","text":""},{"location":"linq/first-single-differences/#first","title":"First","text":"<ul> <li>Kolleksiyadak\u0131 ilk elementi qaytar\u0131r.</li> <li>\u018fg\u0259r element tap\u0131lmazsa, <code>InvalidOperationException</code> istisnas\u0131 at\u0131r.</li> <li>\u0130lk element tap\u0131lan kimi prosesi dayand\u0131r\u0131r, bu da s\u00fcr\u0259tli i\u015fl\u0259m\u0259sin\u0259 s\u0259b\u0259b olur.</li> </ul> <p>Misal:</p> <pre><code>var firstCustomer = customers.First(c =&gt; c.IsActive);\nConsole.WriteLine(firstCustomer.Name);\n</code></pre>"},{"location":"linq/first-single-differences/#single","title":"Single","text":"<ul> <li>Kolleksiyada yaln\u0131z bir element varsa, h\u0259min elementi qaytar\u0131r.</li> <li>\u018fg\u0259r bir ne\u00e7\u0259 uy\u011fun element varsa, <code>InvalidOperationException</code> istisnas\u0131 at\u0131r.</li> <li>\u018fg\u0259r uy\u011fun element tap\u0131lmazsa, yen\u0259 <code>InvalidOperationException</code> at\u0131r.</li> </ul> <p>Misal:</p> <pre><code>var singleCustomer = customers.Single(c =&gt; c.Id == 1);\nConsole.WriteLine(singleCustomer.Name);\n</code></pre>"},{"location":"linq/first-single-differences/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/first-single-differences/#shv-istifad-first-il-unikal-element-yoxlamaq","title":"S\u0259hv \u0130stifad\u0259: <code>First</code> il\u0259 unikal element yoxlamaq","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>var singleCustomer = customers.First(c =&gt; c.Id == 1);\n</code></pre> <p>Bu kod kolleksiyan\u0131n yaln\u0131z bir element ehtiva etdiyini yoxlam\u0131r v\u0259 g\u00f6zl\u0259nilm\u0259z n\u0259tic\u0259l\u0259r\u0259 s\u0259b\u0259b ola bil\u0259r.</p>"},{"location":"linq/first-single-differences/#duzgun-istifad-single-il-unikal-element-yoxlamaq","title":"D\u00fczg\u00fcn \u0130stifad\u0259: <code>Single</code> il\u0259 unikal element yoxlamaq","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>var singleCustomer = customers.Single(c =&gt; c.Id == 1);\n</code></pre> <p>Bu metod kolleksiyada yaln\u0131z bir element oldu\u011funa z\u0259man\u0259t verir.</p>"},{"location":"linq/first-single-differences/#3-default-dyr-dstyi","title":"3. Default D\u0259y\u0259r D\u0259st\u0259yi","text":"<p>\u018fg\u0259r kolleksiyada elementin olmamas\u0131 ehtimal\u0131n\u0131 n\u0259z\u0259r\u0259 al\u0131rs\u0131n\u0131zsa, <code>FirstOrDefault</code> v\u0259 ya <code>SingleOrDefault</code> metodlar\u0131ndan istifad\u0259 ed\u0259 bil\u0259rsiniz.</p> <p>\u2705 Misal:</p> <pre><code>var firstCustomer = customers.FirstOrDefault(c =&gt; c.IsActive);\nif (firstCustomer != null)\n{\n    Console.WriteLine(firstCustomer.Name);\n}\n</code></pre> <pre><code>var singleCustomer = customers.SingleOrDefault(c =&gt; c.Id == 1);\nif (singleCustomer != null)\n{\n    Console.WriteLine(singleCustomer.Name);\n}\n</code></pre>"},{"location":"linq/first-single-differences/#4-performans-frqlri","title":"4. Performans F\u0259rql\u0259ri","text":"<ul> <li>First: \u0130lk uy\u011fun elementi tapd\u0131qdan sonra prosesi dayand\u0131r\u0131r, buna g\u00f6r\u0259 daha s\u00fcr\u0259tlidir.</li> <li>Single: Kolleksiyan\u0131 b\u00fct\u00f6vl\u00fckd\u0259 skan edir, \u00e7\u00fcnki unikal elementi yoxlamal\u0131d\u0131r v\u0259 bu s\u0259b\u0259bd\u0259n daha yava\u015fd\u0131r.</li> </ul> <p>\u2705 Performans M\u00fcqayis\u0259si:</p> <pre><code>var stopwatch = Stopwatch.StartNew();\n\n// First istifad\u0259si\nvar firstCustomer = customers.First(c =&gt; c.IsActive);\nstopwatch.Stop();\nConsole.WriteLine($\"First Vaxt\u0131: {stopwatch.ElapsedMilliseconds} ms\");\n\nstopwatch.Restart();\n\n// Single istifad\u0259si\nvar singleCustomer = customers.Single(c =&gt; c.Id == 1);\nstopwatch.Stop();\nConsole.WriteLine($\"Single Vaxt\u0131: {stopwatch.ElapsedMilliseconds} ms\");\n</code></pre>"},{"location":"linq/first-single-differences/#5-hans-halda-hans-metod-istifad-olunmaldr","title":"5. Hans\u0131 Halda Hans\u0131 Metod \u0130stifad\u0259 Olunmal\u0131d\u0131r?","text":"Metod \u0130stifad\u0259 Hallar\u0131 First \u0130lk uy\u011fun elementi almaq ist\u0259dikd\u0259. FirstOrDefault \u018fg\u0259r element yoxdursa, <code>null</code> v\u0259 ya default d\u0259y\u0259r qaytarmaq \u00fc\u00e7\u00fcn. Single Kolleksiyada yaln\u0131z bir element oldu\u011funa \u0259min oldu\u011funuzda. SingleOrDefault Kolleksiyada maksimum bir element olarsa qaytarmaq \u00fc\u00e7\u00fcn. <p>Bu c\u0259dv\u0259l\u0259 \u0259sas\u0259n, hans\u0131 metodun hans\u0131 v\u0259ziyy\u0259td\u0259 istifad\u0259 olunaca\u011f\u0131n\u0131 asanl\u0131qla se\u00e7\u0259 bil\u0259rsiniz.</p>"},{"location":"linq/lazy-evaluation-performance/","title":"LINQ: Lazy Evaluation v\u0259 Performansa T\u0259siri","text":"<p>LINQ sor\u011fular\u0131n\u0131n nec\u0259 i\u015fl\u0259diyini anlamaq, h\u0259m performans\u0131 optimalla\u015fd\u0131rmaq, h\u0259m d\u0259 g\u00f6zl\u0259nilm\u0259z n\u0259tic\u0259l\u0259rin qar\u015f\u0131s\u0131n\u0131 almaq \u00fc\u00e7\u00fcn vacibdir. LINQ sor\u011fular\u0131 standart olaraq \u201clazy evaluation\u201d (t\u0259xir\u0259 sal\u0131nm\u0131\u015f icra) prinsipi il\u0259 i\u015fl\u0259yir.</p>"},{"location":"linq/lazy-evaluation-performance/#1-lazy-evaluation-ndir","title":"1. Lazy Evaluation N\u0259dir?","text":"<p>Lazy evaluation, bir LINQ sor\u011fusunun ancaq n\u0259tic\u0259 t\u0259l\u0259b edildikd\u0259 i\u015fl\u0259dilm\u0259sidir. Bu metod laz\u0131ms\u0131z sor\u011fular\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131r v\u0259 yadda\u015f istifad\u0259sini azald\u0131r.</p> <p>\u2705 Misal:</p> <pre><code>var query = numbers.Where(n =&gt; n &gt; 10);\n\n// Sor\u011fu burada i\u015fl\u0259mir, sad\u0259c\u0259 t\u0259rif edilir.\nforeach (var number in query)\n{\n    Console.WriteLine(number);\n}\n// Sor\u011fu yaln\u0131z burada i\u015fl\u0259y\u0259c\u0259k.\n</code></pre> <p>Bu n\u00fcmun\u0259d\u0259 <code>query</code> sad\u0259c\u0259 t\u0259yin edilir, ancaq foreach i\u015fl\u0259dikd\u0259 veril\u0259nl\u0259r bazas\u0131na sor\u011fu g\u00f6nd\u0259rilir.</p>"},{"location":"linq/lazy-evaluation-performance/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/lazy-evaluation-performance/#shv-istifad-lazmsz-sorgu-zncirlri-yaratmaq","title":"S\u0259hv \u0130stifad\u0259: Laz\u0131ms\u0131z sor\u011fu z\u0259ncirl\u0259ri yaratmaq","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>var query = numbers.Where(n =&gt; n &gt; 10).OrderBy(n =&gt; n).Skip(5);\n// Sor\u011fu laz\u0131ms\u0131z \u015f\u0259kild\u0259 i\u015fl\u0259nir v\u0259 performansa t\u0259sir edir\nvar result = query.ToList();\n</code></pre> <p>Bu metod h\u0259r bir add\u0131m\u0131 laz\u0131ms\u0131z i\u015fl\u0259y\u0259r\u0259k veril\u0259nl\u0259r bazas\u0131nda a\u011f\u0131r bir sor\u011fuya \u00e7evril\u0259 bil\u0259r.</p>"},{"location":"linq/lazy-evaluation-performance/#duzgun-istifad-yalnz-ehtiyac-duyulan-mliyyatlar-yerin-yetirmk","title":"D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z ehtiyac duyulan \u0259m\u0259liyyatlar\u0131 yerin\u0259 yetirm\u0259k","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>var result = numbers\n    .Where(n =&gt; n &gt; 10)\n    .OrderBy(n =&gt; n)\n    .Skip(5)\n    .Take(10)\n    .ToList();\n</code></pre> <p>Bu yana\u015fma yaln\u0131z ehtiyac duyulan m\u0259lumat\u0131 i\u015fl\u0259y\u0259r\u0259k performans\u0131 art\u0131r\u0131r.</p>"},{"location":"linq/lazy-evaluation-performance/#3-immediate-execution-drhal-icra","title":"3. Immediate Execution (D\u0259rhal \u0130cra)","text":"<p>\u018fg\u0259r bir sor\u011funun d\u0259rhal i\u015fl\u0259nm\u0259sini ist\u0259yirsinizs\u0259, <code>ToList()</code>, <code>Count()</code>, v\u0259 ya <code>First()</code> kimi metodlardan istifad\u0259 ed\u0259 bil\u0259rsiniz.</p> <p>\u2705 Misal:</p> <pre><code>var result = numbers.Where(n =&gt; n &gt; 10).ToList();\n// Sor\u011fu burada d\u0259rhal i\u015fl\u0259y\u0259c\u0259k.\n</code></pre> <p>Immediate execution, x\u00fcsusil\u0259 n\u0259tic\u0259l\u0259rin bir ne\u00e7\u0259 d\u0259f\u0259 istifad\u0259 edil\u0259c\u0259yi hallarda faydal\u0131d\u0131r.</p>"},{"location":"linq/lazy-evaluation-performance/#4-performans-problemi-multiple-iteration-tkrarlanan-islm","title":"4. Performans Problemi: Multiple Iteration (T\u0259krarlanan \u0130\u015fl\u0259m\u0259)","text":"<p>Bir LINQ sor\u011fusu bir ne\u00e7\u0259 d\u0259f\u0259 icraya m\u0259ruz qalarsa, h\u0259r d\u0259f\u0259 yenid\u0259n i\u015fl\u0259n\u0259c\u0259k.</p> <p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>var query = numbers.Where(n =&gt; n &gt; 10);\n\nConsole.WriteLine(query.Count()); // Sor\u011fu i\u015fl\u0259yir\nforeach (var number in query) // Sor\u011fu yenid\u0259n i\u015fl\u0259yir\n{\n    Console.WriteLine(number);\n}\n</code></pre> <p>Bu yana\u015fma eyni sor\u011funun iki d\u0259f\u0259 icra edilm\u0259sin\u0259 s\u0259b\u0259b olur.</p> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>var result = numbers.Where(n =&gt; n &gt; 10).ToList();\n\nConsole.WriteLine(result.Count());\nforeach (var number in result)\n{\n    Console.WriteLine(number);\n}\n</code></pre> <p>Bu metod, sor\u011funun yaln\u0131z bir d\u0259f\u0259 i\u015fl\u0259nm\u0259sini t\u0259min edir.</p>"},{"location":"linq/lazy-evaluation-performance/#5-performans-testi","title":"5. Performans Testi","text":"<p>Lazy evaluation il\u0259 immediate execution aras\u0131ndak\u0131 f\u0259rqi \u00f6l\u00e7m\u0259k \u00fc\u00e7\u00fcn:</p> <p>\u2705 Performans Testi N\u00fcmun\u0259si:</p> <pre><code>var stopwatch = Stopwatch.StartNew();\n\n// Lazy Evaluation\nvar query = numbers.Where(n =&gt; n &gt; 10);\nstopwatch.Stop();\nConsole.WriteLine($\"Lazy Evaluation Vaxt\u0131: {stopwatch.ElapsedMilliseconds} ms\");\n\nstopwatch.Restart();\n\n// Immediate Execution\nvar result = numbers.Where(n =&gt; n &gt; 10).ToList();\nstopwatch.Stop();\nConsole.WriteLine($\"Immediate Execution Vaxt\u0131: {stopwatch.ElapsedMilliseconds} ms\");\n</code></pre>"},{"location":"linq/lazy-evaluation-performance/#6-lazy-evaluation-un-ustunluklri-v-catsmazlqlar","title":"6. Lazy Evaluation-un \u00dcst\u00fcnl\u00fckl\u0259ri v\u0259 \u00c7at\u0131\u015fmazl\u0131qlar\u0131","text":"\u00dcst\u00fcnl\u00fckl\u0259r \u00c7at\u0131\u015fmazl\u0131qlar Yadda\u015f istifad\u0259sini optimalla\u015fd\u0131r\u0131r T\u0259krarlanan iterasiya performans\u0131 a\u015fa\u011f\u0131 sala bil\u0259r Sor\u011fular yaln\u0131z ehtiyac olduqda i\u015fl\u0259nir Kompleks sor\u011fu z\u0259ncirl\u0259ri a\u011f\u0131r veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131 yarada bil\u0259r M\u0259lumat tam y\u00fckl\u0259nm\u0259d\u0259n emal edil\u0259 bil\u0259r Sor\u011fular\u0131n g\u00f6zl\u0259nilm\u0259z vaxtlarda i\u015fl\u0259m\u0259sin\u0259 s\u0259b\u0259b ola bil\u0259r"},{"location":"linq/pagination-take-skip/","title":"LINQ il\u0259 S\u0259hif\u0259l\u0259m\u0259: Take v\u0259 Skip \u0130stifad\u0259si","text":"<p>B\u00f6y\u00fck veril\u0259r \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259rk\u0259n m\u0259lumat\u0131n m\u00fc\u0259yy\u0259n hiss\u0259sini almaq v\u0259 ya s\u0259hif\u0259l\u0259m\u0259 il\u0259 m\u0259lumatlar\u0131 g\u0259tirm\u0259k geni\u015f yay\u0131lm\u0131\u015f bir ehtiyacd\u0131r. LINQ-d\u0259 <code>Take</code> v\u0259 <code>Skip</code> metodlar\u0131 bu ehtiyac\u0131 qar\u015f\u0131lamaq \u00fc\u00e7\u00fcn istifad\u0259 olunur.</p>"},{"location":"linq/pagination-take-skip/#1-take-v-skip-ndir","title":"1. Take v\u0259 Skip N\u0259dir?","text":"<ul> <li><code>Take(n)</code> \u2192 Veril\u0259n sayda elementi g\u00f6t\u00fcr\u00fcr.</li> <li><code>Skip(n)</code> \u2192 Veril\u0259n sayda elementi \u00f6t\u00fcr\u00fcr.</li> </ul> <p>Bu iki metod birl\u0259\u015fdirildikd\u0259 s\u0259hif\u0259l\u0259m\u0259 (pagination) effektiv v\u0259 performansl\u0131 \u015f\u0259kild\u0259 h\u0259yata ke\u00e7iril\u0259 bil\u0259r.</p>"},{"location":"linq/pagination-take-skip/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/pagination-take-skip/#shv-istifad-butun-verilri-vvlc-gtirmk","title":"S\u0259hv \u0130stifad\u0259: B\u00fct\u00fcn veril\u0259ri \u0259vv\u0259lc\u0259 g\u0259tirm\u0259k","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>var allData = data.ToList(); // B\u00fct\u00fcn veril\u0259ri yadda\u015fa y\u00fckl\u0259yir\nvar pageData = allData.Skip(10).Take(10).ToList(); // Laz\u0131ms\u0131z yadda\u015f istifad\u0259si\n</code></pre> <p>Bu yana\u015fma laz\u0131ms\u0131z yer\u0259 b\u00fct\u00fcn veril\u0259ri yadda\u015fa g\u0259tirir v\u0259 performans itkisin\u0259 s\u0259b\u0259b olur.</p>"},{"location":"linq/pagination-take-skip/#duzgun-istifad-take-v-skip-metodlarn-birbasa-sorguda-istifad-etmk","title":"D\u00fczg\u00fcn \u0130stifad\u0259: <code>Take</code> v\u0259 <code>Skip</code> metodlar\u0131n\u0131 birba\u015fa sor\u011fuda istifad\u0259 etm\u0259k","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>var pageData = data.Skip(10).Take(10).ToList(); // Sor\u011fu yaln\u0131z laz\u0131mi m\u0259lumat\u0131 g\u0259tirir\n</code></pre> <p>Bu yana\u015fma veril\u0259nl\u0259r bazas\u0131nda yaln\u0131z ehtiyac duyulan m\u0259lumat\u0131 g\u0259tirir v\u0259 yadda\u015f istifad\u0259sini optimalla\u015fd\u0131r\u0131r.</p>"},{"location":"linq/pagination-take-skip/#3-shiflm-numunsi","title":"3. S\u0259hif\u0259l\u0259m\u0259 N\u00fcmun\u0259si","text":"<p>A\u015fa\u011f\u0131dak\u0131 kod ikinci s\u0259hif\u0259d\u0259n 10 elementi g\u0259tirir:</p> <pre><code>int pageNumber = 2;\nint pageSize = 10;\n\nvar pageData = data\n    .Skip((pageNumber - 1) * pageSize)\n    .Take(pageSize)\n    .ToList();\n\nforeach (var item in pageData)\n{\n    Console.WriteLine(item);\n}\n</code></pre> <p>\ud83d\udd39 N\u0259tic\u0259: 2-ci s\u0259hif\u0259d\u0259n 10 element g\u0259tirilir.</p>"},{"location":"linq/pagination-take-skip/#4-performans-tkmillsdirmsi","title":"4. Performans T\u0259kmill\u0259\u015fdirm\u0259si","text":"<p>B\u00f6y\u00fck veril\u0259r \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259rk\u0259n <code>AsQueryable()</code> istifad\u0259 ed\u0259r\u0259k performans\u0131 art\u0131rmaq m\u00fcmk\u00fcnd\u00fcr:</p> <p>\u2705 M\u0259s\u0259l\u0259n:</p> <pre><code>var pageData = context.Customers\n    .AsQueryable()\n    .Skip(20)\n    .Take(10)\n    .ToList();\n</code></pre> <p>Bu sor\u011fu yaln\u0131z ehtiyac duyulan m\u0259lumat\u0131 g\u0259tirir v\u0259 veril\u0259nl\u0259r bazas\u0131nda optimalla\u015fd\u0131r\u0131lm\u0131\u015f \u015f\u0259kild\u0259 i\u015fl\u0259yir.</p>"},{"location":"linq/pagination-take-skip/#5-dinamik-shiflm-metodu","title":"5. Dinamik S\u0259hif\u0259l\u0259m\u0259 Metodu","text":"<p>\u0130stifad\u0259\u00e7i giri\u015fin\u0259 g\u00f6r\u0259 s\u0259hif\u0259l\u0259m\u0259ni dinamik \u015f\u0259kild\u0259 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn metod yaratmaq m\u00fcmk\u00fcnd\u00fcr:</p> <p>\u2705 M\u0259s\u0259l\u0259n:</p> <pre><code>public List&lt;T&gt; GetPagedData&lt;T&gt;(IQueryable&lt;T&gt; query, int pageNumber, int pageSize)\n{\n    return query\n        .Skip((pageNumber - 1) * pageSize)\n        .Take(pageSize)\n        .ToList();\n}\n\n// Metodun istifad\u0259si\nvar customersPage = GetPagedData(context.Customers, 3, 15);\n</code></pre> <p>\ud83d\udd39 Bu metod s\u0259hif\u0259 \u00f6l\u00e7\u00fcs\u00fcn\u00fc v\u0259 s\u0259hif\u0259 n\u00f6mr\u0259sini dinamik idar\u0259 etm\u0259y\u0259 imkan verir.</p>"},{"location":"linq/pagination-take-skip/#6-umumi-shif-saysnn-hesablanmas","title":"6. \u00dcmumi S\u0259hif\u0259 Say\u0131s\u0131n\u0131n Hesablanmas\u0131","text":"<p>S\u0259hif\u0259l\u0259m\u0259 zaman\u0131 \u00fcmumi s\u0259hif\u0259 say\u0131n\u0131 hesablamaq \u00fc\u00e7\u00fcn veril\u0259nl\u0259rin \u00fcmumi say\u0131n\u0131 istifad\u0259 etm\u0259k laz\u0131md\u0131r:</p> <p>\u2705 M\u0259s\u0259l\u0259n:</p> <pre><code>int totalItems = context.Customers.Count();\nint pageSize = 10;\nint totalPages = (int)Math.Ceiling((double)totalItems / pageSize);\n\nConsole.WriteLine($\"\u00dcmumi S\u0259hif\u0259 Say\u0131: {totalPages}\");\n</code></pre> <p>\ud83d\udd39 N\u0259tic\u0259: \u00dcmumi s\u0259hif\u0259 say\u0131s\u0131 m\u00fc\u0259yy\u0259n edilir.</p>"},{"location":"linq/pagination-take-skip/#7-irli-v-geri-kecid","title":"7. \u0130r\u0259li v\u0259 Geri Ke\u00e7id","text":"<p>\u0130stifad\u0259\u00e7il\u0259rin s\u0259hif\u0259l\u0259r aras\u0131nda rahat h\u0259r\u0259k\u0259t etm\u0259si \u00fc\u00e7\u00fcn s\u0259hif\u0259 d\u0259yi\u015fm\u0259 mexanizmi qurula bil\u0259r:</p> <p>\u2705 M\u0259s\u0259l\u0259n:</p> <pre><code>int currentPage = 1; // M\u00f6vcud s\u0259hif\u0259\n\n// N\u00f6vb\u0259ti s\u0259hif\u0259y\u0259 ke\u00e7id\nvar nextPageData = data\n    .Skip(currentPage * pageSize)\n    .Take(pageSize)\n    .ToList();\n\n// \u018fvv\u0259lki s\u0259hif\u0259y\u0259 ke\u00e7id\ncurrentPage--;\n\nvar previousPageData = data\n    .Skip((currentPage - 1) * pageSize)\n    .Take(pageSize)\n    .ToList();\n</code></pre> <p>\ud83d\udd39 Bu yana\u015fma istifad\u0259\u00e7il\u0259rin rahat \u015f\u0259kild\u0259 s\u0259hif\u0259l\u0259r aras\u0131nda g\u0259zm\u0259sin\u0259 imkan verir.</p>"},{"location":"linq/pagination-take-skip/#8-shiflm-il-api-cavab-paged-result","title":"8. S\u0259hif\u0259l\u0259m\u0259 il\u0259 API Cavab\u0131 (Paged Result)","text":"<p>Bir API cavab\u0131nda s\u0259hif\u0259l\u0259m\u0259 m\u0259lumatlar\u0131n\u0131 qaytarmaq \u00fc\u00e7\u00fcn x\u00fcsusi bir <code>PagedResult&lt;T&gt;</code> modeli yaratmaq olar:</p> <p>\u2705 M\u0259s\u0259l\u0259n:</p> <pre><code>public class PagedResult&lt;T&gt;\n{\n    public List&lt;T&gt; Items { get; set; }\n    public int TotalCount { get; set; }\n    public int TotalPages { get; set; }\n}\n\npublic PagedResult&lt;T&gt; GetPagedResult&lt;T&gt;(IQueryable&lt;T&gt; query, int pageNumber, int pageSize)\n{\n    int totalCount = query.Count();\n    var items = query\n        .Skip((pageNumber - 1) * pageSize)\n        .Take(pageSize)\n        .ToList();\n\n    return new PagedResult&lt;T&gt;\n    {\n        Items = items,\n        TotalCount = totalCount,\n        TotalPages = (int)Math.Ceiling((double)totalCount / pageSize)\n    };\n}\n\n// Metodun istifad\u0259si\nvar customersPage = GetPagedResult(context.Customers, 2, 10);\nConsole.WriteLine($\"\u00dcmumi M\u0259lumat Say\u0131: {customersPage.TotalCount}\");\nConsole.WriteLine($\"\u00dcmumi S\u0259hif\u0259 Say\u0131: {customersPage.TotalPages}\");\n</code></pre> <p>\ud83d\udd39 Bu yana\u015fma API-l\u0259rd\u0259 s\u0259hif\u0259l\u0259nmi\u015f n\u0259tic\u0259l\u0259rin asanl\u0131qla qaytar\u0131lmas\u0131n\u0131 t\u0259min edir.</p>"},{"location":"linq/pagination-take-skip/#ntic","title":"N\u0259tic\u0259","text":"Metod \u0130stifad\u0259 Hal\u0131 Take(n) \u0130lk <code>n</code> elementin g\u00f6t\u00fcr\u00fclm\u0259si \u00fc\u00e7\u00fcn. Skip(n) \u0130lk <code>n</code> elementi \u00f6t\u00fcr\u0259r\u0259k qalanlar\u0131 g\u0259tirm\u0259k \u00fc\u00e7\u00fcn. Skip().Take() M\u0259lumatlar\u0131 s\u0259hif\u0259l\u0259m\u0259kl\u0259 performansl\u0131 \u015f\u0259kild\u0259 almaq \u00fc\u00e7\u00fcn."},{"location":"linq/performance-orderby/","title":"OrderBy il\u0259 Performansl\u0131 S\u0131ralama","text":""},{"location":"linq/performance-orderby/#linq-il-performansl-sralama-orderby-istifadsi","title":"LINQ il\u0259 Performansl\u0131 S\u0131ralama: <code>OrderBy</code> \u0130stifad\u0259si","text":"<p>B\u00f6y\u00fck veril\u0259r \u00fcz\u0259rind\u0259 s\u0131ralama \u0259m\u0259liyyatlar\u0131 (sorting) performansa ciddi t\u0259sir ed\u0259 bil\u0259r. LINQ-d\u0259 <code>OrderBy</code> v\u0259 <code>ThenBy</code> metodlar\u0131 istifad\u0259 olunaraq s\u0131ralama prosesi effektiv \u015f\u0259kild\u0259 h\u0259yata ke\u00e7iril\u0259 bil\u0259r.</p>"},{"location":"linq/performance-orderby/#1-orderby-v-thenby-ndir","title":"1. <code>OrderBy</code> v\u0259 <code>ThenBy</code> N\u0259dir?","text":"<ul> <li><code>OrderBy</code> \u2192 M\u0259lumat\u0131 veril\u0259n s\u00fctuna g\u00f6r\u0259 artan s\u0131rada s\u0131ralay\u0131r.</li> <li><code>ThenBy</code> \u2192 \u018fsas s\u0131ralamadan sonra ikinci d\u0259r\u0259c\u0259li bir s\u0131ralama t\u0259tbiq edir.</li> </ul> <p>\u2705 \u0130stifad\u0259 N\u00fcmun\u0259si:</p> <pre><code>var sortedData = data\n    .OrderBy(x =&gt; x.Name)\n    .ThenBy(x =&gt; x.Age)\n    .ToList();\n</code></pre> <p>\ud83d\udd39 Bu kodun i\u015fi: 1. <code>Name</code> s\u00fctununa g\u00f6r\u0259 artan s\u0131ralama apar\u0131r. 2. <code>Name</code> d\u0259y\u0259rl\u0259ri eyni olduqda, <code>Age</code> s\u00fctununa g\u00f6r\u0259 s\u0131ralay\u0131r.</p>"},{"location":"linq/performance-orderby/#2-shv-v-duzgun-istifad","title":"2. S\u0259hv v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/performance-orderby/#shv-istifad-orderby-metodunu-bir-nec-df-cagrmaq","title":"S\u0259hv \u0130stifad\u0259: <code>OrderBy</code> metodunu bir ne\u00e7\u0259 d\u0259f\u0259 \u00e7a\u011f\u0131rmaq","text":"<p>\u274c S\u0259hv \u0130stifad\u0259:</p> <pre><code>var sortedData = data\n    .OrderBy(x =&gt; x.Name)\n    .OrderBy(x =&gt; x.Age) // \u0130kinci OrderBy birincini \u0259v\u0259z edir!\n    .ToList();\n</code></pre> <p>\ud83d\udd39 Problem: H\u0259r <code>OrderBy</code> \u00e7a\u011f\u0131r\u0131\u015f\u0131 \u0259vv\u0259lki s\u0131ralaman\u0131 l\u0259\u011fv edir, n\u0259tic\u0259d\u0259 yaln\u0131z son <code>OrderBy</code> i\u015fl\u0259yir.</p>"},{"location":"linq/performance-orderby/#duzgun-istifad-thenby-il-birlsdirilmis-sralama","title":"D\u00fczg\u00fcn \u0130stifad\u0259: <code>ThenBy</code> il\u0259 birl\u0259\u015fdirilmi\u015f s\u0131ralama","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259:</p> <pre><code>var sortedData = data\n    .OrderBy(x =&gt; x.Name)\n    .ThenBy(x =&gt; x.Age)\n    .ToList();\n</code></pre> <p>\ud83d\udd39 N\u0259tic\u0259: \u0130lk <code>OrderBy</code> \u0259sas s\u0131ralaman\u0131 edir, <code>ThenBy</code> is\u0259 ikinci d\u0259r\u0259c\u0259li s\u0131ralaman\u0131 t\u0259min edir.</p>"},{"location":"linq/performance-orderby/#3-sralama-performansn-artrmaq","title":"3. S\u0131ralama Performans\u0131n\u0131 Art\u0131rmaq","text":"<p>B\u00f6y\u00fck veril\u0259r \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259rk\u0259n performans\u0131 optimalla\u015fd\u0131rmaq \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 texnikalardan istifad\u0259 edin.</p>"},{"location":"linq/performance-orderby/#1-asqueryable-il-sorgunu-verilnlr-bazasnda-icra-etmk","title":"1. <code>AsQueryable()</code> il\u0259 Sor\u011funu Veril\u0259nl\u0259r Bazas\u0131nda \u0130cra Etm\u0259k","text":"<p>LINQ sor\u011fular\u0131n\u0131 veril\u0259nl\u0259r bazas\u0131nda icra etm\u0259k, onlar\u0131 yadda\u015fda i\u015fl\u0259tm\u0259kd\u0259n daha s\u00fcr\u0259tlidir.</p> <p>\u2705 Misal:</p> <pre><code>var sortedData = context.Customers\n    .AsQueryable()\n    .OrderBy(x =&gt; x.Name)\n    .ToList();\n</code></pre> <p>\ud83d\udd39 Fayda: - S\u0131ralama veril\u0259nl\u0259r bazas\u0131nda icra olunur, yaln\u0131z laz\u0131mi m\u0259lumat RAM-\u0259 g\u0259tirilir.</p>"},{"location":"linq/performance-orderby/#2-verilnlr-bazasnda-indekslrdn-istifad-etmk","title":"2. Veril\u0259nl\u0259r Bazas\u0131nda \u0130ndeksl\u0259rd\u0259n \u0130stifad\u0259 Etm\u0259k","text":"<p>\u0130ndeksl\u0259r (<code>INDEX</code>) s\u0131ralama \u0259m\u0259liyyatlar\u0131n\u0131 s\u00fcr\u0259tl\u0259ndirir.</p> <p>\u2705 SQL il\u0259 \u0130ndeks Yaratmaq:</p> <pre><code>CREATE INDEX idx_name ON Customers (Name);\n</code></pre> <p>\ud83d\udd39 Fayda: - S\u0131ralama apar\u0131lan s\u00fctun indeksl\u0259ndikd\u0259, veril\u0259nl\u0259r bazas\u0131 s\u0131ralama prosesini daha s\u00fcr\u0259tli icra edir.</p>"},{"location":"linq/performance-orderby/#3-azalan-sralama-descending-order","title":"3. Azalan S\u0131ralama (<code>Descending Order</code>)","text":"<p><code>OrderByDescending</code> metodu artan deyil, azalan (descending) s\u0131ralama apar\u0131r.</p> <p>\u2705 Misal:</p> <pre><code>var sortedData = data.OrderByDescending(x =&gt; x.Date).ToList();\n</code></pre> <p>\ud83d\udd39 Bu kod <code>Date</code> s\u00fctununa g\u00f6r\u0259 azalan s\u0131ralama apar\u0131r.</p>"},{"location":"linq/performance-orderby/#4-dinamik-sralama-dynamic-sorting","title":"4. Dinamik S\u0131ralama (<code>Dynamic Sorting</code>)","text":"<p>\u0130stifad\u0259\u00e7i t\u0259r\u0259find\u0259n se\u00e7il\u0259n s\u00fctuna \u0259sas\u0259n dinamik s\u0131ralama aparmaq olar.</p> <p>\u2705 Misal:</p> <pre><code>public List&lt;T&gt; SortData&lt;T&gt;(IQueryable&lt;T&gt; query, string sortColumn, bool ascending)\n{\n    var parameter = Expression.Parameter(typeof(T), \"x\");\n    var property = Expression.Property(parameter, sortColumn);\n    var lambda = Expression.Lambda&lt;Func&lt;T, object&gt;&gt;(\n        Expression.Convert(property, typeof(object)), parameter\n    );\n\n    return ascending\n        ? query.OrderBy(lambda).ToList()\n        : query.OrderByDescending(lambda).ToList();\n}\n\n// Metodun istifad\u0259si:\nvar sortedCustomers = SortData(context.Customers, \"Name\", true);\n</code></pre> <p>\ud83d\udd39 N\u0259tic\u0259: - \u0130stifad\u0259\u00e7i dinamik olaraq ist\u0259diyi s\u00fctunu se\u00e7ir. - Artan v\u0259 ya azalan s\u0131ralama se\u00e7imi m\u00fcmk\u00fcnd\u00fcr.</p>"},{"location":"linq/performance-orderby/#5-coxsayl-sutunlarla-sralama-multiple-column-sorting","title":"5. \u00c7oxsayl\u0131 S\u00fctunlarla S\u0131ralama (<code>Multiple Column Sorting</code>)","text":"<p>M\u0259lumatlar\u0131 bir ne\u00e7\u0259 s\u00fctuna \u0259sas\u0259n s\u0131ralamaq \u00fc\u00e7\u00fcn <code>ThenBy</code> v\u0259 <code>ThenByDescending</code> istifad\u0259 edilir.</p> <p>\u2705 Misal:</p> <pre><code>var sortedData = data\n    .OrderBy(x =&gt; x.LastName)\n    .ThenByDescending(x =&gt; x.FirstName)\n    .ToList();\n</code></pre> <p>\ud83d\udd39 Bu kod nec\u0259 i\u015fl\u0259yir? 1. \u018fvv\u0259lc\u0259 <code>LastName</code> s\u00fctununa g\u00f6r\u0259 artan s\u0131ralama apar\u0131r. 2. \u018fg\u0259r <code>LastName</code> eyni olarsa, <code>FirstName</code>-\u0259 g\u00f6r\u0259 azalan s\u0131ralama edir.</p>"},{"location":"linq/performance-orderby/#6-performans-testi-performance-benchmarking","title":"6. Performans Testi (<code>Performance Benchmarking</code>)","text":"<p>S\u0131ralama performans\u0131n\u0131 \u00f6l\u00e7m\u0259k \u00fc\u00e7\u00fcn <code>Stopwatch</code> istifad\u0259 edin.</p> <p>\u2705 Misal:</p> <pre><code>var stopwatch = Stopwatch.StartNew();\n\n// S\u0131ralama icra edilir\nvar sortedData = data.OrderBy(x =&gt; x.Name).ToList();\n\nstopwatch.Stop();\nConsole.WriteLine($\"S\u0131ralama vaxt\u0131: {stopwatch.ElapsedMilliseconds} ms\");\n</code></pre> <p>\ud83d\udd39 Bu yana\u015fma real d\u00fcnya t\u0259tbiql\u0259rind\u0259 performans\u0131 izl\u0259m\u0259k \u00fc\u00e7\u00fcn faydal\u0131d\u0131r.</p>"},{"location":"linq/performance-orderby/#ntic-v-tovsiylr","title":"N\u0259tic\u0259 v\u0259 T\u00f6vsiy\u0259l\u0259r","text":"Metod \u0130stifad\u0259 Hal\u0131 OrderBy Veril\u0259nl\u0259r artan s\u0131rada s\u0131raland\u0131qda. OrderByDescending Veril\u0259nl\u0259r azalan s\u0131rada s\u0131raland\u0131qda. ThenBy \u0130kinci d\u0259r\u0259c\u0259li artan s\u0131ralama \u00fc\u00e7\u00fcn. ThenByDescending \u0130kinci d\u0259r\u0259c\u0259li azalan s\u0131ralama \u00fc\u00e7\u00fcn. AsQueryable Veril\u0259nl\u0259r bazas\u0131nda s\u0131ralama icra etm\u0259k \u00fc\u00e7\u00fcn. \u0130ndeksl\u0259r (<code>INDEX</code>) S\u0131ralama performans\u0131n\u0131 art\u0131rmaq \u00fc\u00e7\u00fcn. Dinamik S\u0131ralama \u0130stifad\u0259\u00e7i t\u0259r\u0259find\u0259n dinamik s\u00fctun se\u00e7imi t\u0259l\u0259b olunanda. <p>\ud83d\ude80 \u018fsas Qaydalar: - S\u0131ralama veril\u0259nl\u0259r bazas\u0131nda (<code>AsQueryable</code>) icra olunmal\u0131d\u0131r. - Bir ne\u00e7\u0259 <code>OrderBy</code> \u00e7a\u011f\u0131r\u0131\u015f\u0131 yerin\u0259 <code>ThenBy</code> istifad\u0259 edin. - \u0130ndeksl\u0259r (<code>INDEX</code>) yaradaraq veril\u0259nl\u0259r bazas\u0131 performans\u0131n\u0131 art\u0131r\u0131n. - S\u0131ralama performans\u0131n\u0131 \u00f6l\u00e7m\u0259k \u00fc\u00e7\u00fcn <code>Stopwatch</code> istifad\u0259 edin.</p>"},{"location":"linq/performance/","title":"Performans Optimizasiyas\u0131","text":"<p>Performans optimizasiyas\u0131, x\u00fcsusil\u0259 b\u00f6y\u00fck miqyasl\u0131 t\u0259tbiql\u0259rd\u0259 resurs istehlak\u0131n\u0131 azaltmaq v\u0259 istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sini yax\u015f\u0131la\u015fd\u0131rmaq \u00fc\u00e7\u00fcn h\u0259yati \u0259h\u0259miyy\u0259t da\u015f\u0131y\u0131r. Yanl\u0131\u015f t\u0259tbiql\u0259r sistemi yava\u015flada, h\u0259tta \u00e7\u00f6km\u0259sin\u0259 s\u0259b\u0259b ola bil\u0259r.  </p>"},{"location":"linq/performance/#1-lazmsz-mlumat-cxarmaq","title":"1. Laz\u0131ms\u0131z M\u0259lumat \u00c7\u0131xarmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z b\u00fct\u00fcn s\u00fctunlar\u0131 sor\u011fuya daxil etm\u0259k.  </p> <pre><code>var products = context.Products.ToList(); // B\u00fct\u00fcn s\u00fctunlar g\u0259tirilir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z laz\u0131m olan s\u00fctunlar\u0131 \u00e7\u0131xar\u0131n.  </p> <pre><code>var productNames = context.Products\n    .Select(p =&gt; new { p.Name, p.Price })\n    .ToList();\n</code></pre>"},{"location":"linq/performance/#2-eager-loading-v-lazy-loading-i-yanls-idar-etmk","title":"2. Eager Loading v\u0259 Lazy Loading-i Yanl\u0131\u015f \u0130dar\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z <code>Include</code> istifad\u0259si il\u0259 h\u0259ddind\u0259n art\u0131q m\u0259lumat y\u00fckl\u0259m\u0259k.  </p> <pre><code>var orders = context.Orders\n    .Include(o =&gt; o.Customer)\n    .Include(o =&gt; o.Products)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Yaln\u0131z ehtiyac duyulan m\u0259lumatlar \u00fc\u00e7\u00fcn <code>Include</code> istifad\u0259 edin.  </p> <pre><code>var orders = context.Orders\n    .Include(o =&gt; o.Products)\n    .Where(o =&gt; o.OrderDate &gt; DateTime.UtcNow.AddMonths(-1))\n    .ToList();\n</code></pre>"},{"location":"linq/performance/#3-n1-sorgu-problemini-nzr-almamaq","title":"3. N+1 Sor\u011fu Problemini N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u018flaq\u0259li m\u0259lumatlar\u0131 ayr\u0131-ayr\u0131 sor\u011fularla g\u0259tirm\u0259k.  </p> <pre><code>var customers = context.Customers.ToList();\nforeach (var customer in customers)\n{\n    var orders = context.Orders.Where(o =&gt; o.CustomerId == customer.Id).ToList();\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: \u018flaq\u0259li m\u0259lumatlar\u0131 t\u0259k sor\u011fuda g\u0259tirin.  </p> <pre><code>var customersWithOrders = context.Customers\n    .Include(c =&gt; c.Orders)\n    .ToList();\n</code></pre>"},{"location":"linq/performance/#4-filtrlmni-yaddasda-aparmaq","title":"4. Filtrl\u0259m\u0259ni Yadda\u015fda Aparmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: B\u00fct\u00fcn m\u0259lumatlar\u0131 yadda\u015fda saxlay\u0131b sonra filtrl\u0259m\u0259k.  </p> <pre><code>var orders = context.Orders.ToList();\nvar recentOrders = orders.Where(o =&gt; o.OrderDate &gt; DateTime.UtcNow.AddMonths(-1));\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Filtrl\u0259m\u0259ni veril\u0259nl\u0259r bazas\u0131nda apar\u0131n.  </p> <pre><code>var recentOrders = context.Orders\n    .Where(o =&gt; o.OrderDate &gt; DateTime.UtcNow.AddMonths(-1))\n    .ToList();\n</code></pre>"},{"location":"linq/performance/#5-indekslri-nzr-almamaq","title":"5. \u0130ndeksl\u0259ri N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sor\u011fular \u00fc\u00e7\u00fcn uy\u011fun indeksl\u0259rin olmamas\u0131.  </p> <pre><code>SELECT * FROM Orders WHERE CustomerId = 123;\n-- Bu sor\u011fu indeks yoxdursa yava\u015f i\u015fl\u0259y\u0259 bil\u0259r.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Tez-tez istifad\u0259 olunan s\u00fctunlar \u00fc\u00e7\u00fcn indeksl\u0259r yarad\u0131n.  </p> <pre><code>CREATE INDEX IX_Orders_CustomerId ON Orders (CustomerId);\n</code></pre>"},{"location":"linq/performance/#6-hddindn-artq-izlm-tracking","title":"6. H\u0259ddind\u0259n Art\u0131q \u0130zl\u0259m\u0259 (Tracking)","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131ms\u0131z izl\u0259m\u0259 (tracking) il\u0259 resurs istehlak\u0131n\u0131 art\u0131rmaq.  </p> <pre><code>var products = context.Products.ToList(); // Tracking aktivdir\nproducts[0].Price = 10; // D\u0259yi\u015fiklikl\u0259r izl\u0259nilir\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011fular\u0131 izl\u0259m\u0259siz icra edin.  </p> <pre><code>var products = context.Products.AsNoTracking().ToList();\n</code></pre>"},{"location":"linq/performance/#7-transaction-istifadsini-ihmal-etmk","title":"7. Transaction \u0130stifad\u0259sini \u0130hmal Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: \u00c7oxlu veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131n\u0131 transaction olmadan icra etm\u0259k.  </p> <pre><code>context.Products.Add(new Product { Name = \"Product1\" });\ncontext.SaveChanges();\ncontext.Orders.Add(new Order { ProductId = 1, Quantity = 10 });\ncontext.SaveChanges();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: B\u00fct\u00fcn \u0259m\u0259liyyatlar\u0131 bir transaction daxilind\u0259 icra edin.  </p> <pre><code>using var transaction = context.Database.BeginTransaction();\ncontext.Products.Add(new Product { Name = \"Product1\" });\ncontext.SaveChanges();\ncontext.Orders.Add(new Order { ProductId = 1, Quantity = 10 });\ncontext.SaveChanges();\ntransaction.Commit();\n</code></pre>"},{"location":"linq/queryable-enumerable-differences/","title":"LINQ: <code>IQueryable</code> v\u0259 <code>IEnumerable</code> Aras\u0131ndak\u0131 F\u0259rql\u0259r","text":"<p>LINQ il\u0259 i\u015fl\u0259y\u0259rk\u0259n <code>IQueryable</code> v\u0259 <code>IEnumerable</code> interfeysl\u0259ri aras\u0131nda d\u00fczg\u00fcn se\u00e7im etm\u0259k, performans v\u0259 sor\u011fu davran\u0131\u015f\u0131 bax\u0131m\u0131ndan kritik \u0259h\u0259miyy\u0259t da\u015f\u0131y\u0131r. Bu iki interfeysin i\u015fl\u0259m\u0259 prinsipl\u0259ri v\u0259 istifad\u0259 sah\u0259l\u0259ri f\u0259rqlidir.  </p>"},{"location":"linq/queryable-enumerable-differences/#1-iqueryable-ndir","title":"1. IQueryable N\u0259dir?","text":"<ul> <li>T\u0259rif: Sor\u011funun veril\u0259nl\u0259r bazas\u0131nda v\u0259 ya uzaq bir m\u0259nb\u0259d\u0259 icra olunmas\u0131na imkan yarad\u0131r.  </li> <li>\u0130\u015fl\u0259m\u0259 Prinsipi: Sor\u011fular veril\u0259nl\u0259r bazas\u0131na g\u00f6nd\u0259rilir v\u0259 orada i\u015fl\u0259nir (deferred execution - gecikmi\u015f icra).  </li> </ul> <p>N\u00fcmun\u0259: </p> <pre><code>using var context = new AppDbContext();\n\nIQueryable&lt;Customer&gt; query = context.Customers.Where(c =&gt; c.IsActive);\nvar activeCustomers = query.ToList(); // Sor\u011fu burada icra olunur\n</code></pre> <p><code>IQueryable</code> say\u0259sind\u0259 sor\u011fu veril\u0259nl\u0259r bazas\u0131nda icra olunur v\u0259 yaln\u0131z ehtiyac duyulan m\u0259lumatlar g\u0259tirilir.  </p>"},{"location":"linq/queryable-enumerable-differences/#2-ienumerable-ndir","title":"2. IEnumerable N\u0259dir?","text":"<ul> <li>T\u0259rif: M\u0259lumat\u0131 yadda\u015fa y\u00fckl\u0259yir v\u0259 orada emal edir.  </li> <li>\u0130\u015fl\u0259m\u0259 Prinsipi: Sor\u011fular yadda\u015fda icra olunur.  </li> </ul> <p>N\u00fcmun\u0259: </p> <pre><code>IEnumerable&lt;Customer&gt; customers = context.Customers.ToList();\nvar activeCustomers = customers.Where(c =&gt; c.IsActive).ToList(); // Filtrl\u0259m\u0259 yadda\u015fda apar\u0131l\u0131r\n</code></pre> <p><code>IEnumerable</code>, b\u00fct\u00fcn m\u0259lumat\u0131 yadda\u015fa y\u00fckl\u0259yir v\u0259 filtrl\u0259m\u0259 prosesi yadda\u015fda h\u0259yata ke\u00e7irilir.  </p>"},{"location":"linq/queryable-enumerable-differences/#3-yanls-v-duzgun-istifad","title":"3. Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/queryable-enumerable-differences/#yanls-istifad-boyuk-verilri-yaddasa-yuklmk","title":"Yanl\u0131\u015f \u0130stifad\u0259: B\u00f6y\u00fck veril\u0259ri yadda\u015fa y\u00fckl\u0259m\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: </p> <pre><code>var allCustomers = context.Customers.ToList(); // B\u00fct\u00fcn m\u0259lumat\u0131 yadda\u015fa y\u00fckl\u0259yir\nvar activeCustomers = allCustomers.Where(c =&gt; c.IsActive).ToList();\n</code></pre> <p>Bu yana\u015fma, b\u00f6y\u00fck veril\u0259r \u00fc\u00e7\u00fcn laz\u0131ms\u0131z yadda\u015f istehlak\u0131na s\u0259b\u0259b olur.  </p>"},{"location":"linq/queryable-enumerable-differences/#duzgun-istifad-sorgular-verilnlr-bazasnda-icra-etmk","title":"D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011fular\u0131 veril\u0259nl\u0259r bazas\u0131nda icra etm\u0259k","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: </p> <pre><code>var activeCustomers = context.Customers\n    .Where(c =&gt; c.IsActive)\n    .ToList(); // Sor\u011fu birba\u015fa veril\u0259nl\u0259r bazas\u0131nda icra olunur\n</code></pre> <p>Bu \u00fcsul yaln\u0131z laz\u0131mi m\u0259lumat\u0131 g\u0259tir\u0259r\u0259k yadda\u015f istehlak\u0131n\u0131 optimalla\u015fd\u0131r\u0131r.  </p>"},{"location":"linq/queryable-enumerable-differences/#4-iqueryable-v-ienumerable-frqlri","title":"4. <code>IQueryable</code> v\u0259 <code>IEnumerable</code> F\u0259rql\u0259ri","text":"X\u00fcsusiyy\u0259t IQueryable IEnumerable \u0130cra Yeri Veril\u0259nl\u0259r bazas\u0131 v\u0259 ya uzaq m\u0259nb\u0259 Yadda\u015f Performans Daha y\u00fcks\u0259k (sor\u011fu m\u0259nb\u0259d\u0259 icra edilir) Daha a\u015fa\u011f\u0131 (m\u0259lumat yadda\u015fda emal edilir) \u0130stifad\u0259 Sah\u0259si B\u00f6y\u00fck veril\u0259r, veril\u0259nl\u0259r bazas\u0131 sor\u011fular\u0131 Ki\u00e7ik veril\u0259r, yadda\u015f emal\u0131 Lazy Execution B\u0259li B\u0259li Sor\u011fu \u0130\u015fl\u0259m\u0259 SQL kimi sor\u011fu dill\u0259ri Yadda\u015f \u00fcz\u0259rind\u0259 LINQ"},{"location":"linq/queryable-enumerable-differences/#5-dinamik-sorgu-numunsi","title":"5. Dinamik Sor\u011fu N\u00fcmun\u0259si","text":"<p>\u2705 N\u00fcmun\u0259: \u0130stifad\u0259\u00e7i se\u00e7imin\u0259 \u0259sas\u0259n sor\u011fu  </p> <pre><code>public List&lt;Customer&gt; GetCustomers(bool onlyActive)\n{\n    using var context = new AppDbContext();\n\n    IQueryable&lt;Customer&gt; query = context.Customers;\n\n    if (onlyActive)\n    {\n        query = query.Where(c =&gt; c.IsActive);\n    }\n\n    return query.ToList();\n}\n</code></pre> <p>Bu \u00fcsul, yaln\u0131z ehtiyac duyulan m\u0259lumatlar\u0131 g\u0259tir\u0259r\u0259k sor\u011fular\u0131n optimalla\u015fd\u0131r\u0131lmas\u0131n\u0131 t\u0259min edir.  </p>"},{"location":"linq/queryable-enumerable-differences/#6-performans-testi","title":"6. Performans Testi","text":"<p><code>IQueryable</code> v\u0259 <code>IEnumerable</code> aras\u0131ndak\u0131 performans f\u0259rqini test etm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 koddan istifad\u0259 ed\u0259 bil\u0259rsiniz:  </p> <p>\u2705 Performans Testi: </p> <pre><code>var stopwatch = Stopwatch.StartNew();\n\n// IQueryable il\u0259\nvar activeCustomersQuery = context.Customers.Where(c =&gt; c.IsActive).ToList();\nstopwatch.Stop();\nConsole.WriteLine($\"IQueryable M\u00fcdd\u0259ti: {stopwatch.ElapsedMilliseconds} ms\");\n\nstopwatch.Restart();\n\n// IEnumerable il\u0259\nvar allCustomers = context.Customers.ToList();\nvar activeCustomersEnum = allCustomers.Where(c =&gt; c.IsActive).ToList();\nstopwatch.Stop();\nConsole.WriteLine($\"IEnumerable M\u00fcdd\u0259ti: {stopwatch.ElapsedMilliseconds} ms\");\n</code></pre>"},{"location":"linq/queryable-enumerable-differences/#7-hans-halda-hans-istifad-edilmlidir","title":"7. Hans\u0131 Halda Hans\u0131 \u0130stifad\u0259 Edilm\u0259lidir?","text":"V\u0259ziyy\u0259t Tercih Edil\u0259n \u0130nterfeys Veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131 IQueryable Ki\u00e7ik veril\u0259rl\u0259 yadda\u015fda i\u015fl\u0259m\u0259k IEnumerable Dinamik sor\u011fu yaratmaq IQueryable B\u00f6y\u00fck veril\u0259r \u00fcz\u0259rind\u0259 performans kritikdir IQueryable"},{"location":"linq/select-vs-selectmany/","title":"LINQ: <code>Select</code> v\u0259 <code>SelectMany</code> F\u0259rql\u0259ri","text":"<p>LINQ-d\u0259 <code>Select</code> v\u0259 <code>SelectMany</code>, m\u0259lumat projeksiyalar\u0131 etm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunan g\u00fccl\u00fc metodlard\u0131r. Lakin bu iki metod aras\u0131nda vacib f\u0259rql\u0259r m\u00f6vcuddur. D\u00fczg\u00fcn metodu se\u00e7m\u0259k h\u0259m performans, h\u0259m d\u0259 kodun oxunaql\u0131l\u0131\u011f\u0131 bax\u0131m\u0131ndan kritik \u0259h\u0259miyy\u0259t da\u015f\u0131y\u0131r.  </p>"},{"location":"linq/select-vs-selectmany/#1-select-ndir","title":"1. <code>Select</code> N\u0259dir?","text":"<p><code>Select</code>, h\u0259r bir elementi bir projeksiyadan ke\u00e7ir\u0259r\u0259k yeni bir kolleksiya yarad\u0131r. Bu metod, \u0259sas\u0259n kolleksiyadak\u0131 elementl\u0259ri \u00e7evirm\u0259k v\u0259 ya m\u00fc\u0259yy\u0259n x\u00fcsusiyy\u0259tl\u0259ri se\u00e7m\u0259k \u00fc\u00e7\u00fcn istifad\u0259 olunur.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var names = people.Select(p =&gt; p.Name).ToList();\n\nforeach (var name in names)\n{\n    Console.WriteLine(name);\n}\n</code></pre> <p>Bu n\u00fcmun\u0259d\u0259, <code>people</code> kolleksiyas\u0131ndak\u0131 <code>Name</code> x\u00fcsusiyy\u0259tl\u0259ri g\u00f6t\u00fcr\u00fcl\u0259r\u0259k yeni bir kolleksiya yarad\u0131l\u0131r.  </p>"},{"location":"linq/select-vs-selectmany/#2-selectmany-ndir","title":"2. <code>SelectMany</code> N\u0259dir?","text":"<p><code>SelectMany</code>, h\u0259r bir elementin daxilind\u0259ki kolleksiyalar\u0131 d\u00fczl\u0259\u015fdir\u0259r\u0259k t\u0259k bir kolleksiya hal\u0131na g\u0259tirir. Bu metod, i\u00e7 i\u00e7\u0259 kolleksiyalarla i\u015fl\u0259y\u0259rk\u0259n olduqca faydal\u0131d\u0131r.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var allSubjects = students.SelectMany(s =&gt; s.Subjects).ToList();\n\nforeach (var subject in allSubjects)\n{\n    Console.WriteLine(subject);\n}\n</code></pre> <p>Bu n\u00fcmun\u0259d\u0259, h\u0259r bir t\u0259l\u0259b\u0259nin <code>Subjects</code> kolleksiyas\u0131 d\u00fczl\u0259\u015fdiril\u0259r\u0259k t\u0259k bir kolleksiya hal\u0131na g\u0259tirilir.  </p>"},{"location":"linq/select-vs-selectmany/#3-yanls-v-duzgun-istifad","title":"3. Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":""},{"location":"linq/select-vs-selectmany/#yanls-istifad-select-il-duzlsdirmy-calsmaq","title":"Yanl\u0131\u015f \u0130stifad\u0259: <code>Select</code> il\u0259 d\u00fczl\u0259\u015fdirm\u0259y\u0259 \u00e7al\u0131\u015fmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: </p> <pre><code>var allSubjects = students.Select(s =&gt; s.Subjects).ToList();\n\nforeach (var subjectList in allSubjects)\n{\n    foreach (var subject in subjectList)\n    {\n        Console.WriteLine(subject);\n    }\n}\n</code></pre> <p>Bu yana\u015fma, h\u0259r bir t\u0259l\u0259b\u0259nin <code>Subjects</code> siyah\u0131s\u0131n\u0131 ayr\u0131ca emal edir v\u0259 laz\u0131ms\u0131z m\u00fcr\u0259kk\u0259blik yarad\u0131r.  </p>"},{"location":"linq/select-vs-selectmany/#duzgun-istifad-selectmany-il-duzlsdirm","title":"D\u00fczg\u00fcn \u0130stifad\u0259: <code>SelectMany</code> il\u0259 d\u00fczl\u0259\u015fdirm\u0259","text":"<p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: </p> <pre><code>var allSubjects = students.SelectMany(s =&gt; s.Subjects).ToList();\n\nforeach (var subject in allSubjects)\n{\n    Console.WriteLine(subject);\n}\n</code></pre> <p>Bu metod, b\u00fct\u00fcn <code>Subjects</code> kolleksiyalar\u0131n\u0131 t\u0259k bir siyah\u0131ya \u00e7evir\u0259r\u0259k daha effektiv n\u0259tic\u0259 verir.  </p>"},{"location":"linq/select-vs-selectmany/#4-select-v-selectmany-frqlri","title":"4. <code>Select</code> v\u0259 <code>SelectMany</code> F\u0259rql\u0259ri","text":"X\u00fcsusiyy\u0259t Select SelectMany N\u0259tic\u0259 Kolleksiya D\u00fczl\u0259\u015fdirilmi\u015f Kolleksiya \u0130stifad\u0259 Sah\u0259si Element projeksiyas\u0131 \u0130\u00e7 i\u00e7\u0259 kolleksiyalar\u0131n d\u00fczl\u0259\u015fdirilm\u0259si Performans Daha sad\u0259 B\u00f6y\u00fck veril\u0259r \u00fc\u00e7\u00fcn daha optimal"},{"location":"linq/select-vs-selectmany/#5-dinamik-istifad","title":"5. Dinamik \u0130stifad\u0259","text":"<p>\u2705 N\u00fcmun\u0259: Dinamik projeksiya yaratmaq  </p> <pre><code>var subjectsByStudent = students\n    .Select(s =&gt; new { s.Name, Subjects = s.Subjects })\n    .ToList();\n\nforeach (var item in subjectsByStudent)\n{\n    Console.WriteLine($\"{item.Name}: {string.Join(\", \", item.Subjects)}\");\n}\n</code></pre>"},{"location":"linq/select-where-aggregate/","title":"<code>Select</code>, <code>Where</code> v\u0259 <code>Aggregate</code>","text":"<p>LINQ sor\u011fular\u0131, kolleksiyalar v\u0259 veril\u0259nl\u0259r bazas\u0131 \u0259m\u0259liyyatlar\u0131 \u00fcz\u0259rind\u0259 effektiv \u015f\u0259kild\u0259 m\u0259lumat i\u015fl\u0259m\u0259k \u00fc\u00e7\u00fcn g\u00fccl\u00fc bir al\u0259tdir. Lakin, <code>Select</code>, <code>Where</code> v\u0259 <code>Aggregate</code> kimi LINQ metodlar\u0131n\u0131n s\u0259hv istifad\u0259si performans itkisin\u0259 v\u0259 m\u00fcr\u0259kk\u0259b kod qurulu\u015funa s\u0259b\u0259b ola bil\u0259r.  </p>"},{"location":"linq/select-where-aggregate/#1-lazmsz-select-istifadsi","title":"1. Laz\u0131ms\u0131z <code>Select</code> \u0130stifad\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Laz\u0131m olmayan m\u0259lumat projeksiyalar\u0131 etm\u0259k.  </p> <pre><code>var productNames = context.Products\n    .Select(p =&gt; new { p.Name, p.Price })\n    .Select(p =&gt; p.Name)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Laz\u0131ms\u0131z <code>Select</code> projeksiyalar\u0131ndan \u00e7\u0259kinin.  </p> <pre><code>var productNames = context.Products\n    .Select(p =&gt; p.Name)\n    .ToList();\n</code></pre>"},{"location":"linq/select-where-aggregate/#2-where-il-murkkb-filtrlr-yazmaq","title":"2. <code>Where</code> il\u0259 M\u00fcr\u0259kk\u0259b Filtrl\u0259r Yazmaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>Where</code> daxilind\u0259 m\u00fcr\u0259kk\u0259b m\u0259ntiq istifad\u0259 ed\u0259r\u0259k oxunaql\u0131l\u0131\u011f\u0131 azaltmaq.  </p> <pre><code>var expensiveProducts = context.Products\n    .Where(p =&gt; p.Price &gt; 100 &amp;&amp; p.Stock &gt; 0 &amp;&amp; p.Category == \"Electronics\")\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Filtrl\u0259ri k\u00f6m\u0259k\u00e7i metodlarla b\u00f6l\u0259r\u0259k oxunaql\u0131l\u0131\u011f\u0131 art\u0131r\u0131n.  </p> <pre><code>var expensiveProducts = context.Products\n    .Where(IsExpensiveAndInStock)\n    .ToList();\n\nbool IsExpensiveAndInStock(Product product) =&gt;\n    product.Price &gt; 100 &amp;&amp; product.Stock &gt; 0 &amp;&amp; product.Category == \"Electronics\";\n</code></pre>"},{"location":"linq/select-where-aggregate/#3-aggregate-metodunu-shv-istifad-etmk","title":"3. <code>Aggregate</code> Metodunu S\u0259hv \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Sad\u0259 toplama v\u0259 ya birl\u0259\u015fdirm\u0259 \u0259m\u0259liyyatlar\u0131 \u00fc\u00e7\u00fcn <code>Aggregate</code> istifad\u0259 etm\u0259k.  </p> <pre><code>var totalStock = context.Products\n    .Select(p =&gt; p.Stock)\n    .Aggregate(0, (acc, stock) =&gt; acc + stock);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sad\u0259 \u0259m\u0259liyyatlar \u00fc\u00e7\u00fcn uy\u011fun LINQ metodlar\u0131ndan istifad\u0259 edin.  </p> <pre><code>var totalStock = context.Products.Sum(p =&gt; p.Stock);\n</code></pre>"},{"location":"linq/select-where-aggregate/#4-performans-nzr-almamaq","title":"4. Performans\u0131 N\u0259z\u0259r\u0259 Almamaq","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Filtrl\u0259ri veril\u0259nl\u0259r bazas\u0131 \u0259v\u0259zin\u0259 yadda\u015fda icra etm\u0259k.  </p> <pre><code>var products = context.Products.ToList();\nvar expensiveProducts = products.Where(p =&gt; p.Price &gt; 100);\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Filtrl\u0259m\u0259 \u0259m\u0259liyyatlar\u0131n\u0131 veril\u0259nl\u0259r bazas\u0131nda icra edin.  </p> <pre><code>var expensiveProducts = context.Products\n    .Where(p =&gt; p.Price &gt; 100)\n    .ToList();\n</code></pre>"},{"location":"linq/select-where-aggregate/#5-cox-mrhlli-sorgularn-murkkblsdirilmsi","title":"5. \u00c7ox M\u0259rh\u0259l\u0259li Sor\u011fular\u0131n M\u00fcr\u0259kk\u0259bl\u0259\u015fdirilm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Bir ne\u00e7\u0259 LINQ z\u0259nciri il\u0259 m\u00fcr\u0259kk\u0259b sor\u011fular yazmaq.  </p> <pre><code>var productData = context.Products\n    .Where(p =&gt; p.Price &gt; 100)\n    .Select(p =&gt; new { p.Name, p.Stock })\n    .Where(p =&gt; p.Stock &gt; 10)\n    .ToList();\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Sor\u011fular\u0131 ayd\u0131n v\u0259 t\u0259k bir z\u0259ncir kimi yaz\u0131n.  </p> <pre><code>var productData = context.Products\n    .Where(p =&gt; p.Price &gt; 100 &amp;&amp; p.Stock &gt; 10)\n    .Select(p =&gt; new { p.Name, p.Stock })\n    .ToList();\n</code></pre>"},{"location":"linq/select-where-aggregate/#6-first-v-single-metodlarn-yanls-istifad-etmk","title":"6. <code>First</code> v\u0259 <code>Single</code> Metodlar\u0131n\u0131 Yanl\u0131\u015f \u0130stifad\u0259 Etm\u0259k","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: <code>First</code> v\u0259 ya <code>Single</code> metodlar\u0131n\u0131 istifad\u0259 ed\u0259r\u0259k x\u0259ta riski yaratmaq.  </p> <pre><code>var product = context.Products.Single(p =&gt; p.Id == 1); // M\u0259lumat yoxdursa x\u0259ta verir.\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: <code>FirstOrDefault</code> v\u0259 ya <code>SingleOrDefault</code> metodlar\u0131ndan istifad\u0259 ed\u0259r\u0259k t\u0259hl\u00fck\u0259siz sor\u011fu icra edin.  </p> <pre><code>var product = context.Products.SingleOrDefault(p =&gt; p.Id == 1);\nif (product == null)\n{\n    Console.WriteLine(\"M\u0259hsul tap\u0131lmad\u0131.\");\n}\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/","title":"API Gateway il\u0259 Dayan\u0131ql\u0131l\u0131q (Resiliency)","text":"<p>API Gateway, mikroservis memarl\u0131\u011f\u0131nda bir giri\u015f n\u00f6qt\u0259si kimi xidm\u0259t ed\u0259r\u0259k t\u0259l\u0259bl\u0259ri y\u00f6nl\u0259ndirir, t\u0259hl\u00fck\u0259sizliyi t\u0259min edir v\u0259 dayan\u0131ql\u0131l\u0131\u011f\u0131 art\u0131r\u0131r. Resiliency t\u0259tbiql\u0259rind\u0259 API Gateway istifad\u0259si, sistemin \u00fcmumi sabitliyini v\u0259 miqyaslana bilm\u0259sini art\u0131r\u0131r.  </p>"},{"location":"resiliency/api-gateway-resiliency/#1-api-gateway-ndir","title":"1. API Gateway N\u0259dir?","text":"<p>API Gateway, bir m\u00fc\u015ft\u0259ri il\u0259 mikroservisl\u0259r aras\u0131nda vasit\u0259\u00e7i qat kimi i\u015fl\u0259yir. - Funksiyalar: Sor\u011fu y\u00f6nl\u0259ndirm\u0259, y\u00fck balanslama, t\u0259hl\u00fck\u0259sizlik n\u0259zar\u0259ti, x\u0259ta idar\u0259etm\u0259si. - \u00dcst\u00fcnl\u00fckl\u0259r: M\u0259rk\u0259zl\u0259\u015fdirilmi\u015f x\u0259ta idar\u0259etm\u0259si, performans optimizasiyas\u0131, t\u0259hl\u00fck\u0259sizlik.  </p>"},{"location":"resiliency/api-gateway-resiliency/#2-polly-il-api-gateway-dayanqllq-strategiyalar","title":"2. Polly il\u0259 API Gateway Dayan\u0131ql\u0131l\u0131q Strategiyalar\u0131","text":"<p>API Gateway-d\u0259 Polly istifad\u0259 ed\u0259r\u0259k x\u0259ta idar\u0259etm\u0259 v\u0259 dayan\u0131ql\u0131l\u0131q mexanizml\u0259ri qura bil\u0259rsiniz.  </p>"},{"location":"resiliency/api-gateway-resiliency/#retry-tkrar-chd-siyasti","title":"Retry (T\u0259krar C\u0259hd) Siyas\u0259ti","text":"<p>\u2705 N\u00fcmun\u0259: Polly il\u0259 t\u0259krar c\u0259hd mexanizmi  </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nawait retryPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Mikroservis\u0259 sor\u011fu g\u00f6nd\u0259rilir...\");\n    await ForwardRequestToMicroserviceAsync();\n});\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/#circuit-breaker-istifadsi","title":"Circuit Breaker \u0130stifad\u0259si","text":"<p>Circuit Breaker, x\u0259tal\u0131 bir servisin ist\u0259k say\u0131n\u0131 m\u0259hdudla\u015fd\u0131raraq sistemi qoruyur.  </p> <p>\u2705 N\u00fcmun\u0259: Circuit Breaker il\u0259 x\u0259ta idar\u0259etm\u0259si  </p> <pre><code>var circuitBreakerPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .CircuitBreakerAsync(\n        exceptionsAllowedBeforeBreaking: 3,\n        durationOfBreak: TimeSpan.FromSeconds(30));\n\nawait circuitBreakerPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Sor\u011fu icra edilir...\");\n    await ForwardRequestToMicroserviceAsync();\n});\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/#3-cache-istifadsi-il-performansn-yaxslasdrlmas","title":"3. Cache \u0130stifad\u0259si il\u0259 Performans\u0131n Yax\u015f\u0131la\u015fd\u0131r\u0131lmas\u0131","text":"<p>API Gateway-d\u0259 tez-tez istifad\u0259 olunan m\u0259lumatlar\u0131 ke\u015fl\u0259m\u0259kl\u0259 h\u0259m performans\u0131 art\u0131ra, h\u0259m d\u0259 mikroservisl\u0259rin y\u00fck\u00fcn\u00fc azalda bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: Polly il\u0259 Ke\u015f  </p> <pre><code>var cachePolicy = Policy.CacheAsync&lt;string&gt;(\n    cacheProvider: new MemoryCacheProvider(new MemoryCache(new MemoryCacheOptions())),\n    ttl: TimeSpan.FromMinutes(5));\n\nawait cachePolicy.ExecuteAsync(async context =&gt;\n{\n    return await GetDataFromMicroserviceAsync();\n}, new Context(\"cache-key\"));\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/#4-timeout-idaretmsi","title":"4. Timeout \u0130dar\u0259etm\u0259si","text":"<p>API Gateway, mikroservisl\u0259rd\u0259n cavab g\u00f6zl\u0259y\u0259rk\u0259n m\u00fc\u0259yy\u0259n bir m\u00fcdd\u0259t \u0259rzind\u0259 \u0259m\u0259liyyat\u0131 dayand\u0131rmal\u0131d\u0131r.  </p> <p>\u2705 N\u00fcmun\u0259: Polly il\u0259 Timeout Siyas\u0259ti  </p> <pre><code>var timeoutPolicy = Policy\n    .TimeoutAsync(TimeSpan.FromSeconds(10));\n\nawait timeoutPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Mikroservis\u0259 timeout il\u0259 sor\u011fu g\u00f6nd\u0259rilir...\");\n    await ForwardRequestToMicroserviceAsync();\n});\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/#5-load-balancing-v-rate-limiting","title":"5. Load Balancing v\u0259 Rate Limiting","text":"<p>API Gateway, y\u00fck balanslama v\u0259 sor\u011fu m\u0259hdudla\u015fd\u0131rma mexanizml\u0259rini effektiv \u015f\u0259kild\u0259 istifad\u0259 etm\u0259lidir.  </p> <p>\u2705 N\u00fcmun\u0259: Rate Limiting  </p> <pre><code>services.AddRateLimiter(options =&gt;\n{\n    options.GlobalLimiter = PartitionedRateLimiter.Create&lt;HttpContext, string&gt;(context =&gt;\n    {\n        return RateLimitPartition.GetFixedWindowLimiter(\n            partitionKey: context.Connection.RemoteIpAddress?.ToString() ?? \"global\",\n            factory: _ =&gt; new FixedWindowRateLimiterOptions\n            {\n                PermitLimit = 100,\n                Window = TimeSpan.FromMinutes(1)\n            });\n    });\n});\n\napp.UseRateLimiter();\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/#6-xta-idaretmsi-v-fallback-strategiyalar","title":"6. X\u0259ta \u0130dar\u0259etm\u0259si v\u0259 Fallback Strategiyalar\u0131","text":"<p>Mikroservisl\u0259r x\u0259ta verdikd\u0259 API Gateway-in alternativ bir cavab qaytarmas\u0131 laz\u0131m ola bil\u0259r.  </p> <p>\u2705 N\u00fcmun\u0259: Fallback il\u0259 Alternativ Cavab  </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;Exception&gt;()\n    .FallbackAsync(\n        fallbackValue: \"Xidm\u0259t m\u00fcv\u0259qq\u0259ti olaraq \u0259l\u00e7atmazd\u0131r.\",\n        onFallbackAsync: async (exception, context) =&gt;\n        {\n            Console.WriteLine($\"Fallback i\u015f\u0259 d\u00fc\u015fd\u00fc: {exception.Message}\");\n            await Task.CompletedTask;\n        });\n\nvar result = await fallbackPolicy.ExecuteAsync(async () =&gt;\n{\n    throw new Exception(\"Mikroservis x\u0259tas\u0131!\");\n});\n\nConsole.WriteLine($\"API Gateway Cavab\u0131: {result}\");\n</code></pre>"},{"location":"resiliency/api-gateway-resiliency/#7-monitorinq-v-loglama","title":"7. Monitorinq v\u0259 Loglama","text":"<p>API Gateway-d\u0259 b\u00fct\u00fcn sor\u011fular\u0131 v\u0259 x\u0259ta hallar\u0131n\u0131 izl\u0259y\u0259r\u0259k sistemin dayan\u0131ql\u0131l\u0131\u011f\u0131n\u0131 art\u0131ra bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: OpenTelemetry il\u0259 Monitorinq  </p> <pre><code>using var tracer = new ActivitySource(\"APIGateway\");\n\nusing var activity = tracer.StartActivity(\"ProcessRequest\");\nactivity?.AddTag(\"Route\", \"/api/data\");\nactivity?.AddTag(\"Method\", \"GET\");\n\nawait ForwardRequestToMicroserviceAsync();\n</code></pre>"},{"location":"resiliency/bulkhead-isolation/","title":"Bulkhead Isolation: Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":"<p>Bulkhead Isolation, sistemd\u0259ki resurslar\u0131n m\u00fc\u0259yy\u0259n bir hiss\u0259sini ay\u0131raraq bir komponentin s\u0131radan \u00e7\u0131xmas\u0131n\u0131n dig\u0259r komponentl\u0259r\u0259 t\u0259sir etm\u0259sinin qar\u015f\u0131s\u0131n\u0131 alma\u011f\u0131 h\u0259d\u0259fl\u0259yir. Polly, bu strategiyan\u0131 t\u0259tbiq etm\u0259k \u00fc\u00e7\u00fcn effektiv al\u0259tl\u0259r t\u0259qdim edir.  </p>"},{"location":"resiliency/bulkhead-isolation/#1-bulkhead-isolation-n-hmiyyti","title":"1. Bulkhead Isolation-\u0131n \u018fh\u0259miyy\u0259ti","text":"<p>Bulkhead Isolation, bir sistemd\u0259ki x\u0259talar\u0131n yay\u0131lmas\u0131n\u0131n qar\u015f\u0131s\u0131n\u0131 al\u0131r. M\u0259s\u0259l\u0259n, intensiv API \u00e7a\u011f\u0131r\u0131\u015f trafiki dig\u0259r prosesl\u0259rin performans\u0131n\u0131 azaltmamal\u0131d\u0131r.  </p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Resurslar\u0131n n\u0259zar\u0259tsiz payla\u015f\u0131lmas\u0131.  </p> <pre><code>Parallel.For(0, 100, async i =&gt;\n{\n    await MakeHttpRequestAsync(); // B\u00fct\u00fcn \u00e7a\u011f\u0131r\u0131\u015flar limitsiz resurs istehlak edir\n});\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Polly il\u0259 resurs limitl\u0259rini n\u0259zar\u0259t alt\u0131na al\u0131n.  </p> <pre><code>var bulkheadPolicy = Policy.BulkheadAsync(10, int.MaxValue);\n\nawait bulkheadPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/bulkhead-isolation/#2-bulkhead-il-novblm","title":"2. Bulkhead il\u0259 N\u00f6vb\u0259l\u0259m\u0259","text":"<p>Bulkhead Isolation, h\u0259dd\u0259n art\u0131q y\u00fckl\u0259nm\u0259 hal\u0131nda daxil olan prosesl\u0259ri bir n\u00f6vb\u0259y\u0259 ala bil\u0259r.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var bulkheadPolicy = Policy.BulkheadAsync(\n    maxParallelization: 10,\n    maxQueuingActions: 20,\n    onBulkheadRejectedAsync: context =&gt;\n    {\n        Console.WriteLine(\"Sor\u011fu bulkhead limiti s\u0259b\u0259bil\u0259 r\u0259dd edildi.\");\n        return Task.CompletedTask;\n    });\n\nawait bulkheadPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/bulkhead-isolation/#3-bulkhead-v-digr-siyastlrl-kombinasiyas","title":"3. Bulkhead v\u0259 Dig\u0259r Siyas\u0259tl\u0259rl\u0259 Kombinasiyas\u0131","text":"<p>Bulkhead Isolation, dig\u0259r Polly siyas\u0259tl\u0259ri il\u0259 birl\u0259\u015fdiril\u0259r\u0259k daha dayan\u0131ql\u0131 sisteml\u0259r qurula bil\u0259r.  </p> <p>\u2705 N\u00fcmun\u0259: Retry v\u0259 Circuit Breaker il\u0259 Bulkhead istifad\u0259si.  </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar circuitBreakerPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .CircuitBreakerAsync(2, TimeSpan.FromSeconds(30));\n\nvar bulkheadPolicy = Policy.BulkheadAsync(10, 20);\n\nvar combinedPolicy = Policy.WrapAsync(retryPolicy, circuitBreakerPolicy, bulkheadPolicy);\n\nawait combinedPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/bulkhead-isolation/#4-performans-v-monitorinq","title":"4. Performans v\u0259 Monitorinq","text":"<ul> <li>Metrik Monitorinq: Bulkhead limitl\u0259rin\u0259 \u00e7at\u0131l\u0131b-\u00e7at\u0131lmad\u0131\u011f\u0131n\u0131 izl\u0259yin.  </li> <li>D\u00fczg\u00fcn Parametr Se\u00e7imi: <code>maxParallelization</code> v\u0259 <code>maxQueuingActions</code> d\u0259y\u0259rl\u0259rini sistemin tutumuna uy\u011fun t\u0259yin edin.  </li> </ul> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var bulkheadPolicy = Policy.BulkheadAsync(\n    maxParallelization: 5,\n    maxQueuingActions: 10,\n    onBulkheadRejectedAsync: context =&gt;\n    {\n        Console.WriteLine(\"Bulkhead limiti ke\u00e7ildi. Sor\u011fu r\u0259dd edildi.\");\n        return Task.CompletedTask;\n    });\n\nawait bulkheadPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/chaos-engineering/","title":"Chaos Engineering (Xaos M\u00fch\u0259ndisliyi)","text":"<p>Chaos Engineering, bir sistemin dayan\u0131ql\u0131l\u0131\u011f\u0131n\u0131 test etm\u0259k v\u0259 x\u0259talara qar\u015f\u0131 nec\u0259 davrand\u0131\u011f\u0131n\u0131 anlamaq \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulmu\u015f bir intizamd\u0131r. Polly il\u0259 x\u0259ta simulyasiyas\u0131, gecikm\u0259 inyeksiyas\u0131 v\u0259 u\u011fursuzluq faizl\u0259rini art\u0131rmaq kimi strategiyalar t\u0259tbiq edil\u0259 bil\u0259r.  </p>"},{"location":"resiliency/chaos-engineering/#1-polly-il-sbk-gecikmsi-simulyasiyas","title":"1. Polly il\u0259 \u015e\u0259b\u0259k\u0259 Gecikm\u0259si Simulyasiyas\u0131","text":"<p>Gecikm\u0259 inyeksiya ed\u0259r\u0259k sistemi y\u00fcks\u0259k gecikm\u0259 \u015f\u0259rtl\u0259rind\u0259 test edin.  </p> <p>\u2705 N\u00fcmun\u0259: T\u0259sad\u00fcfi Gecikm\u0259 \u018flav\u0259 Etm\u0259 </p> <pre><code>var latencyPolicy = Policy\n    .InjectLatencyAsync(\n        enabled: _ =&gt; true,\n        injectionRate: 0.4, // %40 ehtimalla gecikm\u0259\n        latency: _ =&gt; TimeSpan.FromMilliseconds(new Random().Next(500, 2000))); // 500ms - 2000ms aras\u0131 gecikm\u0259\n\nawait latencyPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Sor\u011fu ba\u015flad\u0131...\");\n    await Task.Delay(100); // \u018fsl i\u015f m\u0259ntiqi\n    Console.WriteLine(\"Sor\u011fu tamamland\u0131.\");\n});\n</code></pre>"},{"location":"resiliency/chaos-engineering/#2-polly-il-xta-inyeksiyas","title":"2. Polly il\u0259 X\u0259ta \u0130nyeksiyas\u0131","text":"<p>M\u00fc\u0259yy\u0259n ehtimalla x\u0259ta yaradaraq sistemin nec\u0259 reaksiya verdiyini analiz edin.  </p> <p>\u2705 N\u00fcmun\u0259: Simulyasiya Edilmi\u015f X\u0259talar </p> <pre><code>var faultPolicy = Policy\n    .InjectFaultAsync(\n        enabled: _ =&gt; true,\n        injectionRate: 0.3, // %30 ehtimalla x\u0259ta\n        fault: _ =&gt; new Exception(\"Simulated fault!\"));\n\nawait faultPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Sor\u011fu icra edilir...\");\n    await Task.Delay(200); // \u018fsl i\u015f m\u0259ntiqi\n    Console.WriteLine(\"Sor\u011fu u\u011furla tamamland\u0131.\");\n});\n</code></pre>"},{"location":"resiliency/chaos-engineering/#3-polly-il-gecikm-v-xta-kombinasiyas","title":"3. Polly il\u0259 Gecikm\u0259 v\u0259 X\u0259ta Kombinasiyas\u0131","text":"<p>Gecikm\u0259 v\u0259 x\u0259ta inyeksiyas\u0131n\u0131 birl\u0259\u015fdir\u0259r\u0259k daha m\u00fcr\u0259kk\u0259b ssenaril\u0259r yarada bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: Kompleks Simulyasiya </p> <pre><code>var combinedPolicy = Policy.WrapAsync(\n    Policy.InjectLatencyAsync(\n        enabled: _ =&gt; true,\n        injectionRate: 0.3,\n        latency: _ =&gt; TimeSpan.FromSeconds(2)), // 2 saniy\u0259 gecikm\u0259\n    Policy.InjectFaultAsync(\n        enabled: _ =&gt; true,\n        injectionRate: 0.2, // %20 ehtimalla x\u0259ta\n        fault: _ =&gt; new Exception(\"Simulated fault!\"))\n);\n\nawait combinedPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"\u018fm\u0259liyyat icra edilir...\");\n    await Task.Delay(150); // \u018fsl i\u015f m\u0259ntiqi\n    Console.WriteLine(\"\u018fm\u0259liyyat tamamland\u0131.\");\n});\n</code></pre>"},{"location":"resiliency/chaos-engineering/#4-polly-il-is-yuku-testi","title":"4. Polly il\u0259 \u0130\u015f Y\u00fck\u00fc Testi","text":"<p>Sistemi y\u00fcks\u0259k y\u00fck alt\u0131nda test etm\u0259k \u00fc\u00e7\u00fcn Chaos Engineering strategiyalar\u0131ndan istifad\u0259 ed\u0259 bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: K\u00fctl\u0259vi Sor\u011fular v\u0259 X\u0259ta Simulyasiyas\u0131 </p> <pre><code>var bulkPolicy = Policy.InjectFaultAsync(\n    enabled: _ =&gt; true,\n    injectionRate: 0.2,\n    fault: _ =&gt; new Exception(\"T\u0259sad\u00fcfi x\u0259ta inyeksiya edildi!\"));\n\nvar tasks = Enumerable.Range(1, 50).Select(async i =&gt;\n{\n    try\n    {\n        await bulkPolicy.ExecuteAsync(async () =&gt;\n        {\n            Console.WriteLine($\"Sor\u011fu #{i} icra edilir\");\n            await Task.Delay(100);\n            Console.WriteLine($\"Sor\u011fu #{i} tamamland\u0131.\");\n        });\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine($\"Sor\u011fu #{i} u\u011fursuz oldu: {ex.Message}\");\n    }\n});\n\nawait Task.WhenAll(tasks);\n</code></pre>"},{"location":"resiliency/chaos-engineering/#5-polly-il-graceful-degradation-tdrici-azalma","title":"5. Polly il\u0259 Graceful Degradation (T\u0259drici Azalma)","text":"<p>Xidm\u0259tin tamamil\u0259 \u00e7\u00f6km\u0259sinin qar\u015f\u0131s\u0131n\u0131 almaq \u00fc\u00e7\u00fcn x\u0259ta ba\u015f verdikd\u0259 m\u0259hdud bir xidm\u0259t t\u0259qdim ed\u0259 bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: X\u0259ta Hal\u0131nda Standart D\u0259y\u0259r Qaytarma </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;Exception&gt;()\n    .FallbackAsync(\n        fallbackValue: \"X\u0259ta s\u0259b\u0259bind\u0259n standart d\u0259y\u0259r qaytar\u0131l\u0131r\",\n        onFallbackAsync: async (result, context) =&gt;\n        {\n            Console.WriteLine(\"Fallback aktiv edildi: Standart d\u0259y\u0259r qaytar\u0131l\u0131r.\");\n            await Task.CompletedTask;\n        });\n\nvar result = await fallbackPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Sor\u011fu icra edilir...\");\n    throw new Exception(\"Simulyasiya olunmu\u015f x\u0259ta!\"); // X\u0259ta yarad\u0131l\u0131r\n});\n\nConsole.WriteLine($\"N\u0259tic\u0259: {result}\");\n</code></pre>"},{"location":"resiliency/chaos-engineering/#6-polly-il-gecikmli-cavab-v-retry-siyastlri","title":"6. Polly il\u0259 Gecikm\u0259li Cavab v\u0259 Retry Siyas\u0259tl\u0259ri","text":"<p>Xaotik \u015f\u0259rtl\u0259r alt\u0131nda t\u0259krar c\u0259hdl\u0259ri v\u0259 gecikm\u0259li cavablar\u0131 birl\u0259\u015fdirin.  </p> <p>\u2705 N\u00fcmun\u0259: Retry + Gecikm\u0259 </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar latencyPolicy = Policy\n    .InjectLatencyAsync(\n        enabled: _ =&gt; true,\n        injectionRate: 0.5, // %50 ehtimalla gecikm\u0259\n        latency: _ =&gt; TimeSpan.FromSeconds(1)); // 1 saniy\u0259 gecikm\u0259\n\nvar combinedPolicy = Policy.WrapAsync(retryPolicy, latencyPolicy);\n\nawait combinedPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"\u018fm\u0259liyyat icra edilir...\");\n    await Task.Delay(200); // \u018fsl i\u015f m\u0259ntiqi\n    Console.WriteLine(\"\u018fm\u0259liyyat tamamland\u0131.\");\n});\n</code></pre>"},{"location":"resiliency/circuit-breaker-state-management/","title":"Circuit Breaker V\u0259ziyy\u0259t \u0130dar\u0259etm\u0259si","text":"<p>Circuit Breaker, bir xidm\u0259tin x\u0259talar\u0131 n\u0259zar\u0259td\u0259 saxlamas\u0131n\u0131 t\u0259min ed\u0259r\u0259k sistemin h\u0259ddind\u0259n art\u0131q y\u00fckl\u0259nm\u0259sinin qar\u015f\u0131s\u0131n\u0131 alan dayan\u0131ql\u0131l\u0131q mexanizmidir. Polly il\u0259 Circuit Breaker v\u0259ziyy\u0259tl\u0259rini idar\u0259 etm\u0259k, daha d\u0259qiq v\u0259 effektiv x\u0259ta n\u0259zar\u0259ti t\u0259min edir.  </p>"},{"location":"resiliency/circuit-breaker-state-management/#1-circuit-breaker-ndir","title":"1. Circuit Breaker N\u0259dir?","text":"<p>Circuit Breaker sistemi \u00fc\u00e7 \u0259sas v\u0259ziyy\u0259td\u0259 i\u015fl\u0259d\u0259 bil\u0259r: - Closed (Qapal\u0131): B\u00fct\u00fcn sor\u011fular icra olunur v\u0259 x\u0259ta nisb\u0259ti izl\u0259nir. - Open (A\u00e7\u0131q): X\u0259ta h\u0259ddi a\u015f\u0131larsa, b\u00fct\u00fcn sor\u011fular r\u0259dd edilir. - Half-Open (Yar\u0131 A\u00e7\u0131q): M\u0259hdud sayda sor\u011fu icaz\u0259 al\u0131r v\u0259 sistemin v\u0259ziyy\u0259tin\u0259 g\u00f6r\u0259 yenid\u0259n <code>Closed</code> v\u0259 ya <code>Open</code> rejimin\u0259 ke\u00e7\u0259 bil\u0259r.  </p>"},{"location":"resiliency/circuit-breaker-state-management/#2-polly-il-circuit-breaker-istifadsi","title":"2. Polly il\u0259 Circuit Breaker \u0130stifad\u0259si","text":"<p>Polly il\u0259 Circuit Breaker mexanizmini quraraq sistemi h\u0259ddind\u0259n art\u0131q y\u00fckl\u0259nm\u0259d\u0259n qoruya bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: Sad\u0259 Circuit Breaker  </p> <pre><code>var circuitBreakerPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .CircuitBreakerAsync(\n        exceptionsAllowedBeforeBreaking: 3,\n        durationOfBreak: TimeSpan.FromSeconds(30));\n\nawait circuitBreakerPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Sor\u011fu icra edilir...\");\n    await Task.Delay(100); // \u018fsl i\u015f m\u0259ntiqi\n    throw new Exception(\"Simulyasiya olunmu\u015f x\u0259ta!\");\n});\n</code></pre>"},{"location":"resiliency/circuit-breaker-state-management/#3-circuit-breaker-vziyytlrinin-idaredilmsi","title":"3. Circuit Breaker V\u0259ziyy\u0259tl\u0259rinin \u0130dar\u0259edilm\u0259si","text":"<p>Polly, Circuit Breaker v\u0259ziyy\u0259tl\u0259rini izl\u0259m\u0259k v\u0259 hadis\u0259l\u0259r\u0259 cavab verm\u0259k \u00fc\u00e7\u00fcn istifad\u0259 edil\u0259 bil\u0259n geri bildirim mexanizml\u0259ri t\u0259qdim edir.  </p> <p>\u2705 N\u00fcmun\u0259: V\u0259ziyy\u0259t D\u0259yi\u015fiklikl\u0259rini \u0130zl\u0259m\u0259  </p> <pre><code>var circuitBreakerPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .CircuitBreakerAsync(\n        exceptionsAllowedBeforeBreaking: 3,\n        durationOfBreak: TimeSpan.FromSeconds(30),\n        onBreak: (exception, timespan) =&gt;\n        {\n            Console.WriteLine($\"Circuit {timespan.TotalSeconds} saniy\u0259 m\u00fcdd\u0259tin\u0259 a\u00e7\u0131ld\u0131: {exception.Message}\");\n        },\n        onReset: () =&gt;\n        {\n            Console.WriteLine(\"Circuit qapal\u0131 v\u0259ziyy\u0259t\u0259 qaytar\u0131ld\u0131.\");\n        },\n        onHalfOpen: () =&gt;\n        {\n            Console.WriteLine(\"Circuit yar\u0131 a\u00e7\u0131q v\u0259ziyy\u0259td\u0259dir. Sistem sa\u011flaml\u0131\u011f\u0131 yoxlan\u0131l\u0131r...\");\n        });\n\nawait circuitBreakerPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"\u018fm\u0259liyyat icra edilir...\");\n    await Task.Delay(100);\n    throw new Exception(\"Simulyasiya olunmu\u015f x\u0259ta.\");\n});\n</code></pre>"},{"location":"resiliency/circuit-breaker-state-management/#4-half-open-vziyytinin-idaredilmsi","title":"4. Half-Open V\u0259ziyy\u0259tinin \u0130dar\u0259edilm\u0259si","text":"<p><code>Half-Open</code> v\u0259ziyy\u0259tind\u0259 m\u0259hdud sayda \u0259m\u0259liyyat icra olunur. U\u011furlu n\u0259tic\u0259l\u0259r, Circuit Breaker-in <code>Closed</code> v\u0259ziyy\u0259tin\u0259 qay\u0131tmas\u0131n\u0131 t\u0259min edir.  </p> <p>\u2705 N\u00fcmun\u0259: Half-Open Testi  </p> <pre><code>var circuitBreakerPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .CircuitBreakerAsync(\n        exceptionsAllowedBeforeBreaking: 2,\n        durationOfBreak: TimeSpan.FromSeconds(20),\n        onHalfOpen: () =&gt;\n        {\n            Console.WriteLine(\"Half-Open: M\u0259hdud \u0259m\u0259liyyatla sistem sa\u011flaml\u0131\u011f\u0131 yoxlan\u0131l\u0131r.\");\n        });\n\nawait circuitBreakerPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Sistem sa\u011flaml\u0131\u011f\u0131 yoxlan\u0131l\u0131r...\");\n    await Task.Delay(200); // Test m\u0259ntiqi\n});\n</code></pre>"},{"location":"resiliency/circuit-breaker-state-management/#5-circuit-breaker-v-retry-kombinasiyas","title":"5. Circuit Breaker v\u0259 Retry Kombinasiyas\u0131","text":"<p>Circuit Breaker v\u0259 Retry siyas\u0259tl\u0259rini birl\u0259\u015fdir\u0259r\u0259k daha dayan\u0131ql\u0131 h\u0259ll yarada bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: Retry v\u0259 Circuit Breaker  </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar circuitBreakerPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .CircuitBreakerAsync(3, TimeSpan.FromSeconds(30));\n\nvar combinedPolicy = Policy.WrapAsync(retryPolicy, circuitBreakerPolicy);\n\nawait combinedPolicy.ExecuteAsync(async () =&gt;\n{\n    Console.WriteLine(\"Birl\u0259\u015fdirilmi\u015f siyas\u0259t icra edilir...\");\n    await Task.Delay(150);\n    throw new Exception(\"Simulyasiya olunmu\u015f x\u0259ta.\");\n});\n</code></pre>"},{"location":"resiliency/fallback-strategies/","title":"Fallback Strategiyalar\u0131: Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":"<p>Fallback strategiyalar\u0131, bir \u0259m\u0259liyyat u\u011fursuz olduqda alternativ h\u0259ll t\u0259qdim etm\u0259yi h\u0259d\u0259fl\u0259yir. Polly, x\u0259ta hallar\u0131nda sistemin d\u00fczg\u00fcn i\u015fl\u0259m\u0259y\u0259 davam etm\u0259sini t\u0259min ed\u0259n g\u00fccl\u00fc fallback mexanizml\u0259ri t\u0259qdim edir.  </p>"},{"location":"resiliency/fallback-strategies/#1-sas-fallback-istifadsi","title":"1. \u018fsas Fallback \u0130stifad\u0259si","text":"<p>Fallback strategiyas\u0131, m\u00fc\u0259yy\u0259n bir \u0259m\u0259liyyat u\u011fursuz olduqda bir standart d\u0259y\u0259r qaytarma\u011fa imkan verir.  </p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u0259talar\u0131 idar\u0259 etm\u0259d\u0259n standart d\u0259y\u0259r qaytarmaq.  </p> <pre><code>try\n{\n    var result = await MakeHttpRequestAsync();\n}\ncatch\n{\n    var result = \"Default Value\"; // N\u0259zar\u0259tsiz fallback\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Polly il\u0259 fallback strategiyas\u0131 t\u0259yin edin.  </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;HttpRequestException&gt;()\n    .FallbackAsync(\"Default Value\");\n\nvar result = await fallbackPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/fallback-strategies/#2-fallback-v-retry-kombinasiyas","title":"2. Fallback v\u0259 Retry Kombinasiyas\u0131","text":"<p>Fallback v\u0259 Retry siyas\u0259tl\u0259rini birl\u0259\u015fdir\u0259r\u0259k daha dayan\u0131ql\u0131 h\u0259ll yarada bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;HttpRequestException&gt;()\n    .FallbackAsync(\"Fallback Value\");\n\nvar combinedPolicy = Policy.WrapAsync(fallbackPolicy, retryPolicy);\n\nvar result = await combinedPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/fallback-strategies/#3-fallback-strategiyas-il-dinamik-cavablar","title":"3. Fallback Strategiyas\u0131 il\u0259 Dinamik Cavablar","text":"<p>Fallback zaman\u0131 dinamik olaraq hesablanan bir cavab\u0131 qaytara bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;HttpRequestException&gt;()\n    .FallbackAsync(\n        fallbackAction: async (cancellationToken) =&gt;\n        {\n            Console.WriteLine(\"Fallback aktiv edildi. Standart d\u0259y\u0259r qaytar\u0131l\u0131r.\");\n            return await Task.FromResult(\"Dinamik Hesablanm\u0131\u015f D\u0259y\u0259r\");\n        });\n\nvar result = await fallbackPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/fallback-strategies/#4-performans-v-monitorinq","title":"4. Performans v\u0259 Monitorinq","text":"<ul> <li>Loglama: Fallback i\u015f\u0259 d\u00fc\u015fd\u00fckd\u0259 loglama ed\u0259r\u0259k hans\u0131 hallarda aktivl\u0259\u015fdiyini izl\u0259yin.  </li> <li>Metrikl\u0259r: Hans\u0131 \u0259m\u0259liyyatlar\u0131n fallback strategiyas\u0131na ehtiyac duydu\u011funu \u00f6l\u00e7m\u0259k \u00fc\u00e7\u00fcn metrikl\u0259r \u0259lav\u0259 edin.  </li> </ul> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;HttpRequestException&gt;()\n    .FallbackAsync(\n        fallbackAction: async (cancellationToken) =&gt;\n        {\n            Console.WriteLine(\"X\u0259ta s\u0259b\u0259bil\u0259 fallback istifad\u0259 olunur.\");\n            return \"Fallback N\u0259tic\u0259si\";\n        },\n        onFallbackAsync: async (exception, context) =&gt;\n        {\n            Console.WriteLine($\"Fallback i\u015f\u0259 d\u00fc\u015fd\u00fc: {exception.Exception.Message}\");\n            await Task.CompletedTask;\n        });\n\nvar result = await fallbackPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/graceful-degradation/","title":"Graceful Degradation (T\u0259drici Azalma)","text":"<p>Graceful Degradation, bir sistemin qism\u0259n x\u0259ta v\u0259ziyy\u0259tind\u0259 bel\u0259 xidm\u0259t g\u00f6st\u0259rm\u0259y\u0259 davam etm\u0259sini t\u0259min ed\u0259n dayan\u0131ql\u0131l\u0131q strategiyas\u0131d\u0131r. Bu strategiya, kritik olmayan x\u00fcsusiyy\u0259tl\u0259rin m\u00fcv\u0259qq\u0259ti olaraq deaktiv edilm\u0259sini v\u0259 ya azald\u0131lm\u0131\u015f xidm\u0259t t\u0259qdim edilm\u0259sini \u0259hat\u0259 edir.  </p>"},{"location":"resiliency/graceful-degradation/#1-graceful-degradation-ndir","title":"1. Graceful Degradation N\u0259dir?","text":"<ul> <li>M\u0259qs\u0259d: \u0130stifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sini qoruyaraq sistemin tamamil\u0259 \u00e7\u00f6km\u0259sinin qar\u015f\u0131s\u0131n\u0131 almaq.  </li> <li>\u0130stifad\u0259 Sah\u0259l\u0259ri: Y\u00fcks\u0259k trafik\u0259 malik veb saytlar, mikroservis memarl\u0131\u011f\u0131, paylanm\u0131\u015f sisteml\u0259r.  </li> </ul> <p>M\u0259s\u0259l\u0259n, bir e-ticar\u0259t sayt\u0131nda \u00f6d\u0259ni\u015f xidm\u0259ti m\u00fcv\u0259qq\u0259ti olaraq i\u015fl\u0259mirs\u0259, istifad\u0259\u00e7il\u0259rin m\u0259hsul bax\u0131\u015f\u0131 v\u0259 s\u0259b\u0259t\u0259 \u0259lav\u0259 etm\u0259 funksiyalar\u0131ndan istifad\u0259 etm\u0259y\u0259 davam etm\u0259si t\u0259min edil\u0259 bil\u0259r.  </p>"},{"location":"resiliency/graceful-degradation/#2-polly-il-graceful-degradation","title":"2. Polly il\u0259 Graceful Degradation","text":"<p>Polly-nin Fallback siyas\u0259ti, Graceful Degradation strategiyas\u0131n\u0131 t\u0259tbiq etm\u0259k \u00fc\u00e7\u00fcn effektiv bir vasit\u0259dir.  </p> <p>\u2705 N\u00fcmun\u0259: Fallback il\u0259 Alternativ Cavab Qaytarma  </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;Exception&gt;()\n    .FallbackAsync(\n        fallbackValue: \"Azald\u0131lm\u0131\u015f funksionall\u0131q: Z\u0259hm\u0259t olmasa bir az sonra yenid\u0259n c\u0259hd edin.\",\n        onFallbackAsync: async (exception, context) =&gt;\n        {\n            Console.WriteLine($\"Fallback aktiv edildi: {exception.Message}\");\n            await Task.CompletedTask;\n        });\n\nvar result = await fallbackPolicy.ExecuteAsync(async () =&gt;\n{\n    throw new Exception(\"\u018fsas xidm\u0259t \u0259l\u00e7atmazd\u0131r!\");\n});\n\nConsole.WriteLine($\"Cavab: {result}\");\n</code></pre>"},{"location":"resiliency/graceful-degradation/#3-xususiyyt-azaldlmas-feature-reduction","title":"3. X\u00fcsusiyy\u0259t Azald\u0131lmas\u0131 (Feature Reduction)","text":"<p>Sistem b\u0259zi funksionall\u0131qlar\u0131 m\u00fcv\u0259qq\u0259ti olaraq deaktiv ed\u0259r\u0259k f\u0259aliyy\u0259t g\u00f6st\u0259rm\u0259y\u0259 davam ed\u0259 bil\u0259r.  </p> <p>\u2705 N\u00fcmun\u0259: Kritik Olmayan X\u00fcsusiyy\u0259tl\u0259ri Deaktiv Etm\u0259k  </p> <pre><code>if (!IsCriticalFeatureAvailable())\n{\n    Console.WriteLine(\"Kritik x\u00fcsusiyy\u0259t \u0259l\u00e7atmazd\u0131r. M\u0259hdud funksionall\u0131q g\u00f6st\u0259rilir.\");\n    DisplayBasicFeatures();\n}\nelse\n{\n    DisplayFullFeatures();\n}\n</code></pre>"},{"location":"resiliency/graceful-degradation/#4-graceful-degradation-il-kes-istifadsi","title":"4. Graceful Degradation il\u0259 Ke\u015f \u0130stifad\u0259si","text":"<p>M\u00fcv\u0259qq\u0259ti x\u0259ta hal\u0131nda, \u0259vv\u0259lc\u0259d\u0259n ke\u015fl\u0259nmi\u015f m\u0259lumatlardan istifad\u0259 edil\u0259 bil\u0259r.  </p> <p>\u2705 N\u00fcmun\u0259: Ke\u015f il\u0259 Ehtiyat M\u0259lumat  </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;Exception&gt;()\n    .FallbackAsync(\n        fallbackAction: async cancellationToken =&gt;\n        {\n            Console.WriteLine(\"X\u0259ta s\u0259b\u0259bil\u0259 ke\u015fl\u0259nmi\u015f m\u0259lumat istifad\u0259 olunur.\");\n            return \"Ke\u015fl\u0259nmi\u015f M\u0259lumat\";\n        });\n\nvar result = await fallbackPolicy.ExecuteAsync(async () =&gt;\n{\n    throw new Exception(\"\u018fsas xidm\u0259t u\u011fursuz oldu!\");\n});\n\nConsole.WriteLine($\"N\u0259tic\u0259: {result}\");\n</code></pre>"},{"location":"resiliency/graceful-degradation/#5-graceful-degradation-v-retry-kombinasiyas","title":"5. Graceful Degradation v\u0259 Retry Kombinasiyas\u0131","text":"<p>X\u0259talar\u0131 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn Retry v\u0259 Graceful Degradation strategiyalar\u0131n\u0131 birl\u0259\u015fdir\u0259 bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: Retry v\u0259 Fallback Kombinasiyas\u0131  </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;Exception&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;Exception&gt;()\n    .FallbackAsync(\n        fallbackValue: \"Xidm\u0259t m\u00fcv\u0259qq\u0259ti olaraq \u0259l\u00e7atmazd\u0131r.\");\n\nvar combinedPolicy = Policy.WrapAsync(fallbackPolicy, retryPolicy);\n\nvar result = await combinedPolicy.ExecuteAsync(async () =&gt;\n{\n    throw new Exception(\"Xidm\u0259t u\u011fursuz oldu!\");\n});\n\nConsole.WriteLine($\"Cavab: {result}\");\n</code></pre>"},{"location":"resiliency/graceful-degradation/#6-performans-v-monitorinq","title":"6. Performans v\u0259 Monitorinq","text":"<p>Graceful Degradation zaman\u0131 sistem performans\u0131n\u0131 izl\u0259m\u0259k vacibdir: - Metrikl\u0259r: Azald\u0131lm\u0131\u015f xidm\u0259tl\u0259rin n\u0259 q\u0259d\u0259r tez-tez istifad\u0259 edildiyini izl\u0259yin. - Loglama: Fallback v\u0259 dig\u0259r strategiyalar\u0131n n\u0259 zaman i\u015f\u0259 d\u00fc\u015fd\u00fcy\u00fcn\u00fc izl\u0259yin.  </p> <p>\u2705 N\u00fcmun\u0259: Loglama il\u0259 Monitorinq  </p> <pre><code>var fallbackPolicy = Policy&lt;string&gt;\n    .Handle&lt;Exception&gt;()\n    .FallbackAsync(\n        fallbackValue: \"M\u0259hdud funksionall\u0131q aktivdir.\",\n        onFallbackAsync: async (exception, context) =&gt;\n        {\n            Console.WriteLine($\"Fallback aktiv edildi: {exception.Message}\");\n            await Task.CompletedTask;\n        });\n\nawait fallbackPolicy.ExecuteAsync(async () =&gt;\n{\n    throw new Exception(\"Simulyasiya olunmu\u015f x\u0259ta!\");\n});\n</code></pre>"},{"location":"resiliency/idempotency-key-data-consistency/","title":"Idempotency Key v\u0259 M\u0259lumat\u0131n Tutarl\u0131l\u0131\u011f\u0131","text":"<p>Idempotency, bir \u0259m\u0259liyyat\u0131n bir ne\u00e7\u0259 d\u0259f\u0259 \u00e7a\u011f\u0131r\u0131ld\u0131\u011f\u0131nda eyni n\u0259tic\u0259ni t\u0259min etm\u0259si dem\u0259kdir. Bu x\u00fcsusiyy\u0259t, paylanm\u0131\u015f sisteml\u0259rd\u0259 m\u0259lumat\u0131n tutarl\u0131l\u0131\u011f\u0131n\u0131 qorumaq v\u0259 t\u0259krarlanan \u0259m\u0259liyyatlar\u0131n qar\u015f\u0131s\u0131n\u0131 almaq \u00fc\u00e7\u00fcn vacib bir strategiyad\u0131r.  </p>"},{"location":"resiliency/idempotency-key-data-consistency/#1-idempotency-ndir","title":"1. Idempotency N\u0259dir?","text":"<ul> <li>M\u0259qs\u0259d: Eyni \u0259m\u0259liyyat bir ne\u00e7\u0259 d\u0259f\u0259 t\u0259krarland\u0131qda sistemin v\u0259ziyy\u0259tini d\u0259yi\u015fdirm\u0259d\u0259n eyni n\u0259tic\u0259ni qaytarmas\u0131.  </li> <li>\u0130stifad\u0259 Sah\u0259l\u0259ri: API \u00e7a\u011f\u0131r\u0131\u015flar\u0131, \u00f6d\u0259ni\u015f sisteml\u0259ri, mesajla\u015fma sisteml\u0259ri.  </li> </ul> <p>M\u0259s\u0259l\u0259n, bir \u00f6d\u0259ni\u015f \u0259m\u0259liyyat\u0131 eyni API \u00e7a\u011f\u0131r\u0131\u015f\u0131 t\u0259krarland\u0131\u011f\u0131 \u00fc\u00e7\u00fcn bir ne\u00e7\u0259 d\u0259f\u0259 icra edilm\u0259m\u0259lidir.  </p>"},{"location":"resiliency/idempotency-key-data-consistency/#2-idempotency-key-istifadsi","title":"2. Idempotency Key \u0130stifad\u0259si","text":"<p>Idempotency Key, bir sor\u011funu unikal \u015f\u0259kild\u0259 tan\u0131dan a\u00e7ard\u0131r. Bu a\u00e7ar, m\u00fc\u015ft\u0259rid\u0259n g\u0259l\u0259n sor\u011funun t\u0259krar emal edilm\u0259sinin qar\u015f\u0131s\u0131n\u0131 al\u0131r.  </p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Idempotency Key olmadan sor\u011funu emal etm\u0259k  </p> <pre><code>public async Task ProcessPaymentAsync(PaymentRequest request)\n{\n    // T\u0259krarlanan sor\u011fular\u0131n yoxlan\u0131lmadan emal edilm\u0259si\n    await SavePaymentToDatabaseAsync(request);\n    await ChargeCustomerAsync(request);\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Idempotency Key il\u0259 yoxlama  </p> <pre><code>public async Task ProcessPaymentAsync(PaymentRequest request)\n{\n    if (await IsRequestAlreadyProcessedAsync(request.IdempotencyKey))\n    {\n        Console.WriteLine(\"Bu sor\u011fu art\u0131q emal edilib. Ke\u00e7ilir.\");\n        return;\n    }\n\n    await SavePaymentToDatabaseAsync(request);\n    await ChargeCustomerAsync(request);\n    await MarkRequestAsProcessedAsync(request.IdempotencyKey);\n}\n</code></pre>"},{"location":"resiliency/idempotency-key-data-consistency/#3-idempotency-key-v-verilnlr-bazas-istifadsi","title":"3. Idempotency Key v\u0259 Veril\u0259nl\u0259r Bazas\u0131 \u0130stifad\u0259si","text":"<p>Idempotency Key ad\u0259t\u0259n veril\u0259nl\u0259r bazas\u0131nda saxlan\u0131l\u0131r v\u0259 h\u0259r bir sor\u011funun unikal oldu\u011funu t\u0259min edir.  </p> <p>\u2705 N\u00fcmun\u0259: Veril\u0259nl\u0259r bazas\u0131nda Idempotency Key yoxlamas\u0131  </p> <pre><code>public async Task&lt;bool&gt; IsRequestAlreadyProcessedAsync(string idempotencyKey)\n{\n    return await _dbContext.IdempotencyKeys.AnyAsync(k =&gt; k.Key == idempotencyKey);\n}\n\npublic async Task MarkRequestAsProcessedAsync(string idempotencyKey)\n{\n    await _dbContext.IdempotencyKeys.AddAsync(new IdempotencyKey { Key = idempotencyKey });\n    await _dbContext.SaveChangesAsync();\n}\n</code></pre>"},{"location":"resiliency/idempotency-key-data-consistency/#4-mesajlasma-sistemlrind-idempotency","title":"4. Mesajla\u015fma Sisteml\u0259rind\u0259 Idempotency","text":"<p>Mesajlar bir ne\u00e7\u0259 d\u0259f\u0259 emal edil\u0259 bil\u0259r, buna g\u00f6r\u0259 d\u0259 idempotent dizayn istifad\u0259 etm\u0259k vacibdir.  </p> <p>\u2705 N\u00fcmun\u0259: Mesaj\u0131n emal\u0131  </p> <pre><code>public async Task ProcessMessageAsync(Message message)\n{\n    if (await IsMessageAlreadyProcessedAsync(message.Id))\n    {\n        Console.WriteLine(\"Bu mesaj art\u0131q emal edilib.\");\n        return;\n    }\n\n    await HandleMessageAsync(message);\n    await MarkMessageAsProcessedAsync(message.Id);\n}\n</code></pre>"},{"location":"resiliency/idempotency-key-data-consistency/#5-idempotency-v-api-dizayn","title":"5. Idempotency v\u0259 API Dizayn\u0131","text":"<p>REST API-l\u0259rd\u0259 idempotency, m\u00fc\u015ft\u0259ril\u0259rin etibarl\u0131 \u015f\u0259kild\u0259 m\u0259lumat g\u00f6nd\u0259rm\u0259sini v\u0259 q\u0259bul etm\u0259sini t\u0259min edir.  </p> <p>\u2705 N\u00fcmun\u0259: Idempotency Key il\u0259 API \u00c7a\u011f\u0131r\u0131\u015f\u0131  </p> <pre><code>POST /payments HTTP/1.1\nContent-Type: application/json\nIdempotency-Key: 12345\n\n{\n    \"amount\": 100,\n    \"currency\": \"USD\"\n}\n</code></pre> <p>Server t\u0259r\u0259find\u0259:  </p> <pre><code>if (await IsRequestAlreadyProcessedAsync(request.Headers[\"Idempotency-Key\"]))\n{\n    return Ok(\"Bu sor\u011fu art\u0131q emal edilib.\");\n}\n</code></pre>"},{"location":"resiliency/idempotency-key-data-consistency/#6-loglama-v-monitorinq","title":"6. Loglama v\u0259 Monitorinq","text":"<p>Idempotency sisteml\u0259rinin d\u00fczg\u00fcn i\u015fl\u0259diyini t\u0259min etm\u0259k \u00fc\u00e7\u00fcn loglama v\u0259 monitorinq vasit\u0259l\u0259rind\u0259n istifad\u0259 edin.  </p> <p>\u2705 N\u00fcmun\u0259: Loglama il\u0259 Idempotency \u0130zl\u0259m\u0259  </p> <pre><code>public async Task ProcessPaymentAsync(PaymentRequest request)\n{\n    if (await IsRequestAlreadyProcessedAsync(request.IdempotencyKey))\n    {\n        Console.WriteLine($\"T\u0259krarlanan sor\u011fu a\u015fkar edildi: {request.IdempotencyKey}\");\n        return;\n    }\n\n    await SavePaymentToDatabaseAsync(request);\n    Console.WriteLine($\"Sor\u011fu emal edildi: {request.IdempotencyKey}\");\n    await MarkRequestAsProcessedAsync(request.IdempotencyKey);\n}\n</code></pre>"},{"location":"resiliency/polly-retry-circuit-breaker/","title":"Polly il\u0259 Retry v\u0259 Circuit Breaker","text":"<p>Polly, dayan\u0131ql\u0131 v\u0259 etibarl\u0131 t\u0259tbiql\u0259r yaratmaq \u00fc\u00e7\u00fcn istifad\u0259 olunan g\u00fccl\u00fc bir .NET kitabxanas\u0131d\u0131r. \u015e\u0259b\u0259k\u0259 x\u0259talar\u0131na, m\u00fcv\u0259qq\u0259ti probleml\u0259r\u0259 v\u0259 ya zaman a\u015f\u0131m\u0131 x\u0259talar\u0131na qar\u015f\u0131 strategiyalar t\u0259qdim ed\u0259r\u0259k t\u0259tbiqinizin daha sabit i\u015fl\u0259m\u0259sini t\u0259min edir.  </p>"},{"location":"resiliency/polly-retry-circuit-breaker/#1-retry-tkrar-chd-siyasti","title":"1. Retry (T\u0259krar C\u0259hd) Siyas\u0259ti","text":"<p>Retry siyas\u0259ti, m\u00fc\u0259yy\u0259n x\u0259ta n\u00f6vl\u0259rind\u0259 \u0259m\u0259liyyat\u0131n yenid\u0259n icra edilm\u0259sin\u0259 imkan verir.  </p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: M\u00fc\u0259yy\u0259n bir siyas\u0259t t\u0259yin etm\u0259d\u0259n yenid\u0259n c\u0259hd etm\u0259k.  </p> <pre><code>for (int i = 0; i &lt; 3; i++)\n{\n    try\n    {\n        await MakeHttpRequestAsync();\n        break;\n    }\n    catch\n    {\n        if (i == 2) throw;\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Polly il\u0259 t\u0259krar c\u0259hd strategiyas\u0131 t\u0259yin edin.  </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(Math.Pow(2, retryAttempt)));\n\nawait retryPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/polly-retry-circuit-breaker/#2-circuit-breaker-devre-ksici-siyasti","title":"2. Circuit Breaker (Devre K\u0259sici) Siyas\u0259ti","text":"<p>Circuit Breaker, m\u00fc\u0259yy\u0259n sayda x\u0259ta ba\u015f verdikd\u0259n sonra m\u00fcv\u0259qq\u0259ti olaraq \u0259m\u0259liyyatlar\u0131 dayand\u0131r\u0131r.  </p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u0259talar\u0131 n\u0259zar\u0259tsiz \u015f\u0259kild\u0259 toplamaq.  </p> <pre><code>int failureCount = 0;\n\ntry\n{\n    await MakeHttpRequestAsync();\n}\ncatch\n{\n    failureCount++;\n    if (failureCount &gt; 5)\n    {\n        throw new Exception(\"\u00c7ox sayda u\u011fursuz c\u0259hd!\");\n    }\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Polly il\u0259 Circuit Breaker strategiyas\u0131n\u0131 t\u0259tbiq edin.  </p> <pre><code>var circuitBreakerPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .CircuitBreakerAsync(5, TimeSpan.FromMinutes(1));\n\nawait circuitBreakerPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/polly-retry-circuit-breaker/#3-retry-v-circuit-breaker-kombinasiyas","title":"3. Retry v\u0259 Circuit Breaker Kombinasiyas\u0131","text":"<p>Polly, bir ne\u00e7\u0259 strategiyan\u0131 birl\u0259\u015fdir\u0259r\u0259k daha \u00e7evik siyas\u0259tl\u0259r yaratma\u011fa imkan verir.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar circuitBreakerPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .CircuitBreakerAsync(2, TimeSpan.FromSeconds(30));\n\nvar combinedPolicy = Policy.WrapAsync(retryPolicy, circuitBreakerPolicy);\n\nawait combinedPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/polly-retry-circuit-breaker/#4-performans-v-monitorinq","title":"4. Performans v\u0259 Monitorinq","text":"<ul> <li>Loglama: Polly siyas\u0259tl\u0259rind\u0259n istifad\u0259 ed\u0259rk\u0259n loglama ed\u0259r\u0259k u\u011fursuzluq v\u0259 u\u011furlu n\u0259tic\u0259l\u0259ri izl\u0259yin.  </li> <li>Metrikl\u0259r: U\u011fursuzluq nisb\u0259tl\u0259rini v\u0259 devre k\u0259sici v\u0259ziyy\u0259tl\u0259rini \u00f6l\u00e7m\u0259k \u00fc\u00e7\u00fcn metrikl\u0259r \u0259lav\u0259 edin.  </li> </ul> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt;\n    {\n        Console.WriteLine($\"Retry c\u0259hdi: {retryAttempt}\");\n        return TimeSpan.FromSeconds(retryAttempt);\n    });\n</code></pre>"},{"location":"resiliency/timeout-management/","title":"Timeout \u0130dar\u0259etm\u0259si","text":"<p>Timeout, t\u0259tbiql\u0259rd\u0259 uzunm\u00fcdd\u0259tli \u0259m\u0259liyyatlar\u0131 m\u0259hdudla\u015fd\u0131rmaq v\u0259 istifad\u0259\u00e7i t\u0259cr\u00fcb\u0259sini qorumaq \u00fc\u00e7\u00fcn vacib bir strategiyad\u0131r. Polly, \u0259m\u0259liyyatlar\u0131n\u0131zda zaman a\u015f\u0131m\u0131 n\u0259zar\u0259ti \u00fc\u00e7\u00fcn effektiv bir h\u0259ll t\u0259qdim edir.  </p>"},{"location":"resiliency/timeout-management/#1-sas-timeout-idaretmsi","title":"1. \u018fsas Timeout \u0130dar\u0259etm\u0259si","text":"<p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: Timeout n\u0259zar\u0259ti olmadan uzun m\u00fcdd\u0259t g\u00f6zl\u0259m\u0259k.  </p> <pre><code>await MakeHttpRequestAsync(); // Potensial olaraq sonsuza q\u0259d\u0259r g\u00f6zl\u0259y\u0259 bil\u0259r\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Polly il\u0259 zaman a\u015f\u0131m\u0131 n\u0259zar\u0259ti \u0259lav\u0259 edin.  </p> <pre><code>var timeoutPolicy = Policy\n    .TimeoutAsync(TimeSpan.FromSeconds(5));\n\nawait timeoutPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/timeout-management/#2-timeout-v-retry-kombinasiyas","title":"2. Timeout v\u0259 Retry Kombinasiyas\u0131","text":"<p>Timeout v\u0259 Retry siyas\u0259tl\u0259rini birl\u0259\u015fdir\u0259r\u0259k h\u0259m \u0259m\u0259liyyat\u0131 m\u00fc\u0259yy\u0259n bir m\u00fcdd\u0259tl\u0259 m\u0259hdudla\u015fd\u0131ra, h\u0259m d\u0259 x\u0259ta hal\u0131nda yenid\u0259n c\u0259hd ed\u0259 bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nvar timeoutPolicy = Policy\n    .TimeoutAsync(TimeSpan.FromSeconds(5));\n\nvar combinedPolicy = Policy.WrapAsync(retryPolicy, timeoutPolicy);\n\nawait combinedPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/timeout-management/#3-cancellationtoken-il-timeout-idaretmsi","title":"3. <code>CancellationToken</code> il\u0259 Timeout \u0130dar\u0259etm\u0259si","text":"<p>Polly, <code>CancellationToken</code> il\u0259 inteqrasiya olunaraq \u0259m\u0259liyyatlar\u0131 l\u0259\u011fv etm\u0259y\u0259 imkan verir.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var cts = new CancellationTokenSource(TimeSpan.FromSeconds(5));\n\nvar timeoutPolicy = Policy\n    .TimeoutAsync(TimeSpan.FromSeconds(10));\n\nawait timeoutPolicy.ExecuteAsync(\n    async token =&gt; await MakeHttpRequestAsync(token),\n    cts.Token);\n</code></pre>"},{"location":"resiliency/timeout-management/#4-performans-v-monitorinq","title":"4. Performans v\u0259 Monitorinq","text":"<ul> <li>Loglama: Timeout hallar\u0131 izl\u0259m\u0259k \u00fc\u00e7\u00fcn log \u0259lav\u0259 edin.  </li> <li>Uyarlanabil\u0259n Vaxtlar: M\u00fcxt\u0259lif \u0259m\u0259liyyatlar \u00fc\u00e7\u00fcn f\u0259rqli timeout m\u00fcdd\u0259tl\u0259ri t\u0259yin edin.  </li> </ul> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var timeoutPolicy = Policy\n    .TimeoutAsync(TimeSpan.FromSeconds(5), (context, timespan, task) =&gt;\n    {\n        Console.WriteLine($\"Timeout {timespan.TotalSeconds} saniy\u0259d\u0259n sonra ba\u015f verdi.\");\n        return Task.CompletedTask;\n    });\n\nawait timeoutPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/transient-fault-handling/","title":"Ke\u00e7ici X\u0259talar\u0131n \u0130dar\u0259 Edilm\u0259si: Yanl\u0131\u015f v\u0259 D\u00fczg\u00fcn \u0130stifad\u0259","text":"<p>Ke\u00e7ici x\u0259talar (<code>transient faults</code>), \u015f\u0259b\u0259k\u0259 ba\u011flant\u0131lar\u0131 v\u0259 ya xarici xidm\u0259tl\u0259rl\u0259 \u0259laq\u0259 zaman\u0131 ara-s\u0131ra ba\u015f ver\u0259n q\u0131sa m\u00fcdd\u0259tli probleml\u0259rdir. Polly, ke\u00e7ici x\u0259talar\u0131 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn g\u00fccl\u00fc al\u0259tl\u0259r t\u0259qdim ed\u0259r\u0259k t\u0259tbiql\u0259rinizin dayan\u0131ql\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131r.  </p>"},{"location":"resiliency/transient-fault-handling/#1-kecici-xta-ndir","title":"1. Ke\u00e7ici X\u0259ta N\u0259dir?","text":"<p>Ke\u00e7ici x\u0259talar ad\u0259t\u0259n yenid\u0259n c\u0259hd etm\u0259 (<code>retry</code>) il\u0259 h\u0259ll edil\u0259 bil\u0259n q\u0131sa m\u00fcdd\u0259tli probleml\u0259rdir. M\u0259s\u0259l\u0259n: - Zaman a\u015f\u0131m\u0131 (<code>timeout</code>) x\u0259talar\u0131 - M\u00fcv\u0259qq\u0259ti \u015f\u0259b\u0259k\u0259 k\u0259sintil\u0259ri - Xarici xidm\u0259tin m\u00fcv\u0259qq\u0259ti \u0259l\u00e7atmaz olmas\u0131  </p> <p>\u274c Yanl\u0131\u015f \u0130stifad\u0259: X\u0259talar\u0131 idar\u0259 etm\u0259d\u0259n \u0259m\u0259liyyatlar\u0131 yenid\u0259n icra etm\u0259k.  </p> <pre><code>try\n{\n    await MakeHttpRequestAsync();\n}\ncatch\n{\n    await MakeHttpRequestAsync(); // N\u0259zar\u0259tsiz t\u0259krar c\u0259hd\n}\n</code></pre> <p>\u2705 D\u00fczg\u00fcn \u0130stifad\u0259: Polly il\u0259 <code>retry</code> siyas\u0259tini t\u0259tbiq edin.  </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(retryAttempt));\n\nawait retryPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/transient-fault-handling/#2-retry-siyastlri","title":"2. Retry Siyas\u0259tl\u0259ri","text":"<p>Ke\u00e7ici x\u0259talar\u0131 idar\u0259 etm\u0259k \u00fc\u00e7\u00fcn Polly il\u0259 m\u00fcxt\u0259lif <code>retry</code> strategiyalar\u0131n\u0131 t\u0259yin ed\u0259 bil\u0259rsiniz.  </p>"},{"location":"resiliency/transient-fault-handling/#sabit-gecikmli-retry","title":"Sabit Gecikm\u0259li Retry:","text":"<p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, _ =&gt; TimeSpan.FromSeconds(2));\n\nawait retryPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/transient-fault-handling/#artan-gecikmli-retry","title":"Artan Gecikm\u0259li Retry:","text":"<p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(Math.Pow(2, retryAttempt)));\n\nawait retryPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/transient-fault-handling/#jitter-tsadufi-gecikm","title":"Jitter (T\u0259sad\u00fcfi Gecikm\u0259):","text":"<p>Jitter, sabit gecikm\u0259nin yaratd\u0131\u011f\u0131 y\u00fck s\u0131xl\u0131\u011f\u0131n\u0131 azald\u0131r.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt;\n    {\n        var jitter = new Random().NextDouble();\n        return TimeSpan.FromSeconds(retryAttempt + jitter);\n    });\n\nawait retryPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/transient-fault-handling/#3-timeout-v-retry-kombinasiyas","title":"3. Timeout v\u0259 Retry Kombinasiyas\u0131","text":"<p>Timeout v\u0259 retry siyas\u0259tl\u0259rini birl\u0259\u015fdir\u0259r\u0259k daha dayan\u0131ql\u0131 h\u0259ll yarada bil\u0259rsiniz.  </p> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var timeoutPolicy = Policy\n    .TimeoutAsync(TimeSpan.FromSeconds(10));\n\nvar retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt; TimeSpan.FromSeconds(2));\n\nvar combinedPolicy = Policy.WrapAsync(retryPolicy, timeoutPolicy);\n\nawait combinedPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"},{"location":"resiliency/transient-fault-handling/#4-performans-v-monitorinq","title":"4. Performans v\u0259 Monitorinq","text":"<ul> <li>Loglama: Retry \u0259m\u0259liyyatlar\u0131n\u0131 izl\u0259m\u0259k \u00fc\u00e7\u00fcn loglar \u0259lav\u0259 edin.  </li> <li>Metrikl\u0259r: Hans\u0131 \u0259m\u0259liyyatlar\u0131n ke\u00e7ici x\u0259talara s\u0259b\u0259b oldu\u011funu m\u00fc\u0259yy\u0259n etm\u0259k \u00fc\u00e7\u00fcn metrikl\u0259r toplay\u0131n.  </li> </ul> <p>\u2705 N\u00fcmun\u0259: </p> <pre><code>var retryPolicy = Policy\n    .Handle&lt;HttpRequestException&gt;()\n    .WaitAndRetryAsync(3, retryAttempt =&gt;\n    {\n        Console.WriteLine($\"Yenid\u0259n c\u0259hd edilir: {retryAttempt}...\");\n        return TimeSpan.FromSeconds(retryAttempt);\n    });\n\nawait retryPolicy.ExecuteAsync(() =&gt; MakeHttpRequestAsync());\n</code></pre>"}]}